{"version":3,"sources":["components/ElCapitan.jpg","components/UserContext/UserContext.js","components/UserContext/index.js","components/UserContext/User.js","components/Stitch/StitchContext.js","components/Stitch/index.js","components/Stitch/Stitch.js","components/Home.js","components/SignUp.js","components/SignIn.js","components/ConfirmEmail.js","components/ResetPassword.js","components/NavbarAuthentication/NavNonAuth.js","components/NavbarAuthentication/NavAuth.js","components/NavbarAuthentication/index.js","components/Navbar.js","components/FirstLoginData.js","components/Messages.js","components/Communications/index.js","components/InputFields.js","components/Profile/CompanyProfile.js","components/Profile/UserProfile.js","components/Profile/index.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","UserContext","React","createContext","withUserContext","Component","props","Consumer","user","User","updateUser","arg","updated","updateTest","test","this","console","log","args","StitchContext","withStitch","stitch","StitchClass","setUpdateAppjs","updateAppjs","logInAnonymously","a","client","auth","loginWithCredential","AnonymousCredential","then","addUserData","callFunction","result","signUpEmailPassword","authData","emailPassClient","getProviderClient","UserPasswordAuthProviderClient","factory","registerWithEmail","email","password","name","AccountType","catch","err","SignInEmailPassword","credentials","UserPasswordCredential","confirmMail","token","tokenId","Stitch","defaultAppClient","confirmUser","stitchApp","initializeDefaultAppClient","mongodb","getServiceClient","RemoteMongoClient","INITIAL_STATE","passwordOne","passwordTwo","error","SignUpAsUser","onSubmit","event","state","trim","userType","onChange","setState","target","value","isInvalid","className","e","preventDefault","style","boxShadow","onClick","type","placeholder","class","disabled","message","SignUp","inputChangeHandler","input","SignInHandler","customData","userInitialised","history","push","label","config","withRouter","confirmed","queryParams","URLSearchParams","location","search","get","queryUrl","window","to","NavAuth","activeUserAuthInfo","userId","currentUser","Navbar","FirstLoginData","companyName","dob","skills","designation","Street","City","Country","Founded","Website","UpdateData","fieldsData","accountType","State","userData","doc","reqFields","fetched","messages","watcherInitialised","activeUser","scrollToBottom","messagesEnd","scrollIntoView","behavior","sendMessage","MessagesCollection","db","collection","today","Date","date","getDate","getMonth","getFullYear","time","getHours","getMinutes","getSeconds","dateTime","$push","uid","id","query","_id","updateOne","upsert","matchedCount","modifiedCount","watcher","watch","$or","onNext","fullDocument","getMessages","find","membersArr","toArray","response","map","obj","key","position","top","backgroundColor","width","Object","keys","chatId","ref","el","bottom","right","Profile","ems","userName","FieldHandler","height","fontSize","for","aria-hidden","selectedTab","editDescription","Description","Overview","href","Employees","showTeams","teams","length","teamId","substring","addTeam","document","getElementById","Teams","Settings","panelSwitcher","mainPanel","searchUser","searchEmployer","otherUsers","check","b","toLowerCase","includes","showSearchedEmployees","Organisations","fetchUsers","orgKey","Employer","showFriends","friends","friend","Users","addFriend","SearchedFriends","SearchFriendsBar","Friends","updateUserData","refreshCustomData","updateValue","val","basename","src","bg","zIndex","objectFit","path","SignIn","InputFields","component","ConfirmEmail","Boolean","hostname","match","Index","Provider","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5ccc4459.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ElCapitan.5a845c11.jpg\";","import React from \"react\";\n\nconst UserContext = React.createContext(null);\n\nexport const withUserContext = (Component) => (props) => (\n  <UserContext.Consumer>\n    {(user) => <Component {...props} user={user} />}\n  </UserContext.Consumer>\n);\n\nexport default UserContext;\n","import UserContext, { withUserContext } from \"./UserContext\";\nimport User from \"./User\";\nexport default User;\n\nexport { UserContext, withUserContext };\n","class User {\n  constructor() {\n    this.user = false;\n    this.test = \"\";\n    this.updated = () => {\n      console.log(\"function not yet assigned\");\n    };\n  }\n  setUpdater(args) {\n    this.updated = args;\n  }\n  updateUser = (arg) => {\n    this.user = arg;\n    this.updated();\n  };\n  updateTest = (arg) => {\n    this.test = arg;\n    this.updated();\n  };\n}\n\nexport default User;\n","import React from \"react\";\n\nconst StitchContext = React.createContext(null);\n\nexport const withStitch = (Component) => (props) => (\n  <StitchContext.Consumer>\n    {(stitch) => <Component {...props} stitch={stitch} />}\n  </StitchContext.Consumer>\n);\n\nexport default StitchContext;\n","import StitchContext, { withStitch } from \"./StitchContext\";\nimport StitchClass from \"./Stitch\";\nexport default StitchClass;\n\nexport { StitchContext, withStitch };\n","import {\n  Stitch,\n  AnonymousCredential,\n  UserPasswordAuthProviderClient,\n  UserPasswordCredential,\n  RemoteMongoClient,\n  BSON,\n} from \"mongodb-stitch-browser-sdk\";\n\nclass StitchClass {\n  constructor() {\n    /*if (process.env.APP_ID) {\n      this.appId = process.env.APP_ID;\n    }*/\n    this.stitchApp = Stitch.initializeDefaultAppClient(\n      \"employeemanagementstitch-xrbnw\"\n    );\n    this.client = Stitch.defaultAppClient; //eh client mongodb stitch naal communicate karu\n    this.mongodb = this.stitchApp.getServiceClient(\n      RemoteMongoClient.factory,\n      \"mongodb-atlas\"\n    ); //eh database nu access karan vste aa\n    //this.logInAnonymously();\n    this.updateAppjs = null;\n  }\n  setUpdateAppjs = (arg) => {\n    this.updateAppjs = arg;\n  };\n  logInAnonymously = async () => {\n    let user = await this.client.auth\n      .loginWithCredential(new AnonymousCredential())\n      .then((user) => {\n        //this.props.user.updateContext(user);\n        console.log(user);\n        return user;\n      });\n    return user;\n  };\n\n  addUserData = async (args) => {\n    this.client.callFunction(\"AddNewUserData\", [args]).then((result) => {\n      console.log(result);\n    });\n  };\n\n  signUpEmailPassword = async (authData) => {\n    const emailPassClient = this.client.auth.getProviderClient(\n      UserPasswordAuthProviderClient.factory\n    );\n    console.log(emailPassClient);\n    let err = await emailPassClient\n      .registerWithEmail(authData.email, authData.password)\n      .then((result) => {\n        if (result) {\n          console.log(\"Sign Up Successful\");\n          console.log(result);\n        }\n        console.log(result);\n        this.client.auth\n          .loginWithCredential(new AnonymousCredential())\n          .then((user) =>\n            this.client.callFunction(\"AddNewUserToBuffer\", [\n              authData.name,\n              authData.email,\n              authData.AccountType,\n            ])\n          );\n        return result;\n      })\n      .catch((err) => {\n        console.log(\"An error occurred!\");\n        console.log(err);\n        return err;\n      });\n    return err;\n  };\n\n  SignInEmailPassword = async (authData) => {\n    const credentials = new UserPasswordCredential(\n      authData.email,\n      authData.password\n    );\n    let user = await this.client.auth\n      .loginWithCredential(credentials)\n      .then((result) => {\n        console.log(\"Sign In Successful\");\n        console.log(result);\n        this.updateAppjs(result);\n        return result;\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    return user;\n  };\n  confirmMail = async (token, tokenId) => {\n    const emailPassClient = Stitch.defaultAppClient.auth.getProviderClient(\n      UserPasswordAuthProviderClient.factory\n    );\n    let result = await emailPassClient\n      .confirmUser(token, tokenId)\n      .then(() => {\n        return true;\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    return result;\n  };\n}\n\n//export default withUserContext(StitchClass);\nexport default StitchClass;\n","import React, { Component } from \"react\";\nimport { withUserContext } from \"./UserContext\";\nimport { withStitch } from \"./Stitch\";\n\nclass Home extends Component {\n  componentDidMount() {\n    console.log(this.props);\n  }\n  render() {\n    return (\n      <div>\n        <div>this is home page </div>\n      </div>\n    );\n  }\n}\nlet HomeWithUser = withUserContext(Home);\nexport default withStitch(HomeWithUser);\n","import React, { Component } from \"react\";\nimport {\n  Stitch,\n  UserPasswordAuthProviderClient,\n  UserPasswordCredential,\n} from \"mongodb-stitch-browser-sdk\";\nimport { withUserContext } from \"./UserContext\";\nimport { withStitch } from \"./Stitch\";\n\nconst INITIAL_STATE = {\n  name: \"\",\n  email: \"\",\n  passwordOne: \"\",\n  passwordTwo: \"\",\n  error: null,\n  SignUpAsUser: true,\n};\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n  onSubmit = async (event) => {\n    if (\n      this.state.name.trim() === \"\" ||\n      this.state.email.trim() === \"\" ||\n      this.state.passwordOne.trim() === \"\" ||\n      this.state.passwordTwo.trim() === \"\"\n    ) {\n      console.log(\"incomplete form\");\n      return;\n    }\n    if (this.state.passwordOne != this.state.passwordTwo) {\n      console.log(\"paswords not same\");\n      return;\n    }\n    let userType = \"User\";\n    if (this.state.SignUpAsUser == false) {\n      userType = \"Organisation\";\n    }\n    //console.log(authData);\n    let user = await this.props.stitch\n      .signUpEmailPassword({\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.passwordOne,\n        AccountType: userType,\n      })\n      .then((user) => {\n        console.log(user);\n        return user;\n      });\n    // let login = await this.props.stitch.SignInEmailPassword({\n    //   email: this.state.email,\n    //   password: this.state.passwordOne,\n    // });\n    console.log(user);\n    // console.log(login);\n    console.log(\"before\");\n    //this.props.stitch.addUserData(this.state.name, this.);\n    console.log(\"after\");\n  };\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  render() {\n    const {\n      name,\n      email,\n      passwordOne,\n      passwordTwo,\n\n      error,\n    } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === \"\" ||\n      email === \"\" ||\n      name === \"\";\n\n    return (\n      <div\n        className=\"d-flex py-5 align-items-center justify-content-center \"\n        onSubmit={(e) => {\n          this.onSubmit();\n          e.preventDefault();\n        }}\n      >\n        <div className=\"row rounded border align-self-center my-auto col-sm-12 col-md-9 justify-content-center bg-light  p-5\">\n          <div className=\"col-12 text-center display-4\">Sign Up</div>\n          <div\n            className=\"btn-group bg-white col-12 p-0 rounded-pill my-1\"\n            style={{\n              boxShadow:\n                \"inset -1px -1px 10px #666666,  inset 1px 1px 10px #ffffff\",\n            }}\n          >\n            <button\n              className={\n                !this.state.SignUpAsUser\n                  ? \"btn btn-danger col-6 rounded-pill\"\n                  : \"btn col-6 rounded-pill\"\n              }\n              style={\n                !this.state.SignUpAsUser\n                  ? {\n                      boxShadow: \"-5px -5px 10px #666666, 1px 1px 5px #FF6347\",\n                    }\n                  : {}\n              }\n              onClick={() => {\n                this.setState({ SignUpAsUser: false });\n              }}\n            >\n              Sign Up as an Organisation\n            </button>\n\n            <button\n              className={\n                this.state.SignUpAsUser\n                  ? \"btn btn-danger col-6 rounded-pill\"\n                  : \"btn col-6 rounded-pill\"\n              }\n              style={\n                this.state.SignUpAsUser\n                  ? {\n                      boxShadow: \"-5px -5px 10px #666666, 1px 1px 5px #FF6347\",\n                    }\n                  : {}\n              }\n              onClick={() => {\n                this.setState({ SignUpAsUser: true });\n              }}\n            >\n              Sign Up as a User\n            </button>\n          </div>\n          <input\n            name=\"name\"\n            className=\"col-12 m-1 form-control \"\n            value={name}\n            onChange={this.onChange}\n            type=\"text\"\n            placeholder=\"Name\"\n            style={{\n              boxShadow:\n                \"inset -1px -1px 3px #666666, inset 1px 1px 3px #ffffff\",\n            }}\n          />\n          <input\n            name=\"email\"\n            className=\"col-12 m-1 form-control \"\n            value={email}\n            onChange={this.onChange}\n            type=\"text\"\n            placeholder=\"Email Address\"\n            style={{\n              boxShadow:\n                \"inset -1px -1px 3px #666666, inset 1px 1px 3px #ffffff\",\n            }}\n          />\n          <input\n            name=\"passwordOne\"\n            className=\"col-12 m-1 form-control \"\n            value={passwordOne}\n            onChange={this.onChange}\n            type=\"password\"\n            placeholder=\"Password\"\n            style={{\n              boxShadow:\n                \"inset -1px -1px 3px #666666, inset 1px 1px 3px #ffffff\",\n            }}\n          />\n          <input\n            name=\"passwordTwo\"\n            className=\"col-12 m-1 form-control \"\n            value={passwordTwo}\n            onChange={this.onChange}\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            style={{\n              boxShadow:\n                \"inset -1px -1px 3px #666666, inset 1px 1px 3px #ffffff\",\n            }}\n          />\n          <button\n            class=\"btn btn-dark col-6  my-1\"\n            disabled={isInvalid}\n            type=\"submit\"\n            onClick={() => this.onSubmit()}\n            style={{\n              boxShadow: \" -1px -1px 3px #666666,  1px 1px 3px #ffffff\",\n            }}\n          >\n            Sign Up\n          </button>\n          {error && <p>{error.message}</p>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStitch(withUserContext(SignUp));\n","import React, { Component } from \"react\";\nimport {\n  Stitch,\n  UserPasswordAuthProviderClient,\n  UserPasswordCredential,\n} from \"mongodb-stitch-browser-sdk\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { withUserContext } from \"./UserContext\";\nimport { withStitch } from \"./Stitch\";\n\nclass SignUp extends Component {\n  state = { email: \"\", password: \"\" };\n\n  inputChangeHandler = (event, input) => {\n    this.setState({ [input]: event.target.value });\n  };\n  SignInHandler = async () => {\n    let authData = { email: this.state.email, password: this.state.password };\n    if (authData.email.trim() === \"\" || authData.password.trim() === \"\") {\n      return;\n    }\n    let user = await this.props.stitch\n      .SignInEmailPassword(authData)\n      .then((user) => {\n        console.log(user);\n        console.log(this.props.stitch);\n        if (user.customData.userInitialised == true) {\n          this.props.history.push(\"/Profile\");\n        } else {\n          this.props.history.push(\"/FirstLoginData\");\n        }\n        return user;\n      });\n\n    /*this.props.stitch.client\n      .callFunction(\"CheckUserData\", [\"hello\"])\n      .then((result) => {\n        console.log(result);\n      });*/\n    console.log(this.props.stitch);\n  };\n  componentDidUpdate() {\n    console.log(this.props.stitch);\n  }\n  render() {\n    return (\n      <main className=\"d-flex m-5 justify-content-center\">\n        <div className=\"row col-sm-12 col-md-9 justify-content-center bg-light shadow p-5\">\n          <div className=\"col-12 text-center display-4\">Sign In</div>\n\n          <input\n            className=\"col-12 m-1 form-control shadow\"\n            label=\"E-Mail\"\n            config={{ type: \"email\" }}\n            onChange={(event) => this.inputChangeHandler(event, \"email\")}\n          />\n          <input\n            className=\"col-12 mt-1 form-control shadow\"\n            label=\"Password\"\n            type=\"password\"\n            config={{ type: \"password\" }}\n            onChange={(event) => this.inputChangeHandler(event, \"password\")}\n          />\n          <button\n            className=\"btn btn-dark m-1 col-6 shadow\"\n            onClick={() => this.SignInHandler()}\n          >\n            Sign In\n          </button>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default withRouter(withStitch(SignUp));\n","import React, { Component } from \"react\";\nimport { withStitch } from \"./Stitch\";\n\nclass ConfirmEmail extends Component {\n  state = { confirmed: false };\n  componentDidMount() {\n    const queryParams = new URLSearchParams(this.props.location.search);\n    const token = queryParams.get(\"token\");\n    const tokenId = queryParams.get(\"tokenId\");\n    console.log(this.props);\n    this.props.stitch.confirmMail(token, tokenId).then((result) => {\n      console.log(result);\n      this.setState({ confirmed: result });\n    });\n  }\n  render() {\n    if (this.state.confirmed) {\n      return (\n        <main className=\"d-flex m-5 justify-content-center\">\n          <div className=\"row col-sm-12 col-md-9 justify-content-center bg-light shadow p-5\">\n            <div className=\"col-12 text-center display-4\">\n              Thank You For Confirming Your Email\n            </div>\n          </div>\n        </main>\n      );\n    } else {\n      return (\n        <main className=\"d-flex m-5 justify-content-center\">\n          <div className=\"row col-sm-12 col-md-9 justify-content-center bg-light shadow p-5\">\n            <div className=\"col-12 text-center display-4\">confirming ...</div>\n          </div>\n        </main>\n      );\n    }\n  }\n}\n\nexport default withStitch(ConfirmEmail);\n","import React, { Component } from \"react\";\nimport { withStitch } from \"./Stitch\";\n\nclass ResetPassword extends Component {\n  state = { confirmed: false };\n  componentDidMount() {\n    const queryUrl = window.location.search;\n    const queryParams = new URLSearchParams(queryUrl);\n    const token = queryParams.get(\"token\");\n    const tokenId = queryParams.get(\"tokenId\");\n    /*const emailPassClient = Stitch.defaultAppClient.auth.getProviderClient(\n      UserPasswordAuthProviderClient.factory\n    );\n    emailPassClient\n      .confirmUser(token, tokenId)\n      .then()\n      .catch((err) => {\n        console.log(err);\n      });*/\n  }\n  render() {\n    if (this.state.confirmed) {\n      return <div>Thank You For Confirming Your Email</div>;\n    } else {\n      return <div>confirming ...</div>;\n    }\n  }\n}\n\nexport default withStitch(ResetPassword);\n","import React, { Component } from \"react\";\nimport { withUserContext } from \"../UserContext\";\nimport SignUp from \"../SignUp\";\nimport SignIn from \"../SignIn\";\nimport { Link } from \"react-router-dom\";\n\nclass NavNonAuth extends Component {\n  render() {\n    return (\n      <div>\n        <Link to=\"/SignUp\" className=\"btn btn-dark my-2 my-sm-0\">\n          Sign Up\n        </Link>\n        <Link to=\"/SignIn\" className=\"btn btn-dark my-2 my-sm-0\">\n          Sign In\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default withUserContext(NavNonAuth);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nclass NavAuth extends Component {\n  render() {\n    return (\n      <div>\n        <Link to=\"/Profile\" className=\"btn btn-dark\">\n          {this.props.name}\n        </Link>\n        <Link to=\"/messages\" className=\"btn btn-dark\">\n          Messages\n        </Link>\n        <button className=\"btn btn-dark\">Sign Out</button>\n      </div>\n    );\n  }\n}\n\nexport default NavAuth;\n","import React, { Component } from \"react\";\nimport Navbar from \"../Navbar\";\nimport { withUserContext, UserContext } from \"../UserContext\";\nimport NavNonAuth from \"./NavNonAuth\";\nimport NavAuth from \"./NavAuth\";\nimport { withStitch } from \"../Stitch\";\n\nclass NavbarAuthentication extends Component {\n  state = { user: {} };\n  //state = { user: null };\n  /*componentDidUpdate(prevProps) {\n    console.log(\"prev props\");\n    console.log(prevProps);\n    console.log(\"current props\");\n    console.log(this.props);\n    if (this.state.user != this.props.stitch.client) {\n      console.log(\"updating user\");\n      this.setState({ user: this.props.stitch.client });\n    }\n  }*/\n  componentDidUpdate() {\n    console.log(this.state.user);\n    console.log(\"navbar updated\");\n    if (this.props.user != this.state.user) {\n      console.log(\"updating navbar\");\n      console.log(this.props.user);\n      this.setState({ user: this.props.user });\n    }\n  }\n\n  render() {\n    // if (this.state.user != this.props.stitch.client) {\n    //   this.setState({ user: this.props.stitch.client });\n    // }\n    console.log(this.props.stitch.client);\n    //if (this.state.user == null || this.state.user == false) {\n    if (this.props.stitch.client.auth.activeUserAuthInfo.userId) {\n      return (\n        <div>\n          <NavAuth\n            name={this.props.stitch.client.auth.currentUser.customData.name}\n          />\n        </div>\n      );\n    } else {\n      return <NavNonAuth />;\n    }\n  }\n}\n\nexport default withStitch(NavbarAuthentication);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport NavbarAuthentication from \"./NavbarAuthentication\";\nclass Navbar extends Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-dark bg-dark\">\n          <div className=\"flex-grow-1\">\n            <Link className=\"navbar-brand flex-grow-1\" to=\"/\">\n              EMS\n            </Link>\n            {/* <button className=\"btn btn-dark btn-sm\">console.log(user)</button> */}\n          </div>\n          <div className=\"col-4\"></div>\n          <NavbarAuthentication />\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { withStitch } from \"./Stitch\";\n\nclass FirstLoginData extends Component {\n  componentDidUpdate() {\n    console.log(this.props.stitch);\n  }\n  state = {\n    companyName: \"\",\n    dob: \"\",\n    skills: \"\",\n    designation: \"\",\n    Street: \"\",\n    City: \"\",\n    Country: \"\",\n    Founded: \"\",\n    Website: \"\",\n  };\n  componentDidMount() {\n    console.log(this.props);\n  }\n  UpdateData = async () => {\n    var fieldsData = {};\n    if (\n      this.props.stitch.client.auth.currentUser.customData.accountType == \"User\"\n    ) {\n      fieldsData = {\n        accountType: \"User\",\n        Street: this.state.Street,\n        City: this.state.City,\n        State: this.state.State,\n        Country: this.state.Country,\n\n        dob: this.state.dob,\n      };\n      if (\n        fieldsData.Street.trim() === \"\" ||\n        fieldsData.City.trim() === \"\" ||\n        fieldsData.State.trim() === \"\" ||\n        fieldsData.Country.trim() === \"\" ||\n        fieldsData.dob.trim() == \"\"\n      ) {\n        console.log(\"error\");\n        return;\n      }\n    } else {\n      fieldsData = {\n        accountType: \"Organisation\",\n        Street: this.state.Street,\n        City: this.state.City,\n        State: this.state.State,\n        Country: this.state.Country,\n\n        Website: this.state.Website,\n        Founded: this.state.Founded,\n      };\n      if (\n        fieldsData.Street.trim() === \"\" ||\n        fieldsData.City.trim() === \"\" ||\n        fieldsData.State.trim() === \"\" ||\n        fieldsData.Country.trim() === \"\" ||\n        fieldsData.Website.trim() === \"\" ||\n        fieldsData.Founded.trim() === \"\"\n      ) {\n        console.log(\"error\");\n        return;\n      }\n    }\n\n    await this.props.stitch.client\n      .callFunction(\"UpdateUserData\", [fieldsData])\n      .then((result) => {\n        const userData = result.doc;\n        console.log(\"user data\" + userData);\n        if (userData.reqFields == true) {\n          console.log(\"successfull\");\n        }\n        this.props.history.push(\"/Profile\");\n      });\n  };\n  inputChangeHandler = (event, input) => {\n    this.setState({ [input]: event.target.value });\n  };\n  render() {\n    if (\n      this.props.stitch.client &&\n      this.props.stitch.client.auth &&\n      this.props.stitch.client.auth.currentUser &&\n      this.props.stitch.client.auth.currentUser.customData\n    ) {\n      if (\n        this.props.stitch.client.auth.currentUser.customData.accountType ==\n        \"User\"\n      ) {\n        return (\n          <main className=\"d-flex m-5 justify-content-center\">\n            <div className=\"row col-sm-12 col-md-9 justify-content-center bg-light shadow p-5\">\n              <div className=\"col-12 text-center display-4\">\n                New User Account\n              </div>\n              <div className=\"col-12\">Address</div>\n              <input\n                className=\"col-12 m-1 form-control shadow\"\n                label=\"Street\"\n                config={{ type: \"Street\" }}\n                placeholder=\"Street\"\n                onChange={(event) => this.inputChangeHandler(event, \"Street\")}\n              />\n              <input\n                className=\"col-12 m-1 form-control shadow\"\n                label=\"E-Mail\"\n                config={{ type: \"City\" }}\n                placeholder=\"City\"\n                onChange={(event) => this.inputChangeHandler(event, \"City\")}\n              />\n              <input\n                className=\"col-12 m-1 form-control shadow\"\n                label=\"State\"\n                config={{ type: \"State\" }}\n                placeholder=\"State\"\n                onChange={(event) => this.inputChangeHandler(event, \"State\")}\n              />\n              <input\n                className=\"col-12 m-1 form-control shadow\"\n                label=\"Country\"\n                config={{ type: \"Country\" }}\n                placeholder=\"Country\"\n                onChange={(event) => this.inputChangeHandler(event, \"Country\")}\n              />\n              <div className=\"col-12\">Date of Birth</div>\n              <input\n                className=\"col-12 m-1 form-control shadow\"\n                type=\"date\"\n                label=\"dob\"\n                config={{ type: \"dob\" }}\n                placeholder=\"Date of Birth\"\n                onChange={(event) => this.inputChangeHandler(event, \"dob\")}\n              />\n              <button\n                className=\"btn btn-dark\"\n                onClick={() => this.UpdateData()}\n              >\n                Save Details\n              </button>\n            </div>\n          </main>\n        );\n      } else\n        return (\n          <main className=\"d-flex m-5 justify-content-center\">\n            <div className=\"row col-sm-12 col-md-9 justify-content-center bg-light shadow p-5\">\n              <div className=\"col-12 text-center display-4\">\n                New Company Account\n              </div>\n              <div className=\"col-12\">Website</div>\n              <input\n                className=\"col-12 m-1 form-control shadow\"\n                label=\"Website\"\n                config={{ type: \"Website\" }}\n                placeholder=\"Website\"\n                onChange={(event) => this.inputChangeHandler(event, \"Website\")}\n              />\n              <div className=\"col-12\">Address</div>\n              <input\n                className=\"col-12 m-1 form-control shadow\"\n                label=\"Street\"\n                config={{ type: \"Street\" }}\n                placeholder=\"Street\"\n                onChange={(event) => this.inputChangeHandler(event, \"Street\")}\n              />\n              <input\n                className=\"col-12 m-1 form-control shadow\"\n                label=\"City\"\n                config={{ type: \"City\" }}\n                placeholder=\"City\"\n                onChange={(event) => this.inputChangeHandler(event, \"City\")}\n              />\n              <input\n                className=\"col-12 m-1 form-control shadow\"\n                label=\"E-Mail\"\n                config={{ type: \"State\" }}\n                placeholder=\"State\"\n                onChange={(event) => this.inputChangeHandler(event, \"State\")}\n              />\n              <input\n                className=\"col-12 m-1 form-control shadow\"\n                label=\"Country\"\n                config={{ type: \"Country\" }}\n                placeholder=\"Country\"\n                onChange={(event) => this.inputChangeHandler(event, \"Country\")}\n              />\n              <div className=\"col-12\">Founded</div>\n              <input\n                className=\"col-12 m-1 form-control shadow\"\n                type=\"date\"\n                label=\"Founded\"\n                config={{ type: \"Founded\" }}\n                placeholder=\"Founded\"\n                onChange={(event) => this.inputChangeHandler(event, \"Founded\")}\n              />\n              <button\n                className=\"btn btn-dark\"\n                onClick={() => this.UpdateData()}\n              >\n                Save Details\n              </button>\n            </div>\n          </main>\n        );\n    } else {\n      return (\n        <main className=\"d-flex m-5 justify-content-center\">\n          <div className=\"row col-sm-12 col-md-9 justify-content-center bg-light shadow p-5\">\n            <div className=\"col-12 text-center display-4\">Loading</div>\n          </div>\n        </main>\n      );\n    }\n  }\n}\n\nexport default withRouter(withStitch(FirstLoginData));\n","import React, { Component } from \"react\";\nimport { withStitch } from \"./Stitch\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Navbar from \"./Navbar\";\n\nclass Messages extends Component {\n  state = {\n    fetched: null,\n    messages: null,\n    watcherInitialised: null,\n    activeUser: null,\n    message: \"\",\n  };\n  componentDidMount() {\n    /*this.props.stitch.client\n      .callFunction(\"getMessages\", [\n        { uid: this.props.stitch.client.auth.currentUser.id },\n      ])\n      .then((response) => {\n        this.setState({ messages: response.messages });\n      });*/\n\n    this.getMessages();\n  }\n  componentDidUpdate() {\n    console.log(this.state);\n    if (!this.state.watcherInitialised && this.state.messages != null) {\n      this.watcher();\n      this.setState({ watcherInitialised: true });\n    }\n    this.scrollToBottom();\n  }\n  scrollToBottom = () => {\n    this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n  };\n  getMessages() {\n    console.log(this.props.stitch.client.auth.currentUser.id);\n    const MessagesCollection = this.props.stitch.mongodb\n      .db(\"Messages\")\n      .collection(\"Messages\");\n    const messages = MessagesCollection.find({\n      membersArr: this.props.stitch.client.auth.currentUser.id,\n      //uid: this.props.stitch.client.auth.currentUser.id,\n      //name: this.props.stitch.client.auth.currentUser.customData.name,\n    })\n      .toArray()\n      .then((response) => {\n        console.log(response);\n        var messages = {};\n        response.map((obj, key) => {\n          messages[obj[this.props.stitch.client.auth.currentUser.id].uid] = obj;\n        });\n        this.setState({ messages: messages, fetched: true });\n      });\n    //this.watcher();\n  }\n  sendMessage = async () => {\n    const MessagesCollection = this.props.stitch.mongodb\n      .db(\"Messages\")\n      .collection(\"Messages\");\n    var today = new Date();\n    var date =\n      today.getDate() +\n      \"-\" +\n      (today.getMonth() + 1) +\n      \"-\" +\n      today.getFullYear();\n    var time =\n      today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n    var dateTime = date + \" \" + time;\n    var message = {\n      $push: {\n        messages: {\n          uid: this.props.stitch.client.auth.currentUser.id,\n          message: this.state.message,\n          time: dateTime,\n        },\n      },\n    };\n    let query = {\n      _id: this.state.messages[this.state.activeUser.uid]._id,\n    };\n    //query[this.props.stitch.client.auth.currentUser.id] = {};\n    //query[this.props.stitch.client.auth.currentUser.id][\"uid\"] = this.state.activeUser.uid;\n    let doc = MessagesCollection.updateOne(query, message, {\n      upsert: false,\n    }).then((result) => {\n      const { matchedCount, modifiedCount } = result;\n      if (matchedCount && modifiedCount) {\n        console.log(`Successfully updated the team.`);\n      }\n      return result;\n    });\n    this.setState({ message: \"\" });\n  };\n  watcher = async () => {\n    // Create a change stream that watches the collection\n    // for when any document's 'status' field is changed\n    // to the string 'blocked'.\n\n    const MessagesCollection = this.props.stitch.mongodb\n      .db(\"Messages\")\n      .collection(\"Messages\");\n    const stream = await MessagesCollection.watch({\n      $or: [\n        {\n          \"fullDocument.membersArr\": this.props.stitch.client.auth.currentUser\n            .id,\n        },\n      ],\n    });\n    // Set up a change event handler function for the stream\n    stream.onNext((event) => {\n      console.log(\"hello there\");\n      console.log(event.fullDocument);\n      var messages = this.state.messages;\n      messages[\n        event.fullDocument[this.props.stitch.client.auth.currentUser.id].uid\n      ] = event.fullDocument;\n      this.setState({ messages: messages });\n    });\n    console.log(\"hello\");\n    // Insert a document with status set to 'blocked'\n    // to trigger the stream onNext handler\n    /*await MessagesCollection.insertOne({\n      name: \"test\",\n      status: \"blocked\",\n    });*/\n  };\n  render() {\n    console.log(this.state);\n    return (\n      <div\n        className=\"d-flex flex-column text-light vh-100 vw-100\"\n        style={{ position: \"fixed\", top: 0, backgroundColor: \"rgb(50,50,50)\" }}\n      >\n        <div className=\"flex-row\">\n          <Navbar />\n        </div>\n        <div id=\"topRow\" className=\"flex-row\">\n          <div className=\"row m-0 p-0\">\n            <div\n              className=\"p-2 border-bottom border-secondary\"\n              style={{ width: \"300px\" }}\n            >\n              <input\n                className=\"form-control bg-dark\"\n                placeholder=\"search\"\n              ></input>\n            </div>\n            <div\n              className=\"px-2 py-3 overflow-hidden flex-grow-1 border-bottom border-left border-secondary\"\n              style={{ backgroundColor: \"rgb(35,35,35)\" }}\n            >\n              {this.state.activeUser ? this.state.activeUser.name : \"\"}\n            </div>\n          </div>\n        </div>\n        <div id=\"mainArea\" className=\"flex-row d-flex flex-grow-1\">\n          <div\n            id=\"mainAreaLeft\"\n            className=\"flex-row  m-0 px-2 bg-dark overflow-auto\"\n            style={{ width: \"300px\" }}\n          >\n            {this.state.messages ? (\n              Object.keys(this.state.messages).map((chatId) => (\n                <button\n                  className=\"col-12 btn btn-dark\"\n                  onClick={() => {\n                    this.setState({\n                      activeUser: this.state.messages[chatId][\n                        this.props.stitch.client.auth.currentUser.id\n                      ],\n                      message: \"\",\n                    });\n                  }}\n                >\n                  {\n                    this.state.messages[chatId][\n                      this.props.stitch.client.auth.currentUser.id\n                    ].name\n                  }\n                </button>\n              ))\n            ) : (\n              <div className=\"text-secondary\">Loading</div>\n            )}\n          </div>\n          <div\n            id=\"mainAreaRight\"\n            className=\"flex-column m-0 px-2 flex-grow-1 overflow-auto border-left border-secondary\"\n          >\n            <div className=\"flex-row px-1 overflow-auto mb-5\">\n              {this.state.activeUser ? (\n                Object.keys(\n                  this.state.messages[this.state.activeUser.uid].messages\n                ).map((message) =>\n                  this.state.messages[this.state.activeUser.uid].messages[\n                    message\n                  ].uid == this.props.stitch.client.auth.currentUser.id ? (\n                    <div className=\"d-flex col-12 mt-1 justify-content-start\">\n                      <div className=\"btn btn-primary disabled\">\n                        {\n                          this.state.messages[this.state.activeUser.uid]\n                            .messages[message].message\n                        }\n                      </div>\n                    </div>\n                  ) : (\n                    <div className=\"d-flex col-12 mt-1 justify-content-end\">\n                      <div className=\"btn btn-secondary disabled\">\n                        {\n                          this.state.messages[this.state.activeUser.uid]\n                            .messages[message].message\n                        }\n                      </div>\n                    </div>\n                  )\n                )\n              ) : (\n                <div></div>\n              )}\n              <div\n                ref={(el) => {\n                  this.messagesEnd = el;\n                }}\n              >\n                {\"\"}\n              </div>\n            </div>\n            <div\n              className=\"d-flex col-6 rounded border border-secondary bg-dark px-1\"\n              style={{\n                position: \"absolute\",\n                bottom: \"0\",\n                right: \"10px\",\n              }}\n            >\n              <input\n                value={this.state.message}\n                className=\"flex-grow-1 text-light form-control rounded-0 border-left-0 border-bottom-0 border-top-0 border-secondary bg-dark\"\n                onChange={(event) => {\n                  this.setState({ message: event.target.value });\n                }}\n              ></input>\n              <button\n                className={\n                  this.state.activeUser\n                    ? \"flex-shrink-1 btn rounded-0 btn-dark\"\n                    : \"flex-shrink-1 btn rounded-0 btn-dark disabled\"\n                }\n                onClick={() => {\n                  this.sendMessage(this.state.activeUser);\n                }}\n              >\n                send\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStitch(Messages);\n","import React, { Component } from \"react\";\n\nclass CommunicationsPage extends Component {\n  render() {\n    return <div className=\"bg-dark\">Comms</div>;\n  }\n}\n\nexport default CommunicationsPage;\n","import React, { Component } from \"react\";\nimport { withUserContext } from \"./UserContext\";\nimport { withStitch } from \"./Stitch\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min.js\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport { Stitch } from \"mongodb-stitch-browser-sdk\";\nclass Profile extends Component {\n  state = { ems: \"\", companyName: \"\", dob: \"\", designation: \"\", userName: \"\" };\n  inputChangeHandler = (event, input) => {\n    this.setState({ [input]: event.target.value });\n  };\n  FieldHandler = async () => {\n    let fieldsData = {\n      companyName: this.state.companyName,\n      ems: this.state.ems,\n      dob: this.state.dob,\n      designation: this.state.designation,\n      userName: this.state.userName,\n    };\n    if (\n      fieldsData.companyName.trim() === \"\" ||\n      fieldsData.ems.trim() === \"\" ||\n      fieldsData.designation.trim() === \"\" ||\n      fieldsData.userName.trim() === \"\"\n    ) {\n      console.log(\"errror\");\n      return;\n    }\n\n    const client = Stitch.defaultAppClient;\n    await client.callFunction(\"UpdateUserData\", [fieldsData]).then((result) => {\n      const userData = result.doc;\n      console.log(\"user data\" + userData);\n      this.props.history.push(\"/Profile\");\n      if (userData.reqFields == true) {\n        console.log(\"successfull\");\n      }\n    });\n  };\n  render() {\n    return (\n      <div\n        className=\"d-flex justify-content-center py-5 align-items-center \"\n        style={{ width: \"100%\", height: \"100%\" }}\n      >\n        <div className=\"main col-md-9 my-auto bg-light py-5 px-3\">\n          <div className=\"main-center\">\n            <h5 className=\"display-4\" style={{ fontSize: \"3vw\" }}>\n              Sign up once and watch any of our free demos.\n            </h5>\n\n            <div className=\"form-group\">\n              <label for=\"name\">User Name</label>\n              <div className=\"input-group\">\n                <span className=\"input-group-addon\">\n                  <i className=\"fa fa-user fa\" aria-hidden=\"true\"></i>\n                </span>\n                <input\n                  type=\"text\"\n                  className=\"form-control shadow\"\n                  name=\"name\"\n                  id=\"name\"\n                  placeholder=\"Enter your Company's EMS ID\"\n                  onChange={(event) =>\n                    this.inputChangeHandler(event, \"userName\")\n                  }\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label for=\"name\">Company EMS Id</label>\n              <div className=\"input-group\">\n                <span className=\"input-group-addon\">\n                  <i className=\"fa fa-user fa\" aria-hidden=\"true\"></i>\n                </span>\n                <input\n                  type=\"text\"\n                  className=\"form-control shadow\"\n                  name=\"name\"\n                  id=\"name\"\n                  placeholder=\"Enter your Company's EMS ID\"\n                  onChange={(event) => this.inputChangeHandler(event, \"ems\")}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label for=\"name\">Company Name</label>\n              <div className=\"input-group\">\n                <span className=\"input-group-addon\">\n                  <i className=\"fa fa-user fa\" aria-hidden=\"true\"></i>\n                </span>\n                <input\n                  type=\"text\"\n                  className=\"form-control shadow\"\n                  name=\"name\"\n                  id=\"name\"\n                  placeholder=\"Enter your Company Name\"\n                  onChange={(event) =>\n                    this.inputChangeHandler(event, \"companyName\")\n                  }\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label for=\"email\">Your Designation</label>\n              <div className=\"input-group\">\n                <span className=\"input-group-addon\">\n                  <i className=\"fa fa-envelope fa\" aria-hidden=\"true\"></i>\n                </span>\n                <input\n                  type=\"text\"\n                  className=\"form-control shadow\"\n                  name=\"email\"\n                  placeholder=\"Enter your Designation\"\n                  onChange={(event) =>\n                    this.inputChangeHandler(event, \"designation\")\n                  }\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label for=\"username\">Date of Birth</label>\n              <div className=\"input-group\">\n                <span className=\"input-group-addon\">\n                  <i className=\"fa fa-users fa\" aria-hidden=\"true\"></i>\n                </span>\n                <input\n                  type=\"date\"\n                  className=\"form-control shadow\"\n                  name=\"username\"\n                  placeholder=\"Enter your DOB\"\n                  onChange={(event) => this.inputChangeHandler(event, \"dob\")}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label for=\"password\">Password</label>\n              <div className=\"input-group\">\n                <span className=\"input-group-addon\">\n                  <i className=\"fa fa-lock fa-lg\" aria-hidden=\"true\"></i>\n                </span>\n                <input\n                  type=\"password\"\n                  className=\"form-control shadow\"\n                  name=\"password\"\n                  placeholder=\"Enter your Password\"\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label for=\"confirm\">Confirm Password</label>\n              <div className=\"input-group shadow\">\n                <span className=\"input-group-addon\">\n                  <i className=\"fa fa-lock fa-lg\" aria-hidden=\"true\"></i>\n                </span>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  name=\"confirm\"\n                  placeholder=\"Confirm your Password\"\n                />\n              </div>\n            </div>\n\n            <button\n              className=\"btn px-5 btn-dark\"\n              type=\"submit\"\n              onClick={() => this.FieldHandler()}\n            >\n              SUBMIT\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(withStitch(withUserContext(Profile)));\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withStitch } from \"../Stitch\";\nclass CompanyProfile extends Component {\n  state = { selectedTab: \"Overview\", editDescription: false };\n  Description = () => {\n    if (this.props.user.Description) {\n    } else if (this.state.editDescription) {\n      return (\n        <div>\n          <textarea className=\"col-12 form-control\"></textarea>\n          <button\n            className=\"btn btn-dark py-0\"\n            style={{ height: \"24px\", fontSize: \"10px\" }}\n          >\n            Save changes...\n          </button>\n        </div>\n      );\n    } else {\n      return (\n        <button\n          className=\"btn btn-dark py-0\"\n          style={{ height: \"24px\", fontSize: \"10px\" }}\n          onClick={() => {\n            this.setState({ editDescription: true });\n          }}\n        >\n          Add Description...\n        </button>\n      );\n    }\n  };\n  Overview = () => {\n    return (\n      <div className=\"col-12 row\">\n        <div className=\"col-3 font-weight-bold pr-2\">About:</div>\n        <div className=\"col-9\">{this.Description()}</div>\n        <div className=\"col-3 font-weight-bold pr-2\">Website:</div>\n        <div className=\"col-9\">\n          <a href={this.props.user.Website} className=\"col-12 pl-0\">\n            {this.props.user.Website}\n          </a>\n          <button\n            className=\"btn btn-secondary py-0 disabled\"\n            style={{ height: \"24px\", fontSize: \"10px\" }}\n          >\n            edit\n          </button>\n        </div>\n        <div className=\"col-3 font-weight-bold pr-2\">Location:</div>\n        <div className=\"col-9\">\n          <div className=\"col-12 pl-0\">\n            {this.props.user.Street},\n            <button\n              className=\"btn btn-secondary py-0 disabled\"\n              style={{ height: \"24px\", fontSize: \"10px\" }}\n            >\n              edit\n            </button>\n          </div>\n          <div className=\"col-12 pl-0\">{this.props.user.City},</div>\n          <div className=\"col-12 pl-0 \">{this.props.user.State},</div>\n          <div className=\"col-12 pl-0\">{this.props.user.Country}</div>\n        </div>\n      </div>\n    );\n  };\n  Employees = () => {\n    return <div></div>;\n  };\n  showTeams = () => {\n    console.log(this.props.user);\n    if (Object.keys(this.props.user.teams).length == 0)\n      return <div>No Teams (Add a new team to start)</div>;\n    else\n      return (\n        <div className=\"col-12\">\n          {Object.keys(this.props.user.teams).map((teamId) => (\n            <Link\n              to=\"/team/\"\n              className=\"btn btn-secondary col-12 my-1 mx-0\"\n              key={teamId}\n            >\n              {this.props.user.teams[teamId]}-\n              {teamId.substring(teamId.length - 4, teamId.length)}\n            </Link>\n          ))}\n        </div>\n      );\n  };\n  addTeam = async () => {\n    var name = document.getElementById(\"newTeamName\").value;\n    console.log(name);\n    if (name.trim() === \"\") return;\n    await this.props.stitch.client\n      .callFunction(\"CreateNewTeam\", [{ name: name }])\n      .then((result) => {\n        console.log(\"succesful\");\n        console.log(result);\n      });\n  };\n  Teams = () => {\n    return (\n      <div className=\"col-12 row\">\n        <div className=\"col-12 btn-group mb-3\">\n          <input\n            id=\"newTeamName\"\n            className=\"form-control col-md-8 col-7\"\n            placeholder=\"Team Name\"\n            type=\"text\"\n          ></input>\n          <button\n            className=\"btn btn-dark col-md-4 col-5\"\n            onClick={() => this.addTeam()}\n          >\n            Add Team\n          </button>\n        </div>\n        <div className=\"col-3 font-weight-bold pr-2\">Teams:</div>\n        <div className=\"col-9\">\n          <div className=\"col-12\">{this.showTeams()}</div>\n        </div>\n      </div>\n    );\n  };\n  Settings = () => {\n    return <div>Settings</div>;\n  };\n  panelSwitcher = () => {\n    if (this.state.selectedTab == \"Overview\") return this.Overview();\n    if (this.state.selectedTab == \"Teams\") return this.Teams();\n    if (this.state.selectedTab == \"Settings\") return this.Settings();\n    if (this.state.selectedTab == \"Employees\") return this.Employees();\n  };\n  mainPanel = () => {\n    return (\n      <div className=\"row pt-1 pb-5\">\n        <div className=\"col-12 h3 font-weight-light\">\n          {this.state.selectedTab}\n        </div>\n        {this.panelSwitcher()}\n      </div>\n    );\n  };\n  render() {\n    return (\n      <main className=\"d-flex mt-md-5 justify-content-center\">\n        <div className=\"row col-sm-12 col-md-10 col-lg-8 justify-content-center bg-light shadow px-0\">\n          <div className=\"col-12 text-center border-bottom display-4 py-5\">\n            {this.props.user.name}\n          </div>\n          <div className=\"col-4 border-right pb-5\">\n            <button\n              className={\n                this.state.selectedTab == \"Overview\"\n                  ? \"col-12 btn btn btn-light text-primary\"\n                  : \"col-12 btn btn-light text-secondary\"\n              }\n              onClick={() => this.setState({ selectedTab: \"Overview\" })}\n            >\n              Overview\n            </button>\n            <button\n              className={\n                this.state.selectedTab == \"Teams\"\n                  ? \"col-12 btn btn btn-light text-primary\"\n                  : \"col-12 btn btn-light text-secondary\"\n              }\n              onClick={() => this.setState({ selectedTab: \"Teams\" })}\n            >\n              Teams\n            </button>\n            <button\n              className={\n                this.state.selectedTab == \"Employees\"\n                  ? \"col-12 btn btn btn-light text-primary\"\n                  : \"col-12 btn btn-light text-secondary\"\n              }\n              onClick={() => this.setState({ selectedTab: \"Employees\" })}\n            >\n              Employees\n            </button>\n            <button\n              className={\n                this.state.selectedTab == \"Settings\"\n                  ? \"col-12 btn btn btn-light text-primary\"\n                  : \"col-12 btn btn-light text-secondary\"\n              }\n              onClick={() => this.setState({ selectedTab: \"Settings\" })}\n            >\n              Settings\n            </button>\n          </div>\n          <div className=\"col-8\">{this.mainPanel()}</div>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default withStitch(CompanyProfile);\n","/*import React, { Component } from \"react\";\nimport { withUserContext, UserContext } from \"./UserContext\";\nimport { withStitch } from \"./Stitch\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min.js\";*/\n\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withStitch } from \"../Stitch\";\nclass UserProfile extends Component {\n  state = {\n    selectedTab: \"Overview\",\n    editDescription: false,\n    searchUser: \"\",\n    searchEmployer: \"\",\n    otherUsers: null,\n  };\n  check = (a, b) => {\n    a = a.toLowerCase();\n    console.log(a);\n    b = b.toLowerCase();\n    console.log(b);\n    if (b.includes(a)) return true;\n    else return false;\n  };\n  Description = () => {\n    if (this.props.user.Description) {\n      return <div className=\"col-12\">{this.props.user.Description}</div>;\n    } else if (this.state.editDescription) {\n      return (\n        <div>\n          <textarea className=\"col-12 form-control\"></textarea>\n          <button\n            className=\"btn btn-dark py-0\"\n            style={{ height: \"24px\", fontSize: \"10px\" }}\n          >\n            Save changes...\n          </button>\n        </div>\n      );\n    } else {\n      return (\n        <button\n          className=\"btn btn-dark py-0\"\n          style={{ height: \"24px\", fontSize: \"10px\" }}\n          onClick={() => {\n            this.setState({ editDescription: true });\n          }}\n        >\n          Add Description...\n        </button>\n      );\n    }\n  };\n  showSearchedEmployees = () => {\n    if (this.state.searchEmployer != \"\" && this.state.Organisations == null) {\n      this.fetchUsers();\n    }\n    if (this.state.Organisations && this.state.searchEmployer != \"\") {\n      return (\n        <div className=\"col-12 ml-0 p-0\">\n          {Object.keys(this.state.Organisations).map((orgKey) => {\n            if (\n              this.check(\n                this.state.searchEmployer,\n                this.state.Organisations[orgKey].name\n              )\n            )\n              return (\n                <Link className=\"col-12 ml-0 btn btn-light border\" key={orgKey}>\n                  {this.state.Organisations[orgKey].name}\n                </Link>\n              );\n          })}\n        </div>\n      );\n    } else return <div></div>;\n  };\n  Employer = () => {\n    if (this.props.user.Employer && this.props.user.Employer != \"\") {\n      return <div className=\"col-12\">{this.props.user.Employer}</div>;\n    } else {\n      return (\n        <div className=\"col-12 p-0\">\n          <input\n            className=\"col-12 form-control shadow\"\n            label=\"Employer\"\n            config={{ type: \"Employer\" }}\n            placeholder=\"Search your Employer\"\n            style={{ height: \"24px\" }}\n            onChange={(event) =>\n              this.setState({ searchEmployer: event.target.value })\n            }\n          />\n          {this.showSearchedEmployees()}\n        </div>\n      );\n    }\n  };\n  Overview = () => {\n    return (\n      <div className=\"col-12 row overflow-auto\">\n        <div className=\"col-3 font-weight-bold pr-2\">Employer:</div>\n        <div className=\"col-9\">{this.Employer()}</div>\n        <div className=\"col-3 font-weight-bold pr-2\">About:</div>\n        <div className=\"col-9\">{this.Description()}</div>\n        <div className=\"col-3 font-weight-bold pr-2\">Email:</div>\n        <div className=\"col-9\">\n          <a href={this.props.user.email} className=\"col-12 pl-0\">\n            {this.props.user.email}\n          </a>\n          <button\n            className=\"btn btn-secondary py-0 disabled\"\n            style={{ height: \"24px\", fontSize: \"10px\" }}\n          >\n            edit\n          </button>\n        </div>\n        <div className=\"col-3 font-weight-bold pr-2\">Location:</div>\n        <div className=\"col-9\">\n          <div className=\"col-12 pl-0\">\n            {this.props.user.Street},\n            <button\n              className=\"btn btn-secondary py-0 disabled\"\n              style={{ height: \"24px\", fontSize: \"10px\" }}\n            >\n              edit\n            </button>\n          </div>\n          <div className=\"col-12 pl-0\">{this.props.user.City},</div>\n          <div className=\"col-12 pl-0 \">{this.props.user.State},</div>\n          <div className=\"col-12 pl-0\">{this.props.user.Country}</div>\n        </div>\n      </div>\n    );\n  };\n  showFriends = () => {\n    if (this.props.user.friends)\n      return (\n        <div className=\"col-12\">\n          {this.props.user.friends.map((friend, id) => (\n            <Link to={\"/messages/\" + friend.uid} className=\"btn btn-dark mr-1\">\n              {friend.name}\n            </Link>\n          ))}\n        </div>\n      );\n  };\n  fetchUsers = () => {\n    if (this.state.Users == null)\n      this.props.stitch.client\n        .callFunction(\"fetchUsersforSearch\", [])\n        .then((response) => {\n          console.log(response);\n          this.setState({\n            Users: response.Users,\n            Organisations: response.Organisations,\n          });\n        });\n  };\n  addFriend = (id, name) => {\n    this.props.stitch.client\n      .callFunction(\"addFriend\", [{ id: id, name: name }])\n      .then(this.props.user.friends.push({ uid: id, name: name }));\n  };\n  SearchedFriends = () => {\n    if (this.state.otherUsers == null) {\n      this.fetchUsers();\n    }\n    if (this.state.searchUser != \"\" && this.state.Users != null)\n      return (\n        <div className=\"col-12\">\n          {Object.keys(this.state.Users).map((userId) => {\n            if (\n              this.check(this.state.searchUser, this.state.Users[userId].name)\n            )\n              return (\n                <div className=\"col-12 px-0 btn-group\">\n                  <Link\n                    to=\"/Profile/h\"\n                    className=\"col-8 px-0 shadow btn btn-light\"\n                  >\n                    {this.state.Users[userId].name}\n                  </Link>\n                  {this.props.user.friends[this.state.Users[userId].userId] ? (\n                    <>\n                      {this.props.user.friends[this.state.Users[userId].userId]\n                        .confirmed ? (\n                        <Link\n                          className=\"col-4 flex-shrink-1 btn btn-dark\"\n                          to={\"message/\" + this.props.userId}\n                        >\n                          Message\n                        </Link>\n                      ) : (\n                        <button className=\"col-4 flex-shrink-1 btn btn-dark disabled\">\n                          Requested\n                        </button>\n                      )}\n                    </>\n                  ) : (\n                    <button\n                      className=\"col-4 flex-shrink-1 btn btn-dark\"\n                      onClick={() => {\n                        this.addFriend(\n                          this.state.Users[userId].userId,\n                          this.state.Users[userId].name\n                        );\n                      }}\n                    >\n                      Add Friend\n                    </button>\n                  )}\n                </div>\n              );\n          })}\n        </div>\n      );\n    else\n      return <div className=\"col-12 text-muted\">Search to find more users</div>;\n  };\n  SearchFriendsBar = () => {\n    return (\n      <div>\n        <input\n          className=\"col-12 form-control shadow\"\n          label=\"Friends\"\n          config={{ type: \"Friends\" }}\n          placeholder=\"Search a Friend\"\n          onChange={(event) =>\n            this.setState({ searchUser: event.target.value })\n          }\n        />\n        {this.SearchedFriends()}\n        <div className=\"col-12\"></div>\n        {this.showFriends()}\n      </div>\n    );\n  };\n  Friends = () => {\n    return <div className=\"col-12\">{this.SearchFriendsBar()}</div>;\n  };\n  showTeams = () => {\n    console.log(this.props.user);\n    if (Object.keys(this.props.user.teams).length == 0)\n      return <div>No Teams (Add a new team to start)</div>;\n    else\n      return (\n        <div className=\"col-12\">\n          {Object.keys(this.props.user.teams).map((teamId) => (\n            <Link\n              to=\"/team/\"\n              className=\"btn btn-secondary col-12 my-1 mx-0\"\n              key={teamId}\n            >\n              {this.props.user.teams[teamId]}-\n              {teamId.substring(teamId.length - 4, teamId.length)}\n            </Link>\n          ))}\n        </div>\n      );\n  };\n  addTeam = async () => {\n    var name = document.getElementById(\"newTeamName\").value;\n    console.log(name);\n    if (name.trim() === \"\") return;\n    await this.props.stitch.client\n      .callFunction(\"CreateNewTeam\", [{ name: name }])\n      .then((result) => {\n        console.log(\"succesful\");\n        console.log(result);\n      });\n  };\n  Teams = () => {\n    return (\n      <div className=\"col-12 row\">\n        <div className=\"col-12 btn-group mb-3\">\n          <input\n            id=\"newTeamName\"\n            className=\"form-control col-md-8 col-7\"\n            placeholder=\"Team Name\"\n            type=\"text\"\n          ></input>\n          <button\n            className=\"btn btn-dark col-md-4 col-5\"\n            onClick={() => this.addTeam()}\n          >\n            Add Team\n          </button>\n        </div>\n        <div className=\"col-3 font-weight-bold pr-2\">Teams:</div>\n        <div className=\"col-9\">\n          <div className=\"col-12\">{this.showTeams()}</div>\n        </div>\n      </div>\n    );\n  };\n  Settings = () => {\n    return <div>Settings</div>;\n  };\n  panelSwitcher = () => {\n    if (this.state.selectedTab == \"Overview\") return this.Overview();\n    if (this.state.selectedTab == \"Friends\") return this.Friends();\n    if (this.state.selectedTab == \"Teams\") return this.Teams();\n    if (this.state.selectedTab == \"Settings\") return this.Settings();\n  };\n  mainPanel = () => {\n    return (\n      <div className=\"row pt-1 pb-5\">\n        <div className=\"col-12 h3 font-weight-light\">\n          {this.state.selectedTab}\n        </div>\n        {this.panelSwitcher()}\n      </div>\n    );\n  };\n  render() {\n    return (\n      <div className=\"overflow-auto flex-grow-1\">\n        <main className=\"d-flex mt-md-5 justify-content-center\">\n          <div className=\"row col-sm-12 col-md-10 col-lg-8 justify-content-center bg-light shadow px-0\">\n            <div className=\"col-12 text-center border-bottom display-4 py-5\">\n              {this.props.user.name}\n            </div>\n            <div className=\"col-4 border-right pb-5\">\n              <button\n                className={\n                  this.state.selectedTab == \"Overview\"\n                    ? \"col-12 btn btn btn-light text-primary\"\n                    : \"col-12 btn btn-light text-secondary\"\n                }\n                onClick={() => this.setState({ selectedTab: \"Overview\" })}\n              >\n                Overview\n              </button>\n              <button\n                className={\n                  this.state.selectedTab == \"Friends\"\n                    ? \"col-12 btn btn btn-light text-primary\"\n                    : \"col-12 btn btn-light text-secondary\"\n                }\n                onClick={() => this.setState({ selectedTab: \"Friends\" })}\n              >\n                Friends\n              </button>\n              <button\n                className={\n                  this.state.selectedTab == \"Teams\"\n                    ? \"col-12 btn btn btn-light text-primary\"\n                    : \"col-12 btn btn-light text-secondary\"\n                }\n                onClick={() => this.setState({ selectedTab: \"Teams\" })}\n              >\n                Teams\n              </button>\n              <button\n                className={\n                  this.state.selectedTab == \"Settings\"\n                    ? \"col-12 btn btn btn-light text-primary\"\n                    : \"col-12 btn btn-light text-secondary\"\n                }\n                onClick={() => this.setState({ selectedTab: \"Settings\" })}\n              >\n                Settings\n              </button>\n            </div>\n            <div className=\"col-8\">{this.mainPanel()}</div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default withStitch(UserProfile);\n\n/*\nimport \"./Profile.css\";\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    console.log(props);\n  }\n  static contextType = UserContext;\n\n  render() {\n    const { updateUser } = this.context;\n\n    const user = this.props.stitch.client.auth.currentUser.customData;\n\n    return (\n      <div className=\"container emp-profile\">\n        <form method=\"post\">\n          <div className=\"row\">\n            <div className=\"col-md-4\">\n              <div className=\"profile-img\">\n                <img\n                  src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS52y5aInsxSm31CvHOFHWujqUx_wWTS9iM6s7BAm21oEN_RiGoog\"\n                  alt=\"\"\n                />\n                <img\n                  src=\"https://www.pngitem.com/pimgs/m/30-307416_profile-icon-png-image-free-download-searchpng-employee.png\"\n                  alt=\"user profile here\"\n                ></img>\n                <div className=\"file btn btn-lg btn-primary\">\n                  Change Photo\n                  <input className=\"btn btn-dark\" type=\"file\" name=\"file\" />\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"profile-head\">\n                <h6>{user.userName ? user.userName : \"UserName\"}</h6>\n                <p className=\"proile-rating\">\n                  RANKINGS : <span>8/10</span>\n                </p>\n                <ul className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n                  <li className=\"nav-item\">\n                    <a\n                      className=\"nav-link active\"\n                      id=\"home-tab\"\n                      data-toggle=\"tab\"\n                      href=\"#home\"\n                      role=\"tab\"\n                      aria-controls=\"home\"\n                      aria-selected=\"true\"\n                    >\n                      About\n                    </a>\n                  </li>\n                  <li className=\"nav-item\">\n                    <a\n                      className=\"nav-link\"\n                      id=\"profile-tab\"\n                      data-toggle=\"tab\"\n                      href=\"#profile\"\n                      role=\"tab\"\n                      aria-controls=\"profile\"\n                      aria-selected=\"false\"\n                    >\n                      Timeline\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <div className=\"col-md-2\">\n              <input\n                type=\"submit\"\n                className=\"profile-edit-btn\"\n                name=\"btnAddMore\"\n                value=\"Edit Profile\"\n              />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-4\">\n              <div className=\"profile-work\">\n                <p>WORK LINK</p>\n                <a href=\"\">Website Link</a>\n                <br />\n                <a href=\"\">Bootsnipp Profile</a>\n                <br />\n                <a href=\"\">Bootply Profile</a>\n                <p>SKILLS</p>\n                <a href=\"\">Web Designer</a>\n                <br />\n                <a href=\"\">Web Developer</a>\n                <br />\n                <a href=\"\">WordPress</a>\n                <br />\n                <a href=\"\">WooCommerce</a>\n                <br />\n                <a href=\"\">PHP, .Net</a>\n                <br />\n              </div>\n            </div>\n            <div className=\"col-md-8\">\n              <div className=\"tab-content profile-tab\" id=\"myTabContent\">\n                <div\n                  className=\"tab-pane fade show active\"\n                  id=\"home\"\n                  role=\"tabpanel\"\n                  aria-labelledby=\"home-tab\"\n                >\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <label>User Id</label>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <p>{user.userId}</p>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <label>Company Name</label>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <p>{user.companyName}</p>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <label>Company EMS iD</label>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <p>{user.ems_id}</p>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <label>Phone</label>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <p>123 456 7890</p>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <label>Profession</label>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <p>Web Developer and Designer</p>\n                    </div>\n                  </div>\n                </div>\n                <div\n                  className=\"tab-pane fade\"\n                  id=\"profile\"\n                  role=\"tabpanel\"\n                  aria-labelledby=\"profile-tab\"\n                >\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <label>Experience</label>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <p>Expert</p>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <label>Hourly Rate</label>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <p>10$/hr</p>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <label>Total Projects</label>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <p>230</p>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <label>English Level</label>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <p>Expert</p>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <label>Availability</label>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <p>6 months</p>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-md-12\">\n                      <label>Your Bio</label>\n                      <br />\n                      <p>Your detail description</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\nexport default withStitch(withUserContext(Profile));\n*/\n","import React, { Component } from \"react\";\nimport CompanyProfile from \"./CompanyProfile\";\nimport { withStitch } from \"../Stitch\";\nimport UserProfile from \"./UserProfile\";\nclass Profile extends Component {\n  state = { user: null };\n  /*componentDidUpdate() {\n    if (this.state.user != this.props.user) {\n      this.setState({ user: this.props.user });\n    }\n  }\n  componentDidMount() {\n    this.setState({ user: this.props.user });\n  }*/\n  render() {\n    if (this.props.stitch.client.auth.currentUser.customData.name) {\n      //console.log(this.props.user);\n      if (\n        this.props.stitch.client.auth.currentUser.customData.accountType ==\n        \"User\"\n      )\n        return (\n          <UserProfile\n            user={this.props.stitch.client.auth.currentUser.customData}\n          />\n        );\n      else if (\n        this.props.stitch.client.auth.currentUser.customData.accountType ==\n        \"Organisation\"\n      ) {\n        return (\n          <CompanyProfile\n            user={this.props.stitch.client.auth.currentUser.customData}\n          />\n        );\n      } else\n        return (\n          <main className=\"d-flex m-5 justify-content-center\">\n            <div className=\"row col-sm-12 col-md-9 justify-content-center bg-light shadow p-5\">\n              <div className=\"col-12 text-center display-4\">Loading</div>\n            </div>\n          </main>\n        );\n    } else {\n      return (\n        <main className=\"d-flex m-5 justify-content-center\">\n          <div className=\"row col-sm-12 col-md-9 justify-content-center bg-light shadow p-5\">\n            <div className=\"col-12 text-center display-4\">Loading</div>\n          </div>\n        </main>\n      );\n    }\n  }\n}\nexport default withStitch(Profile);\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { withUserContext } from \"./UserContext\";\nimport { withStitch } from \"./Stitch\";\n\n//import User, { UserContext } from \"./UserContext\";\n//import StitchClass, { StitchContext } from \"./Stitch\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min.js\";\n\nimport Home from \"./Home\";\nimport SignUp from \"./SignUp\";\nimport SignIn from \"./SignIn\";\nimport ConfirmEmail from \"./ConfirmEmail\";\nimport ResetPassword from \"./ResetPassword\";\nimport Navbar from \"./Navbar\";\nimport FirstLoginData from \"./FirstLoginData\";\nimport CommuncationsPage from \"./Communications\";\nimport Messages from \"./Messages\";\n\n//\nimport InputFields from \"./InputFields\";\nimport Profile from \"./Profile\";\nimport bg from \"./ElCapitan.jpg\";\n\nclass App extends Component {\n  state = { user: null, auth: null };\n  componentDidUpdate() {\n    if (this.state.auth != this.props.stitch.auth) {\n      console.log(this.props.stitch);\n      this.setState({ auth: this.props.stitch.auth });\n    }\n    //this.updateUserData();\n  }\n  componentDidMount() {\n    this.props.stitch.setUpdateAppjs((user) => {\n      if (this.state.user != user) this.setState({ user: user });\n    });\n    this.updateUserData();\n  }\n  updateUserData = async () => {\n    if (this.props.stitch.client.auth.currentUser) {\n      console.log(\"Refreshing user data on page refresh\");\n      let res = await this.props.stitch.client.auth.refreshCustomData();\n      console.log(\"current User\" + this.props.stitch.client.auth.currentUser);\n      this.setState({\n        user: this.props.stitch.client.auth.currentUser.customData,\n      });\n    } else {\n      console.log(\"user not logged in \");\n    }\n  };\n  updateValue = (val) => {\n    this.setState({ user: val });\n  };\n\n  render() {\n    return (\n      <Router basename=\"/\">\n        <img\n          src={bg}\n          style={{\n            height: \"100vh\",\n            width: \"100%\",\n            zIndex: -2,\n            position: \"fixed\",\n            objectFit: \"cover\",\n          }}\n        ></img>\n        <Navbar />\n\n        <Switch>\n          <Route path=\"/SignUp\">\n            <SignUp />\n          </Route>\n          <Route path=\"/SignIn\">\n            <SignIn />\n          </Route>\n          <Route path=\"/FirstLoginData\">\n            <FirstLoginData />\n          </Route>\n          <Route path=\"/InputFields\">\n            <InputFields />\n          </Route>\n          <Route path=\"/Profile\">\n            <Profile user={this.state.user} />\n          </Route>\n          <Route path=\"/ConfirmMail\" component={ConfirmEmail} />\n          <Route path=\"/ResetPassword\">\n            <ResetPassword />\n          </Route>\n          <Route path=\"/messages\">\n            <Messages />\n          </Route>\n          <Route path=\"/\">\n            <SignUp />\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n    );\n  }\n}\nexport default withStitch(withUserContext(App));\n\n/*\nclass App extends Component {\n  state = { temp: 0 };\n  updateUserData = async () => {\n    console.log(this.props.stitch);\n    if (this.props.stitch.client.auth.currentUser) {\n      console.log(\"refreshing user data on page refresh\");\n      let res = await this.props.stitch.client.auth.refreshCustomData();\n      console.log(this.props.stitch.client.auth.currentUser);\n      this.props.user.updateUser(this.props.stitch.client.auth.currentUser);\n      console.log(this.props.user);\n    } else {\n      console.log(\"user not logged in\");\n    }\n  };\n  componentDidMount() {\n    this.updateUserData();\n    this.props.user.setUpdater(this.updated);\n  }\n  updated = () => {\n    console.log(\"changing app.js state\");\n    //console.log(this.props.user);\n    this.setState({ temp: this.state.temp + 1 });\n  };\n\n  render() {\n    return (\n      <Router basename=\"/\">\n        <div>\n          <Navbar />\n          <Switch>\n            <Route path=\"/SignUp\">\n              <SignUp />\n            </Route>\n            <Route path=\"/SignIn\">\n              <SignIn />\n            </Route>\n            <Route path=\"/FirstLoginData\">\n              <FirstLoginData />\n            </Route>\n            <Route path=\"/Communications\">\n              <CommuncationsPage />\n            </Route>\n            <Route path=\"/ConfirmMail\" component={ConfirmEmail} />\n            <Route path=\"/ResetPassword\">\n              <ResetPassword />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default withStitch(withUserContext(App));\n//export default App;\n*/\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport User, { UserContext } from \"./components/UserContext\";\nimport StitchClass, { StitchContext } from \"./components/Stitch\";\n\n/*ReactDOM.render(\n  <StitchContext.Provider value={new StitchClass()}>\n    <UserContext.Provider value={new User()}>\n      <App></App>\n    </UserContext.Provider>\n  </StitchContext.Provider>,\n  document.getElementById(\"root\")\n);*/\n\nclass Index extends Component {\n  render() {\n    return (\n      <StitchContext.Provider value={new StitchClass()}>\n        <UserContext.Provider value={new User()}>\n          <App></App>\n        </UserContext.Provider>\n      </StitchContext.Provider>\n    );\n  }\n}\n\nReactDOM.render(<Index />, document.getElementById(\"root\"));\n\n//ReactDOM.render(<App></App>, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}