{"version":3,"sources":["components/ElCapitan.jpg","components/UserContext/UserContext.js","components/UserContext/index.js","components/UserContext/User.js","components/Stitch/StitchContext.js","components/Stitch/index.js","components/Stitch/Stitch.js","components/Home.js","components/SignUp.js","components/SignIn.js","components/ConfirmEmail.js","components/ResetPassword.js","components/NavbarAuthentication/NavNonAuth.js","components/NavbarAuthentication/NavAuth.js","components/NavbarAuthentication/index.js","components/Navbar.js","components/FirstLoginData.js","components/Messages.js","components/Communications/index.js","components/Scrum/index.js","components/InputFields.js","components/Profile/CompanyProfile.js","components/Profile/UserProfile.js","components/Profile/index.js","components/RemoteProfile/UserProfile.js","components/RemoteProfile/index.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","UserContext","React","createContext","withUserContext","Component","props","Consumer","user","User","updateUser","arg","updated","updateTest","test","this","console","log","args","StitchContext","withStitch","stitch","StitchClass","setUpdateAppjs","updateAppjs","logInAnonymously","a","client","auth","loginWithCredential","AnonymousCredential","then","addUserData","callFunction","result","signUpEmailPassword","authData","emailPassClient","getProviderClient","UserPasswordAuthProviderClient","factory","registerWithEmail","email","password","name","AccountType","catch","err","SignInEmailPassword","credentials","UserPasswordCredential","confirmMail","token","tokenId","Stitch","defaultAppClient","confirmUser","stitchApp","initializeDefaultAppClient","mongodb","getServiceClient","RemoteMongoClient","INITIAL_STATE","passwordOne","passwordTwo","error","SignUpAsUser","onSubmit","event","state","trim","userType","onChange","setState","target","value","isInvalid","className","e","preventDefault","style","boxShadow","onClick","type","placeholder","class","disabled","message","SignUp","inputChangeHandler","input","SignInHandler","customData","userInitialised","history","push","label","config","withRouter","confirmed","queryParams","URLSearchParams","location","search","get","queryUrl","window","to","NavAuth","activeUserAuthInfo","userId","currentUser","Navbar","FirstLoginData","companyName","dob","skills","designation","Street","City","Country","Founded","Website","UpdateData","fieldsData","accountType","State","userData","doc","reqFields","fetched","messages","watcherInitialised","activeUser","showScrumBoard","scrollToBottom","messagesEnd","scrollIntoView","behavior","sendMessage","MessagesCollection","db","collection","today","Date","date","getDate","getMonth","getFullYear","time","getHours","getMinutes","getSeconds","dateTime","$push","uid","id","query","_id","updateOne","upsert","matchedCount","modifiedCount","watcher","watch","$or","onNext","fullDocument","getMessages","find","membersArr","toArray","response","map","obj","key","position","top","backgroundColor","width","minWidth","maxWidth","Object","keys","chatId","ref","el","bottom","right","teamsFetched","teams","myTeams","otherTeams","selectedTeam","selectedItem","teamsListener","showLeftSide","categories","searchMembers","checkForSearch","b","toLowerCase","includes","fetchUsers","Users","Organisations","getTeams","TeamsCollection","members","length","showRightSide","fontSize","document","getElementById","category","progress","progressId","assignedTo","data-toggle","data-target","story","data","SaveChangesToStory","modal","tabindex","role","aria-labelledby","aria-hidden","temp","data-dismiss","aria-label","description","aria-haspopup","aria-expanded","Profile","ems","userName","FieldHandler","height","for","selectedTab","editDescription","changedDescription","DisplayCompanyDescription","Description","saveDescritptionChages","Overview","href","Employees","employees","showTeams","teamId","substring","addTeam","Teams","Settings","panelSwitcher","mainPanel","searchUser","searchEmployer","otherUsers","showSearchedEmployees","orgKey","Employer","showFriends","friends","friend","addFriend","SearchedFriends","SearchFriendsBar","Friends","updateId","randomId","Math","floor","random","refreshCustomData","RemoteProfile","profile","match","params","getProfile","findOne","updateUserData","updateValue","val","basename","src","bg","zIndex","objectFit","path","SignIn","InputFields","component","ConfirmEmail","render","Boolean","hostname","Index","Provider","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e96c04a5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ElCapitan.5a845c11.jpg\";","import React from \"react\";\n\nconst UserContext = React.createContext(null);\n\nexport const withUserContext = (Component) => (props) => (\n  <UserContext.Consumer>\n    {(user) => <Component {...props} user={user} />}\n  </UserContext.Consumer>\n);\n\nexport default UserContext;\n","import UserContext, { withUserContext } from \"./UserContext\";\nimport User from \"./User\";\nexport default User;\n\nexport { UserContext, withUserContext };\n","class User {\n  constructor() {\n    this.user = false;\n    this.test = \"\";\n    this.updated = () => {\n      console.log(\"function not yet assigned\");\n    };\n  }\n  setUpdater(args) {\n    this.updated = args;\n  }\n  updateUser = (arg) => {\n    this.user = arg;\n    this.updated();\n  };\n  updateTest = (arg) => {\n    this.test = arg;\n    this.updated();\n  };\n}\n\nexport default User;\n","import React from \"react\";\n\nconst StitchContext = React.createContext(null);\n\nexport const withStitch = (Component) => (props) => (\n  <StitchContext.Consumer>\n    {(stitch) => <Component {...props} stitch={stitch} />}\n  </StitchContext.Consumer>\n);\n\nexport default StitchContext;\n","import StitchContext, { withStitch } from \"./StitchContext\";\nimport StitchClass from \"./Stitch\";\nexport default StitchClass;\n\nexport { StitchContext, withStitch };\n","import {\n  Stitch,\n  AnonymousCredential,\n  UserPasswordAuthProviderClient,\n  UserPasswordCredential,\n  RemoteMongoClient,\n  BSON,\n} from \"mongodb-stitch-browser-sdk\";\n\nclass StitchClass {\n  constructor() {\n    /*if (process.env.APP_ID) {\n      this.appId = process.env.APP_ID;\n    }*/\n    this.stitchApp = Stitch.initializeDefaultAppClient(\n      \"employeemanagementstitch-xrbnw\"\n    );\n    this.client = Stitch.defaultAppClient; //eh client mongodb stitch naal communicate karu\n    this.mongodb = this.stitchApp.getServiceClient(\n      RemoteMongoClient.factory,\n      \"mongodb-atlas\"\n    ); //eh database nu access karan vste aa\n    //this.logInAnonymously();\n    this.updateAppjs = null;\n  }\n  setUpdateAppjs = (arg) => {\n    this.updateAppjs = arg;\n  };\n  logInAnonymously = async () => {\n    let user = await this.client.auth\n      .loginWithCredential(new AnonymousCredential())\n      .then((user) => {\n        //this.props.user.updateContext(user);\n        console.log(user);\n        return user;\n      });\n    return user;\n  };\n\n  addUserData = async (args) => {\n    this.client.callFunction(\"AddNewUserData\", [args]).then((result) => {\n      console.log(result);\n    });\n  };\n\n  signUpEmailPassword = async (authData) => {\n    const emailPassClient = this.client.auth.getProviderClient(\n      UserPasswordAuthProviderClient.factory\n    );\n    console.log(emailPassClient);\n    let err = await emailPassClient\n      .registerWithEmail(authData.email, authData.password)\n      .then((result) => {\n        if (result) {\n          console.log(\"Sign Up Successful\");\n          console.log(result);\n        }\n        console.log(result);\n        this.client.auth\n          .loginWithCredential(new AnonymousCredential())\n          .then((user) =>\n            this.client.callFunction(\"AddNewUserToBuffer\", [\n              authData.name,\n              authData.email,\n              authData.AccountType,\n            ])\n          );\n        return result;\n      })\n      .catch((err) => {\n        console.log(\"An error occurred!\");\n        console.log(err);\n        return err;\n      });\n    return err;\n  };\n\n  SignInEmailPassword = async (authData) => {\n    const credentials = new UserPasswordCredential(\n      authData.email,\n      authData.password\n    );\n    let user = await this.client.auth\n      .loginWithCredential(credentials)\n      .then((result) => {\n        console.log(\"Sign In Successful\");\n        console.log(result);\n        this.updateAppjs(result);\n        return result;\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    return user;\n  };\n  confirmMail = async (token, tokenId) => {\n    const emailPassClient = Stitch.defaultAppClient.auth.getProviderClient(\n      UserPasswordAuthProviderClient.factory\n    );\n    let result = await emailPassClient\n      .confirmUser(token, tokenId)\n      .then(() => {\n        return true;\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    return result;\n  };\n}\n\n//export default withUserContext(StitchClass);\nexport default StitchClass;\n","import React, { Component } from \"react\";\nimport { withUserContext } from \"./UserContext\";\nimport { withStitch } from \"./Stitch\";\n\nclass Home extends Component {\n  componentDidMount() {\n    console.log(this.props);\n  }\n  render() {\n    return (\n      <div>\n        <div>this is home page </div>\n      </div>\n    );\n  }\n}\nlet HomeWithUser = withUserContext(Home);\nexport default withStitch(HomeWithUser);\n","import React, { Component } from \"react\";\nimport {\n  Stitch,\n  UserPasswordAuthProviderClient,\n  UserPasswordCredential,\n} from \"mongodb-stitch-browser-sdk\";\nimport { withUserContext } from \"./UserContext\";\nimport { withStitch } from \"./Stitch\";\n\nconst INITIAL_STATE = {\n  name: \"\",\n  email: \"\",\n  passwordOne: \"\",\n  passwordTwo: \"\",\n  error: null,\n  SignUpAsUser: true,\n};\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n  onSubmit = async (event) => {\n    if (\n      this.state.name.trim() === \"\" ||\n      this.state.email.trim() === \"\" ||\n      this.state.passwordOne.trim() === \"\" ||\n      this.state.passwordTwo.trim() === \"\"\n    ) {\n      console.log(\"incomplete form\");\n      return;\n    }\n    if (this.state.passwordOne != this.state.passwordTwo) {\n      console.log(\"paswords not same\");\n      return;\n    }\n    let userType = \"User\";\n    if (this.state.SignUpAsUser == false) {\n      userType = \"Organisation\";\n    }\n    //console.log(authData);\n    let user = await this.props.stitch\n      .signUpEmailPassword({\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.passwordOne,\n        AccountType: userType,\n      })\n      .then((user) => {\n        console.log(user);\n        return user;\n      });\n    // let login = await this.props.stitch.SignInEmailPassword({\n    //   email: this.state.email,\n    //   password: this.state.passwordOne,\n    // });\n    console.log(user);\n    // console.log(login);\n    console.log(\"before\");\n    //this.props.stitch.addUserData(this.state.name, this.);\n    console.log(\"after\");\n  };\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  render() {\n    const {\n      name,\n      email,\n      passwordOne,\n      passwordTwo,\n\n      error,\n    } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === \"\" ||\n      email === \"\" ||\n      name === \"\";\n\n    return (\n      <div\n        className=\"d-flex py-5 align-items-center justify-content-center \"\n        onSubmit={(e) => {\n          this.onSubmit();\n          e.preventDefault();\n        }}\n      >\n        <div className=\"row rounded border align-self-center my-auto col-sm-12 col-md-9 justify-content-center bg-light  p-5\">\n          <div className=\"col-12 text-center display-4\">Sign Up</div>\n          <div\n            className=\"btn-group bg-white col-12 p-0 rounded-pill my-1\"\n            style={{\n              boxShadow:\n                \"inset -1px -1px 10px #666666,  inset 1px 1px 10px #ffffff\",\n            }}\n          >\n            <button\n              className={\n                !this.state.SignUpAsUser\n                  ? \"btn btn-danger col-6 rounded-pill\"\n                  : \"btn col-6 rounded-pill\"\n              }\n              style={\n                !this.state.SignUpAsUser\n                  ? {\n                      boxShadow: \"-5px -5px 10px #666666, 1px 1px 5px #FF6347\",\n                    }\n                  : {}\n              }\n              onClick={() => {\n                this.setState({ SignUpAsUser: false });\n              }}\n            >\n              Sign Up as an Organisation\n            </button>\n\n            <button\n              className={\n                this.state.SignUpAsUser\n                  ? \"btn btn-danger col-6 rounded-pill\"\n                  : \"btn col-6 rounded-pill\"\n              }\n              style={\n                this.state.SignUpAsUser\n                  ? {\n                      boxShadow: \"-5px -5px 10px #666666, 1px 1px 5px #FF6347\",\n                    }\n                  : {}\n              }\n              onClick={() => {\n                this.setState({ SignUpAsUser: true });\n              }}\n            >\n              Sign Up as a User\n            </button>\n          </div>\n          <input\n            name=\"name\"\n            className=\"col-12 m-1 form-control \"\n            value={name}\n            onChange={this.onChange}\n            type=\"text\"\n            placeholder=\"Name\"\n            style={{\n              boxShadow:\n                \"inset -1px -1px 3px #666666, inset 1px 1px 3px #ffffff\",\n            }}\n          />\n          <input\n            name=\"email\"\n            className=\"col-12 m-1 form-control \"\n            value={email}\n            onChange={this.onChange}\n            type=\"text\"\n            placeholder=\"Email Address\"\n            style={{\n              boxShadow:\n                \"inset -1px -1px 3px #666666, inset 1px 1px 3px #ffffff\",\n            }}\n          />\n          <input\n            name=\"passwordOne\"\n            className=\"col-12 m-1 form-control \"\n            value={passwordOne}\n            onChange={this.onChange}\n            type=\"password\"\n            placeholder=\"Password\"\n            style={{\n              boxShadow:\n                \"inset -1px -1px 3px #666666, inset 1px 1px 3px #ffffff\",\n            }}\n          />\n          <input\n            name=\"passwordTwo\"\n            className=\"col-12 m-1 form-control \"\n            value={passwordTwo}\n            onChange={this.onChange}\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            style={{\n              boxShadow:\n                \"inset -1px -1px 3px #666666, inset 1px 1px 3px #ffffff\",\n            }}\n          />\n          <button\n            class=\"btn btn-dark col-6  my-1\"\n            disabled={isInvalid}\n            type=\"submit\"\n            onClick={() => this.onSubmit()}\n            style={{\n              boxShadow: \" -1px -1px 3px #666666,  1px 1px 3px #ffffff\",\n            }}\n          >\n            Sign Up\n          </button>\n          {error && <p>{error.message}</p>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStitch(withUserContext(SignUp));\n","import React, { Component } from \"react\";\nimport {\n  Stitch,\n  UserPasswordAuthProviderClient,\n  UserPasswordCredential,\n} from \"mongodb-stitch-browser-sdk\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { withUserContext } from \"./UserContext\";\nimport { withStitch } from \"./Stitch\";\n\nclass SignUp extends Component {\n  state = { email: \"\", password: \"\" };\n\n  inputChangeHandler = (event, input) => {\n    this.setState({ [input]: event.target.value });\n  };\n  SignInHandler = async () => {\n    let authData = { email: this.state.email, password: this.state.password };\n    if (authData.email.trim() === \"\" || authData.password.trim() === \"\") {\n      return;\n    }\n    let user = await this.props.stitch\n      .SignInEmailPassword(authData)\n      .then((user) => {\n        console.log(user);\n        console.log(this.props.stitch);\n        if (user.customData.userInitialised == true) {\n          this.props.history.push(\"/Profile\");\n        } else {\n          this.props.history.push(\"/FirstLoginData\");\n        }\n        return user;\n      });\n\n    /*this.props.stitch.client\n      .callFunction(\"CheckUserData\", [\"hello\"])\n      .then((result) => {\n        console.log(result);\n      });*/\n    console.log(this.props.stitch);\n  };\n  componentDidUpdate() {\n    console.log(this.props.stitch);\n  }\n  render() {\n    return (\n      <main className=\"d-flex m-5 justify-content-center\">\n        <div className=\"row col-sm-12 col-md-9 justify-content-center bg-light shadow p-5\">\n          <div className=\"col-12 text-center display-4\">Sign In</div>\n\n          <input\n            className=\"col-12 m-1 form-control shadow\"\n            label=\"E-Mail\"\n            config={{ type: \"email\" }}\n            onChange={(event) => this.inputChangeHandler(event, \"email\")}\n          />\n          <input\n            className=\"col-12 mt-1 form-control shadow\"\n            label=\"Password\"\n            type=\"password\"\n            config={{ type: \"password\" }}\n            onChange={(event) => this.inputChangeHandler(event, \"password\")}\n          />\n          <button\n            className=\"btn btn-dark m-1 col-6 shadow\"\n            onClick={() => this.SignInHandler()}\n          >\n            Sign In\n          </button>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default withRouter(withStitch(SignUp));\n","import React, { Component } from \"react\";\nimport { withStitch } from \"./Stitch\";\n\nclass ConfirmEmail extends Component {\n  state = { confirmed: false };\n  componentDidMount() {\n    const queryParams = new URLSearchParams(this.props.location.search);\n    const token = queryParams.get(\"token\");\n    const tokenId = queryParams.get(\"tokenId\");\n    console.log(this.props);\n    this.props.stitch.confirmMail(token, tokenId).then((result) => {\n      console.log(result);\n      this.setState({ confirmed: result });\n    });\n  }\n  render() {\n    if (this.state.confirmed) {\n      return (\n        <main className=\"d-flex m-5 justify-content-center\">\n          <div className=\"row col-sm-12 col-md-9 justify-content-center bg-light shadow p-5\">\n            <div className=\"col-12 text-center display-4\">\n              Thank You For Confirming Your Email\n            </div>\n          </div>\n        </main>\n      );\n    } else {\n      return (\n        <main className=\"d-flex m-5 justify-content-center\">\n          <div className=\"row col-sm-12 col-md-9 justify-content-center bg-light shadow p-5\">\n            <div className=\"col-12 text-center display-4\">confirming ...</div>\n          </div>\n        </main>\n      );\n    }\n  }\n}\n\nexport default withStitch(ConfirmEmail);\n","import React, { Component } from \"react\";\nimport { withStitch } from \"./Stitch\";\n\nclass ResetPassword extends Component {\n  state = { confirmed: false };\n  componentDidMount() {\n    const queryUrl = window.location.search;\n    const queryParams = new URLSearchParams(queryUrl);\n    const token = queryParams.get(\"token\");\n    const tokenId = queryParams.get(\"tokenId\");\n    /*const emailPassClient = Stitch.defaultAppClient.auth.getProviderClient(\n      UserPasswordAuthProviderClient.factory\n    );\n    emailPassClient\n      .confirmUser(token, tokenId)\n      .then()\n      .catch((err) => {\n        console.log(err);\n      });*/\n  }\n  render() {\n    if (this.state.confirmed) {\n      return <div>Thank You For Confirming Your Email</div>;\n    } else {\n      return <div>confirming ...</div>;\n    }\n  }\n}\n\nexport default withStitch(ResetPassword);\n","import React, { Component } from \"react\";\nimport { withUserContext } from \"../UserContext\";\nimport SignUp from \"../SignUp\";\nimport SignIn from \"../SignIn\";\nimport { Link } from \"react-router-dom\";\n\nclass NavNonAuth extends Component {\n  render() {\n    return (\n      <div>\n        <Link to=\"/SignUp\" className=\"btn btn-dark my-2 my-sm-0\">\n          Sign Up\n        </Link>\n        <Link to=\"/SignIn\" className=\"btn btn-dark my-2 my-sm-0\">\n          Sign In\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default withUserContext(NavNonAuth);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nclass NavAuth extends Component {\n  render() {\n    return (\n      <div>\n        <Link to=\"/Profile\" className=\"btn btn-dark\">\n          {this.props.name}\n        </Link>\n        <Link to=\"/messages\" className=\"btn btn-dark\">\n          Messages\n        </Link>\n        <Link to=\"/scrum\" className=\"btn btn-dark\">\n          Teams\n        </Link>\n        <button className=\"btn btn-dark\">Sign Out</button>\n      </div>\n    );\n  }\n}\n\nexport default NavAuth;\n","import React, { Component } from \"react\";\nimport Navbar from \"../Navbar\";\nimport { withUserContext, UserContext } from \"../UserContext\";\nimport NavNonAuth from \"./NavNonAuth\";\nimport NavAuth from \"./NavAuth\";\nimport { withStitch } from \"../Stitch\";\n\nclass NavbarAuthentication extends Component {\n  state = { user: {} };\n  //state = { user: null };\n  /*componentDidUpdate(prevProps) {\n    console.log(\"prev props\");\n    console.log(prevProps);\n    console.log(\"current props\");\n    console.log(this.props);\n    if (this.state.user != this.props.stitch.client) {\n      console.log(\"updating user\");\n      this.setState({ user: this.props.stitch.client });\n    }\n  }*/\n  componentDidUpdate() {\n    console.log(this.state.user);\n    console.log(\"navbar updated\");\n    if (this.props.user != this.state.user) {\n      console.log(\"updating navbar\");\n      console.log(this.props.user);\n      this.setState({ user: this.props.user });\n    }\n  }\n\n  render() {\n    // if (this.state.user != this.props.stitch.client) {\n    //   this.setState({ user: this.props.stitch.client });\n    // }\n    console.log(this.props.stitch.client);\n    //if (this.state.user == null || this.state.user == false) {\n    if (this.props.stitch.client.auth.activeUserAuthInfo.userId) {\n      return (\n        <div>\n          <NavAuth\n            name={this.props.stitch.client.auth.currentUser.customData.name}\n          />\n        </div>\n      );\n    } else {\n      return <NavNonAuth />;\n    }\n  }\n}\n\nexport default withStitch(NavbarAuthentication);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport NavbarAuthentication from \"./NavbarAuthentication\";\nclass Navbar extends Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-dark bg-dark\">\n          <div className=\"flex-grow-1\">\n            <Link className=\"navbar-brand flex-grow-1\" to=\"/\">\n              EMS\n            </Link>\n            {/* <button className=\"btn btn-dark btn-sm\">console.log(user)</button> */}\n          </div>\n          <div className=\"col-4\"></div>\n          <NavbarAuthentication />\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { withStitch } from \"./Stitch\";\n\nclass FirstLoginData extends Component {\n  componentDidUpdate() {\n    console.log(this.props.stitch);\n  }\n  state = {\n    companyName: \"\",\n    dob: \"\",\n    skills: \"\",\n    designation: \"\",\n    Street: \"\",\n    City: \"\",\n    Country: \"\",\n    Founded: \"\",\n    Website: \"\",\n  };\n  componentDidMount() {\n    console.log(this.props);\n  }\n  UpdateData = async () => {\n    var fieldsData = {};\n    if (\n      this.props.stitch.client.auth.currentUser.customData.accountType == \"User\"\n    ) {\n      fieldsData = {\n        accountType: \"User\",\n        Street: this.state.Street,\n        City: this.state.City,\n        State: this.state.State,\n        Country: this.state.Country,\n\n        dob: this.state.dob,\n      };\n      if (\n        fieldsData.Street.trim() === \"\" ||\n        fieldsData.City.trim() === \"\" ||\n        fieldsData.State.trim() === \"\" ||\n        fieldsData.Country.trim() === \"\" ||\n        fieldsData.dob.trim() == \"\"\n      ) {\n        console.log(\"error\");\n        return;\n      }\n    } else {\n      fieldsData = {\n        accountType: \"Organisation\",\n        Street: this.state.Street,\n        City: this.state.City,\n        State: this.state.State,\n        Country: this.state.Country,\n\n        Website: this.state.Website,\n        Founded: this.state.Founded,\n      };\n      if (\n        fieldsData.Street.trim() === \"\" ||\n        fieldsData.City.trim() === \"\" ||\n        fieldsData.State.trim() === \"\" ||\n        fieldsData.Country.trim() === \"\" ||\n        fieldsData.Website.trim() === \"\" ||\n        fieldsData.Founded.trim() === \"\"\n      ) {\n        console.log(\"error\");\n        return;\n      }\n    }\n\n    await this.props.stitch.client\n      .callFunction(\"UpdateUserData\", [fieldsData])\n      .then((result) => {\n        const userData = result.doc;\n        console.log(\"user data\" + userData);\n        if (userData.reqFields == true) {\n          console.log(\"successfull\");\n        }\n        this.props.history.push(\"/Profile\");\n      });\n  };\n  inputChangeHandler = (event, input) => {\n    this.setState({ [input]: event.target.value });\n  };\n  render() {\n    if (\n      this.props.stitch.client &&\n      this.props.stitch.client.auth &&\n      this.props.stitch.client.auth.currentUser &&\n      this.props.stitch.client.auth.currentUser.customData\n    ) {\n      if (\n        this.props.stitch.client.auth.currentUser.customData.accountType ==\n        \"User\"\n      ) {\n        return (\n          <main className=\"d-flex m-5 justify-content-center\">\n            <div className=\"row col-sm-12 col-md-9 justify-content-center bg-light shadow p-5\">\n              <div className=\"col-12 text-center display-4\">\n                New User Account\n              </div>\n              <div className=\"col-12\">Address</div>\n              <input\n                className=\"col-12 m-1 form-control shadow\"\n                label=\"Street\"\n                config={{ type: \"Street\" }}\n                placeholder=\"Street\"\n                onChange={(event) => this.inputChangeHandler(event, \"Street\")}\n              />\n              <input\n                className=\"col-12 m-1 form-control shadow\"\n                label=\"E-Mail\"\n                config={{ type: \"City\" }}\n                placeholder=\"City\"\n                onChange={(event) => this.inputChangeHandler(event, \"City\")}\n              />\n              <input\n                className=\"col-12 m-1 form-control shadow\"\n                label=\"State\"\n                config={{ type: \"State\" }}\n                placeholder=\"State\"\n                onChange={(event) => this.inputChangeHandler(event, \"State\")}\n              />\n              <input\n                className=\"col-12 m-1 form-control shadow\"\n                label=\"Country\"\n                config={{ type: \"Country\" }}\n                placeholder=\"Country\"\n                onChange={(event) => this.inputChangeHandler(event, \"Country\")}\n              />\n              <div className=\"col-12\">Date of Birth</div>\n              <input\n                className=\"col-12 m-1 form-control shadow\"\n                type=\"date\"\n                label=\"dob\"\n                config={{ type: \"dob\" }}\n                placeholder=\"Date of Birth\"\n                onChange={(event) => this.inputChangeHandler(event, \"dob\")}\n              />\n              <button\n                className=\"btn btn-dark\"\n                onClick={() => this.UpdateData()}\n              >\n                Save Details\n              </button>\n            </div>\n          </main>\n        );\n      } else\n        return (\n          <main className=\"d-flex m-5 justify-content-center\">\n            <div className=\"row col-sm-12 col-md-9 justify-content-center bg-light shadow p-5\">\n              <div className=\"col-12 text-center display-4\">\n                New Company Account\n              </div>\n              <div className=\"col-12\">Website</div>\n              <input\n                className=\"col-12 m-1 form-control shadow\"\n                label=\"Website\"\n                config={{ type: \"Website\" }}\n                placeholder=\"Website\"\n                onChange={(event) => this.inputChangeHandler(event, \"Website\")}\n              />\n              <div className=\"col-12\">Address</div>\n              <input\n                className=\"col-12 m-1 form-control shadow\"\n                label=\"Street\"\n                config={{ type: \"Street\" }}\n                placeholder=\"Street\"\n                onChange={(event) => this.inputChangeHandler(event, \"Street\")}\n              />\n              <input\n                className=\"col-12 m-1 form-control shadow\"\n                label=\"City\"\n                config={{ type: \"City\" }}\n                placeholder=\"City\"\n                onChange={(event) => this.inputChangeHandler(event, \"City\")}\n              />\n              <input\n                className=\"col-12 m-1 form-control shadow\"\n                label=\"E-Mail\"\n                config={{ type: \"State\" }}\n                placeholder=\"State\"\n                onChange={(event) => this.inputChangeHandler(event, \"State\")}\n              />\n              <input\n                className=\"col-12 m-1 form-control shadow\"\n                label=\"Country\"\n                config={{ type: \"Country\" }}\n                placeholder=\"Country\"\n                onChange={(event) => this.inputChangeHandler(event, \"Country\")}\n              />\n              <div className=\"col-12\">Founded</div>\n              <input\n                className=\"col-12 m-1 form-control shadow\"\n                type=\"date\"\n                label=\"Founded\"\n                config={{ type: \"Founded\" }}\n                placeholder=\"Founded\"\n                onChange={(event) => this.inputChangeHandler(event, \"Founded\")}\n              />\n              <button\n                className=\"btn btn-dark\"\n                onClick={() => this.UpdateData()}\n              >\n                Save Details\n              </button>\n            </div>\n          </main>\n        );\n    } else {\n      return (\n        <main className=\"d-flex m-5 justify-content-center\">\n          <div className=\"row col-sm-12 col-md-9 justify-content-center bg-light shadow p-5\">\n            <div className=\"col-12 text-center display-4\">Loading</div>\n          </div>\n        </main>\n      );\n    }\n  }\n}\n\nexport default withRouter(withStitch(FirstLoginData));\n","import React, { Component } from \"react\";\nimport { withStitch } from \"./Stitch\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Navbar from \"./Navbar\";\n\nclass Messages extends Component {\n  state = {\n    fetched: null,\n    messages: null,\n    watcherInitialised: null,\n    activeUser: null,\n    message: \"\",\n    showScrumBoard: false,\n  };\n  componentDidMount() {\n    /*this.props.stitch.client\n      .callFunction(\"getMessages\", [\n        { uid: this.props.stitch.client.auth.currentUser.id },\n      ])\n      .then((response) => {\n        this.setState({ messages: response.messages });\n      });*/\n\n    this.getMessages();\n  }\n  componentDidUpdate() {\n    console.log(this.state);\n    if (!this.state.watcherInitialised && this.state.messages != null) {\n      this.watcher();\n      this.setState({ watcherInitialised: true });\n    }\n    //this.scrollToBottom();\n  }\n  scrollToBottom = () => {\n    this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n  };\n  getMessages() {\n    console.log(this.props.stitch.client.auth.currentUser.id);\n    const MessagesCollection = this.props.stitch.mongodb\n      .db(\"Messages\")\n      .collection(\"Messages\");\n    const messages = MessagesCollection.find({\n      membersArr: this.props.stitch.client.auth.currentUser.id,\n      //uid: this.props.stitch.client.auth.currentUser.id,\n      //name: this.props.stitch.client.auth.currentUser.customData.name,\n    })\n      .toArray()\n      .then((response) => {\n        console.log(response);\n        var messages = {};\n        response.map((obj, key) => {\n          messages[obj[this.props.stitch.client.auth.currentUser.id].uid] = obj;\n        });\n        this.setState({ messages: messages, fetched: true });\n      });\n    //this.watcher();\n  }\n  sendMessage = async () => {\n    const MessagesCollection = this.props.stitch.mongodb\n      .db(\"Messages\")\n      .collection(\"Messages\");\n    var today = new Date();\n    var date =\n      today.getDate() +\n      \"-\" +\n      (today.getMonth() + 1) +\n      \"-\" +\n      today.getFullYear();\n    var time =\n      today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n    var dateTime = date + \" \" + time;\n    var message = {\n      $push: {\n        messages: {\n          uid: this.props.stitch.client.auth.currentUser.id,\n          message: this.state.message,\n          time: dateTime,\n        },\n      },\n    };\n    let query = {\n      _id: this.state.messages[this.state.activeUser.uid]._id,\n    };\n    //query[this.props.stitch.client.auth.currentUser.id] = {};\n    //query[this.props.stitch.client.auth.currentUser.id][\"uid\"] = this.state.activeUser.uid;\n    let doc = MessagesCollection.updateOne(query, message, {\n      upsert: false,\n    }).then((result) => {\n      const { matchedCount, modifiedCount } = result;\n      if (matchedCount && modifiedCount) {\n        console.log(`Successfully updated the team.`);\n      }\n      return result;\n    });\n    this.setState({ message: \"\" });\n  };\n  watcher = async () => {\n    // Create a change stream that watches the collection\n    // for when any document's 'status' field is changed\n    // to the string 'blocked'.\n\n    const MessagesCollection = this.props.stitch.mongodb\n      .db(\"Messages\")\n      .collection(\"Messages\");\n    const stream = await MessagesCollection.watch({\n      $or: [\n        {\n          \"fullDocument.membersArr\": this.props.stitch.client.auth.currentUser\n            .id,\n        },\n      ],\n    });\n    // Set up a change event handler function for the stream\n    stream.onNext((event) => {\n      console.log(\"hello there\");\n      console.log(event.fullDocument);\n      var messages = this.state.messages;\n      messages[\n        event.fullDocument[this.props.stitch.client.auth.currentUser.id].uid\n      ] = event.fullDocument;\n      this.setState({ messages: messages });\n      this.scrollToBottom();\n    });\n    console.log(\"hello\");\n    // Insert a document with status set to 'blocked'\n    // to trigger the stream onNext handler\n    /*await MessagesCollection.insertOne({\n      name: \"test\",\n      status: \"blocked\",\n    });*/\n  };\n  render() {\n    console.log(this.state);\n    return (\n      <div\n        className=\"d-flex flex-column text-light vh-100 vw-100\"\n        style={{ position: \"fixed\", top: 0, backgroundColor: \"rgb(50,50,50)\" }}\n      >\n        <div className=\"flex-row\">\n          <Navbar />\n        </div>\n        <div id=\"topRow\" className=\"flex-row\">\n          <div className=\"row m-0 p-0\">\n            <div\n              className=\"p-2 border-bottom border-secondary\"\n              style={{ width: \"300px\" }}\n            >\n              <input\n                className=\"form-control bg-dark\"\n                placeholder=\"search\"\n              ></input>\n            </div>\n            <div\n              className=\"px-2 py-3 overflow-hidden flex-grow-1 border-bottom border-left border-secondary\"\n              style={{ backgroundColor: \"rgb(35,35,35)\" }}\n            >\n              {this.state.activeUser ? this.state.activeUser.name : \"\"}\n            </div>\n          </div>\n        </div>\n        <div id=\"mainArea\" className=\"flex-row d-flex flex-grow-1\">\n          <div\n            id=\"mainAreaLeft\"\n            className=\"flex-row  m-0 px-2 bg-dark overflow-auto\"\n            style={{ minWidth: \"300px\", maxWidth: \"300px\" }}\n          >\n            {this.state.messages ? (\n              Object.keys(this.state.messages).map((chatId) => (\n                <button\n                  className=\"col-12 btn btn-dark\"\n                  onClick={() => {\n                    this.setState({\n                      activeUser: this.state.messages[chatId][\n                        this.props.stitch.client.auth.currentUser.id\n                      ],\n                      message: \"\",\n                    });\n                  }}\n                >\n                  {\n                    this.state.messages[chatId][\n                      this.props.stitch.client.auth.currentUser.id\n                    ].name\n                  }\n                </button>\n              ))\n            ) : (\n              <div className=\"text-secondary\">Loading</div>\n            )}\n          </div>\n          <div\n            id=\"mainAreaRight\"\n            className=\"flex-column m-0 px-2 flex-grow-1 overflow-auto border-left border-secondary\"\n          >\n            <div className=\"flex-row px-1 overflow-auto mb-5\">\n              {this.state.activeUser ? (\n                Object.keys(\n                  this.state.messages[this.state.activeUser.uid].messages\n                ).map((message) =>\n                  this.state.messages[this.state.activeUser.uid].messages[\n                    message\n                  ].uid == this.props.stitch.client.auth.currentUser.id ? (\n                    <div className=\"d-flex col-12 mt-1 justify-content-end\">\n                      <div className=\"d-flex col-9 p-0 justify-content-end\">\n                        <div className=\"btn btn-primary disabled\">\n                          {\n                            this.state.messages[this.state.activeUser.uid]\n                              .messages[message].message\n                          }\n                        </div>\n                      </div>\n                    </div>\n                  ) : (\n                    <div className=\"d-flex col-12 mt-1 justify-content-start\">\n                      <div className=\"d-flex col-9 p-0 justify-content-start\">\n                        <div className=\"btn btn-secondary disabled\">\n                          {\n                            this.state.messages[this.state.activeUser.uid]\n                              .messages[message].message\n                          }\n                        </div>\n                      </div>\n                    </div>\n                  )\n                )\n              ) : (\n                <div></div>\n              )}\n              <div\n                ref={(el) => {\n                  this.messagesEnd = el;\n                }}\n              >\n                {\"\"}\n              </div>\n            </div>\n            <div\n              className=\"d-flex col-6 rounded border border-secondary bg-dark px-1\"\n              style={{\n                position: \"absolute\",\n                bottom: \"0\",\n                right: \"10px\",\n              }}\n            >\n              <input\n                value={this.state.message}\n                className=\"flex-grow-1 text-light form-control rounded-0 border-left-0 border-bottom-0 border-top-0 border-secondary bg-dark\"\n                onChange={(event) => {\n                  this.setState({ message: event.target.value });\n                }}\n              ></input>\n              <button\n                className={\n                  this.state.activeUser\n                    ? \"flex-shrink-1 btn rounded-0 btn-dark\"\n                    : \"flex-shrink-1 btn rounded-0 btn-dark disabled\"\n                }\n                onClick={() => {\n                  this.sendMessage(this.state.activeUser);\n                }}\n              >\n                send\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStitch(Messages);\n","import React, { Component } from \"react\";\n\nclass CommunicationsPage extends Component {\n  render() {\n    return <div className=\"bg-dark\">Comms</div>;\n  }\n}\n\nexport default CommunicationsPage;\n","import React, { Component, memo } from \"react\";\nimport { withStitch } from \"../Stitch\";\n\nclass Scrum extends Component {\n  state = {\n    teamsFetched: false,\n    teams: null,\n    myTeams: null,\n    otherTeams: null,\n    selectedTeam: null,\n    selectedItem: null,\n    teamsListener: false,\n    showLeftSide: true,\n    categories: [\"ICE BOX\", \"EMERGENCY\", \"IN PROGRESS\", \"TESTING\", \"COMPLETE\"],\n    searchMembers: \"\",\n  };\n  checkForSearch = (a, b) => {\n    a = a.toLowerCase();\n    console.log(a);\n    b = b.toLowerCase();\n    console.log(b);\n    if (b.includes(a)) return true;\n    else return false;\n  };\n  componentDidUpdate() {\n    console.log(this.state);\n    if (this.state.teamsFetched && !this.state.teamsListener)\n      this.teamsListener();\n  }\n  componentDidMount() {\n    this.getTeams();\n    this.fetchUsers();\n  }\n  fetchUsers = () => {\n    if (this.state.Users == null)\n      this.props.stitch.client\n        .callFunction(\"fetchUsersforSearch\", [])\n        .then((response) => {\n          console.log(response);\n          this.setState({\n            Users: response.Users,\n            Organisations: response.Organisations,\n          });\n        });\n  };\n  getTeams = async () => {\n    const TeamsCollection = this.props.stitch.mongodb\n      .db(\"Organisations\")\n      .collection(\"Teams\");\n    const messages = TeamsCollection.find({\n      membersArr: this.props.stitch.client.auth.currentUser.id,\n    })\n      .toArray()\n      .then((response) => {\n        console.log(response);\n        var teams = {};\n        var myTeams = {};\n        var otherTeams = {};\n        response.map((obj, key) => {\n          teams[obj._id] = obj;\n          if (obj.uid == this.props.stitch.client.auth.currentUser.id)\n            myTeams[obj._id] = obj;\n          else {\n            otherTeams[obj._id] = obj;\n          }\n        });\n        this.setState({\n          myTeams: myTeams,\n          otherTeams: otherTeams,\n          teams: teams,\n          teamsFetched: true,\n        });\n      });\n  };\n\n  teamsListener = async () => {\n    const TeamsCollection = this.props.stitch.mongodb\n      .db(\"Organisations\")\n      .collection(\"Teams\");\n\n    const stream = await TeamsCollection.watch({\n      $or: [\n        {\n          \"fullDocument.uid\": this.props.stitch.client.auth.currentUser.id,\n        },\n      ],\n    });\n    stream.onNext((event) => {\n      console.log(\"hello there\");\n      console.log(event.fullDocument);\n      var teams = this.state.teams;\n      teams[event.fullDocument._id] = event.fullDocument;\n      if (\n        event.fullDocument.uid == this.props.stitch.client.auth.currentUser.id\n      ) {\n        var myTeams = this.state.myTeams;\n        myTeams[event.fullDocument._id] = event.fullDocument;\n\n        this.setState({ myTeams: myTeams, teams: teams });\n      } else {\n        var otherTeams = this.state.otherTeams;\n        otherTeams[event.fullDocument._id] = event.fullDocument;\n        this.setState({ otherTeams: otherTeams, teams: teams });\n      }\n    });\n    this.setState({ teamsListener: true });\n  };\n  showLeftSide = () => {\n    if (this.state.myTeams || this.state.otherTeams) {\n      return (\n        <div className=\"col-12 my-2 p-0\">\n          <div className=\"col-12 h4 p-0\">Teams</div>\n          {this.state.myTeams ? <div className=\"h5\">Managed By You</div> : \"\"}\n          <div className=\"col-12 p-0\">\n            {Object.keys(this.state.myTeams).map((id) => (\n              <div className=\"col-12 p-0 m-0\">\n                <button\n                  className=\" col-12 btn btn-success\"\n                  onClick={() => {\n                    this.setState({ selectedTeam: id });\n                  }}\n                >\n                  {this.state.myTeams[id].name}\n                </button>\n                {this.state.selectedTeam == this.state.myTeams[id]._id ? (\n                  <div className=\"col-12 border px-1\">\n                    <div className=\"h5\">Team Settings</div>\n                    <div>Members</div>\n                    <input\n                      className=\"form-control col-12\"\n                      placeholder=\"add members\"\n                      value={this.state.searchMembers}\n                      onChange={(event) => {\n                        this.setState({ searchMembers: event.target.value });\n                      }}\n                    ></input>\n                    {this.state.searchMembers != \"\" ? (\n                      <div className=\"col-12\">\n                        {this.state.Users.map((obj, id) => {\n                          if (\n                            this.checkForSearch(\n                              this.state.searchMembers,\n                              obj.name\n                            )\n                          )\n                            return (\n                              <button\n                                className=\"col-12 btn btn-dark btn-sm\"\n                                onClick={() => {\n                                  var members = this.state.teams[\n                                    this.state.selectedTeam\n                                  ].members;\n\n                                  var membersArr = this.state.teams[\n                                    this.state.selectedTeam\n                                  ].membersArr;\n                                  members.push({\n                                    uid: obj.userId,\n                                    name: obj.name,\n                                  });\n                                  membersArr.push(obj.userId);\n                                  this.props.stitch.client\n                                    .callFunction(\"AddUserToTeam\", [\n                                      {\n                                        id: this.state.selectedTeam,\n                                        members: members,\n                                        membersArr: membersArr,\n                                      },\n                                    ])\n                                    .then((response) => console.log(response));\n                                  this.setState({ searchMembers: \"\" });\n                                }}\n                              >\n                                {obj.name}\n                              </button>\n                            );\n                        })}\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                    {this.state.myTeams[id].members.map((obj, id) => {\n                      if (\n                        obj.uid == this.props.stitch.client.auth.currentUser.id\n                      )\n                        return (\n                          <button className=\"btn btn-sm col-12 btn-success disabled\">\n                            {obj.name}\n                          </button>\n                        );\n                      else\n                        return (\n                          <button className=\"btn btn-sm col-12 btn-dark disabled\">\n                            {obj.name}\n                          </button>\n                        );\n                    })}\n                  </div>\n                ) : (\n                  \"\"\n                )}\n              </div>\n            ))}\n          </div>\n          <div className=\"col-12 p-0\">\n            {Object.keys(this.state.otherTeams).length > 0 ? (\n              <div className=\"h5\">Managed By Others</div>\n            ) : (\n              \"\"\n            )}\n            {Object.keys(this.state.otherTeams).map((id) => (\n              <div>{this.state.otherTeams[id].name}</div>\n            ))}\n          </div>\n        </div>\n      );\n    }\n  };\n  showRightSide = () => {\n    if (this.state.teamsFetched && this.state.selectedTeam) {\n      return (\n        <div className=\"col-12 p-0\">\n          <div className=\"row text-center\" style={{ fontSize: \"12px\" }}>\n            <div className=\"col-2 border p-0\">\n              <div className=\"col-12 d-flex text-left p-0\">\n                {this.state.showLeftSide ? (\n                  <button\n                    className=\"btn btn-sm btn-primary py-0\"\n                    onClick={() => {\n                      this.setState({ showLeftSide: false });\n                    }}\n                  >\n                    {\"<\"}\n                  </button>\n                ) : (\n                  <button\n                    className=\"btn btn-sm btn-primary py-0\"\n                    onClick={() => {\n                      this.setState({ showLeftSide: true });\n                    }}\n                  >\n                    {\">\"}\n                  </button>\n                )}\n                <div className=\"flex-grow-1 text-center\">CATEGORIES</div>\n              </div>\n              <div className=\"d-flex p-0 col-12\">\n                <input\n                  id=\"categoryInput\"\n                  className=\"form-control flex-grow-1\"\n                  type=\"text\"\n                  placeholder=\"Add Category\"\n                ></input>\n                <button\n                  className=\"btn btn-sm  btn-primary\"\n                  onClick={() => {\n                    if (document.getElementById(\"categoryInput\").value != \"\")\n                      this.props.stitch.client.callFunction(\n                        \"AddCategoryToTeam\",\n                        [\n                          {\n                            id: this.state.selectedTeam,\n                            category: document.getElementById(\"categoryInput\")\n                              .value,\n                          },\n                        ]\n                      );\n                  }}\n                >\n                  +\n                </button>\n              </div>\n            </div>\n            <div className=\"col-2 border\">ICE BOX</div>\n            <div className=\"col-2 border\">EMERGENCY</div>\n            <div className=\"col-2 border\">IN PROGRESS</div>\n            <div className=\"col-2 border\">TESTING</div>\n            <div className=\"col-2 border\">COMPLETE</div>\n          </div>\n          {this.state.teams[this.state.selectedTeam].categories.map(\n            (obj, id) => (\n              <div className=\"row border-bottom\">\n                <div className=\"row m-0 p-0 col-2 border-right\">\n                  <div className=\"flex-grow-1 px-2\">{obj.name}</div>\n                  <button\n                    className=\"btn btn-sm btn-primary\"\n                    onClick={() => {\n                      this.props.stitch.client\n                        .callFunction(\"addStoryToCategory\", [\n                          {\n                            id: this.state.selectedTeam,\n                            category: id,\n                          },\n                        ])\n                        .then((result) => {\n                          console.log(result);\n                        });\n                    }}\n                  >\n                    +\n                  </button>\n                </div>\n                {this.state.categories.map((category) => (\n                  <div className=\"col-2 border-right\">\n                    {Object.keys(obj.progress).map((progressId) => {\n                      if (category == obj.progress[progressId].category)\n                        return (\n                          <btn\n                            className={\n                              obj.progress[progressId].assignedTo.uid ==\n                              this.props.stitch.client.auth.currentUser.id\n                                ? \"col-12 btn btn-sm btn-success border-light\"\n                                : \"col-12 btn btn-sm btn-dark border-light\"\n                            }\n                            data-toggle=\"modal\"\n                            data-target=\"#exampleModal\"\n                            onClick={() =>\n                              this.setState({\n                                selectedItem: {\n                                  category: id,\n                                  story: progressId,\n                                  data: obj.progress[progressId],\n                                },\n                              })\n                            }\n                          >\n                            {obj.progress[progressId].name}\n                          </btn>\n                        );\n                    })}\n                  </div>\n                ))}\n              </div>\n            )\n          )}\n        </div>\n      );\n    } else if (this.state.teamsFetched)\n      return <div className=\"col-12 text-center h4\">Please Select a Team</div>;\n    else return <div className=\"col-12 text-center h4\">Loading</div>;\n  };\n  SaveChangesToStory = () => {\n    this.props.stitch.client\n      .callFunction(\"saveChangesToStory\", [\n        {\n          id: this.state.selectedTeam,\n          story: this.state.selectedItem,\n        },\n      ])\n      .then((result) => {\n        console.log(result);\n      });\n  };\n  modal = () => {\n    return (\n      <div\n        class=\"modal fade\"\n        id=\"exampleModal\"\n        tabindex=\"-11\"\n        role=\"dialog\"\n        aria-labelledby=\"exampleModalLabel\"\n        aria-hidden=\"true\"\n      >\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={\n                  this.state.selectedItem\n                    ? this.state.selectedItem.data.name\n                    : \"\"\n                }\n                placeholder=\"Story Name\"\n                onChange={(event) => {\n                  var temp = this.state.selectedItem;\n                  temp.data.name = event.target.value;\n                  this.setState({ selectedItem: temp });\n                }}\n              ></input>\n              <button\n                type=\"button\"\n                class=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div class=\"modal-body\">\n              {this.state.selectedItem ? (\n                <div className=\"col-12\">\n                  <textarea\n                    className=\"form-control\"\n                    placeholder=\"Story Description\"\n                    value={this.state.selectedItem.data.description}\n                    onChange={(event) => {\n                      var temp = this.state.selectedItem;\n                      temp.data.name = event.target.value;\n                      this.setState({ selectedItem: temp });\n                    }}\n                  ></textarea>\n                  {this.state.categories.map((obj, id) => {\n                    if (obj == this.state.selectedItem.data.category)\n                      return <button className=\"btn btn-success\">{obj}</button>;\n                    else\n                      return (\n                        <button\n                          className=\"btn btn-dark\"\n                          onClick={() => {\n                            var selectedItem = this.state.selectedItem;\n                            selectedItem.data.category = obj;\n                            this.setState({ selectedItem: selectedItem });\n                          }}\n                        >\n                          {obj}\n                        </button>\n                      );\n                  })}\n                  <div class=\"dropdown\">\n                    <button\n                      class=\"btn btn-secondary dropdown-toggle\"\n                      type=\"button\"\n                      id=\"dropdownMenuButton\"\n                      data-toggle=\"dropdown\"\n                      aria-haspopup=\"true\"\n                      aria-expanded=\"false\"\n                    >\n                      {this.state.selectedItem.data.assignedTo.uid\n                        ? this.state.selectedItem.data.assignedTo.name\n                        : \"Assign to User\"}\n                    </button>\n                    <div\n                      class=\"dropdown-menu\"\n                      aria-labelledby=\"dropdownMenuButton\"\n                    >\n                      {this.state.myTeams[this.state.selectedTeam].members.map(\n                        (obj, id) => {\n                          if (\n                            this.state.selectedItem.data.assignedTo.uid &&\n                            this.state.selectedItem.data.assignedTo.uid ==\n                              obj.uid\n                          ) {\n                            return (\n                              <button className=\"col-12 btn btn-success\">\n                                {obj.name}\n                              </button>\n                            );\n                          } else {\n                            return (\n                              <button\n                                className=\"col-12 btn btn-dark\"\n                                onClick={() => {\n                                  var temp = this.state.selectedItem;\n                                  temp.data.assignedTo = {\n                                    uid: obj.uid,\n                                    name: obj.name,\n                                  };\n                                  this.setState({ selectedItem: temp });\n                                }}\n                              >\n                                {obj.name}\n                              </button>\n                            );\n                          }\n                        }\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n            <div class=\"modal-footer\">\n              <button\n                type=\"button\"\n                class=\"btn btn-secondary\"\n                data-dismiss=\"modal\"\n                data-target=\"#exampleModal\"\n                onClick={() => {\n                  this.setState({ selectedItem: null });\n                }}\n              >\n                Close\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-primary\"\n                data-dismiss=\"modal\"\n                onClick={() => {\n                  this.SaveChangesToStory();\n                  this.setState({ selectedItem: null });\n                }}\n              >\n                Save changes\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n  render() {\n    return (\n      <div className=\"row m-5 bg-light rounded\">\n        {this.modal()}\n\n        {this.state.showLeftSide ? (\n          <div className=\"row col-12 m-0 p-0\">\n            <div className=\"col-2 border-right\">{this.showLeftSide()}</div>\n            <div className=\"col-10\">{this.showRightSide()}</div>\n          </div>\n        ) : (\n          <div className=\"col-12\">{this.showRightSide()}</div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withStitch(Scrum);\n","import React, { Component } from \"react\";\nimport { withUserContext } from \"./UserContext\";\nimport { withStitch } from \"./Stitch\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min.js\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport { Stitch } from \"mongodb-stitch-browser-sdk\";\nclass Profile extends Component {\n  state = { ems: \"\", companyName: \"\", dob: \"\", designation: \"\", userName: \"\" };\n  inputChangeHandler = (event, input) => {\n    this.setState({ [input]: event.target.value });\n  };\n  FieldHandler = async () => {\n    let fieldsData = {\n      companyName: this.state.companyName,\n      ems: this.state.ems,\n      dob: this.state.dob,\n      designation: this.state.designation,\n      userName: this.state.userName,\n    };\n    if (\n      fieldsData.companyName.trim() === \"\" ||\n      fieldsData.ems.trim() === \"\" ||\n      fieldsData.designation.trim() === \"\" ||\n      fieldsData.userName.trim() === \"\"\n    ) {\n      console.log(\"errror\");\n      return;\n    }\n\n    const client = Stitch.defaultAppClient;\n    await client.callFunction(\"UpdateUserData\", [fieldsData]).then((result) => {\n      const userData = result.doc;\n      console.log(\"user data\" + userData);\n      this.props.history.push(\"/Profile\");\n      if (userData.reqFields == true) {\n        console.log(\"successfull\");\n      }\n    });\n  };\n  render() {\n    return (\n      <div\n        className=\"d-flex justify-content-center py-5 align-items-center \"\n        style={{ width: \"100%\", height: \"100%\" }}\n      >\n        <div className=\"main col-md-9 my-auto bg-light py-5 px-3\">\n          <div className=\"main-center\">\n            <h5 className=\"display-4\" style={{ fontSize: \"3vw\" }}>\n              Sign up once and watch any of our free demos.\n            </h5>\n\n            <div className=\"form-group\">\n              <label for=\"name\">User Name</label>\n              <div className=\"input-group\">\n                <span className=\"input-group-addon\">\n                  <i className=\"fa fa-user fa\" aria-hidden=\"true\"></i>\n                </span>\n                <input\n                  type=\"text\"\n                  className=\"form-control shadow\"\n                  name=\"name\"\n                  id=\"name\"\n                  placeholder=\"Enter your Company's EMS ID\"\n                  onChange={(event) =>\n                    this.inputChangeHandler(event, \"userName\")\n                  }\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label for=\"name\">Company EMS Id</label>\n              <div className=\"input-group\">\n                <span className=\"input-group-addon\">\n                  <i className=\"fa fa-user fa\" aria-hidden=\"true\"></i>\n                </span>\n                <input\n                  type=\"text\"\n                  className=\"form-control shadow\"\n                  name=\"name\"\n                  id=\"name\"\n                  placeholder=\"Enter your Company's EMS ID\"\n                  onChange={(event) => this.inputChangeHandler(event, \"ems\")}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label for=\"name\">Company Name</label>\n              <div className=\"input-group\">\n                <span className=\"input-group-addon\">\n                  <i className=\"fa fa-user fa\" aria-hidden=\"true\"></i>\n                </span>\n                <input\n                  type=\"text\"\n                  className=\"form-control shadow\"\n                  name=\"name\"\n                  id=\"name\"\n                  placeholder=\"Enter your Company Name\"\n                  onChange={(event) =>\n                    this.inputChangeHandler(event, \"companyName\")\n                  }\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label for=\"email\">Your Designation</label>\n              <div className=\"input-group\">\n                <span className=\"input-group-addon\">\n                  <i className=\"fa fa-envelope fa\" aria-hidden=\"true\"></i>\n                </span>\n                <input\n                  type=\"text\"\n                  className=\"form-control shadow\"\n                  name=\"email\"\n                  placeholder=\"Enter your Designation\"\n                  onChange={(event) =>\n                    this.inputChangeHandler(event, \"designation\")\n                  }\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label for=\"username\">Date of Birth</label>\n              <div className=\"input-group\">\n                <span className=\"input-group-addon\">\n                  <i className=\"fa fa-users fa\" aria-hidden=\"true\"></i>\n                </span>\n                <input\n                  type=\"date\"\n                  className=\"form-control shadow\"\n                  name=\"username\"\n                  placeholder=\"Enter your DOB\"\n                  onChange={(event) => this.inputChangeHandler(event, \"dob\")}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label for=\"password\">Password</label>\n              <div className=\"input-group\">\n                <span className=\"input-group-addon\">\n                  <i className=\"fa fa-lock fa-lg\" aria-hidden=\"true\"></i>\n                </span>\n                <input\n                  type=\"password\"\n                  className=\"form-control shadow\"\n                  name=\"password\"\n                  placeholder=\"Enter your Password\"\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label for=\"confirm\">Confirm Password</label>\n              <div className=\"input-group shadow\">\n                <span className=\"input-group-addon\">\n                  <i className=\"fa fa-lock fa-lg\" aria-hidden=\"true\"></i>\n                </span>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  name=\"confirm\"\n                  placeholder=\"Confirm your Password\"\n                />\n              </div>\n            </div>\n\n            <button\n              className=\"btn px-5 btn-dark\"\n              type=\"submit\"\n              onClick={() => this.FieldHandler()}\n            >\n              SUBMIT\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(withStitch(withUserContext(Profile)));\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withStitch } from \"../Stitch\";\nclass CompanyProfile extends Component {\n  state = {\n    user: null,\n    selectedTab: \"Overview\",\n    editDescription: false,\n    changedDescription: \"\",\n  };\n  componentDidMount() {\n    if (this.state.user != this.props.user)\n      this.setState({ user: this.props.user });\n  }\n  componentDidUpdate() {\n    if (this.state.user != this.props.user) {\n      this.setState({ user: this.props.user });\n    }\n  }\n  DisplayCompanyDescription = () => {\n    if (this.state.user.Description) {\n      if (this.state.editDescription) {\n        return (\n          <div>\n            <textarea\n              className=\"col-12 form-control\"\n              onChange={(event) => {\n                this.setState({ changedDescription: event.target.value });\n              }}\n            ></textarea>\n            <button\n              className=\"btn btn-dark py-0\"\n              style={{ height: \"24px\", fontSize: \"10px\" }}\n              onClick={() => {\n                this.saveDescritptionChages();\n              }}\n            >\n              Save changes...\n            </button>\n          </div>\n        );\n      } else {\n        return (\n          <div>\n            {this.props.user.description}\n            <button\n              onClick={() => {\n                this.setState({\n                  changedDescription: this.state.user.description,\n                });\n              }}\n            >\n              Edit Description\n            </button>\n          </div>\n        );\n      }\n    } else {\n      if (this.state.editDescription) {\n        return (\n          <div>\n            <textarea\n              className=\"col-12 form-control\"\n              onChange={(event) => {\n                this.setState({ changedDescription: event.target.value });\n              }}\n            ></textarea>\n            <button\n              className=\"btn btn-dark py-0\"\n              style={{ height: \"24px\", fontSize: \"10px\" }}\n              onClick={() => {\n                this.saveDescritptionChages();\n              }}\n            >\n              Save changes...\n            </button>\n          </div>\n        );\n      } else {\n        return (\n          <button\n            className=\"btn btn-dark py-0\"\n            style={{ height: \"24px\", fontSize: \"10px\" }}\n            onClick={() => {\n              this.setState({ editDescription: true });\n            }}\n          >\n            Add Description...\n          </button>\n        );\n      }\n    }\n  };\n  Overview = () => {\n    return (\n      <div className=\"col-12 row\">\n        <div className=\"col-3 font-weight-bold pr-2\">About:</div>\n        <div className=\"col-9\">{this.DisplayCompanyDescription()}</div>\n        <div className=\"col-3 font-weight-bold pr-2\">Website:</div>\n        <div className=\"col-9\">\n          <a href={this.state.user.Website} className=\"col-12 pl-0\">\n            {this.state.user.Website}\n          </a>\n          <button\n            className=\"btn btn-secondary py-0 disabled\"\n            style={{ height: \"24px\", fontSize: \"10px\" }}\n          >\n            edit\n          </button>\n        </div>\n        <div className=\"col-3 font-weight-bold pr-2\">Location:</div>\n        <div className=\"col-9\">\n          <div className=\"col-12 pl-0\">\n            {this.state.user.Street},\n            <button\n              className=\"btn btn-secondary py-0 disabled\"\n              style={{ height: \"24px\", fontSize: \"10px\" }}\n            >\n              edit\n            </button>\n          </div>\n          <div className=\"col-12 pl-0\">{this.state.user.City},</div>\n          <div className=\"col-12 pl-0 \">{this.state.user.State},</div>\n          <div className=\"col-12 pl-0\">{this.state.user.Country}</div>\n        </div>\n      </div>\n    );\n  };\n  Employees = () => {\n    return (\n      <div>\n        <div className=\"col-3 font-weight-bold pr-2\">Employees:</div>\n        {this.state.user.employees.map((obj, id) => (\n          <Link className=\"col-12 btn btn-dark pl-0\">{obj.name}</Link>\n        ))}\n        <div className=\"col-3 font-weight-bold pr-2\">Requests:</div>\n      </div>\n    );\n  };\n  showTeams = () => {\n    console.log(this.state.user);\n    if (Object.keys(this.state.user.teams).length == 0)\n      return <div>No Teams (Add a new team to start)</div>;\n    else\n      return (\n        <div className=\"col-12\">\n          {Object.keys(this.state.user.teams).map((teamId) => (\n            <Link\n              to=\"/team/\"\n              className=\"btn btn-secondary col-12 my-1 mx-0\"\n              key={teamId}\n            >\n              {this.state.user.teams[teamId]}-\n              {teamId.substring(teamId.length - 4, teamId.length)}\n            </Link>\n          ))}\n        </div>\n      );\n  };\n  addTeam = async () => {\n    var name = document.getElementById(\"newTeamName\").value;\n    console.log(name);\n    if (name.trim() === \"\") return;\n    await this.props.stitch.client\n      .callFunction(\"CreateNewTeam\", [\n        { name: name, userName: this.state.user.name },\n      ])\n      .then((result) => {\n        console.log(\"succesful\");\n        console.log(result);\n      });\n  };\n  Teams = () => {\n    return (\n      <div className=\"col-12 row\">\n        <div className=\"col-12 btn-group mb-3\">\n          <input\n            id=\"newTeamName\"\n            className=\"form-control col-md-8 col-7\"\n            placeholder=\"Team Name\"\n            type=\"text\"\n          ></input>\n          <button\n            className=\"btn btn-dark col-md-4 col-5\"\n            onClick={() => this.addTeam()}\n          >\n            Add Team\n          </button>\n        </div>\n        <div className=\"col-3 font-weight-bold pr-2\">Teams:</div>\n        <div className=\"col-9\">\n          <div className=\"col-12\">{this.showTeams()}</div>\n        </div>\n      </div>\n    );\n  };\n  Settings = () => {\n    return <div>Settings</div>;\n  };\n  panelSwitcher = () => {\n    if (this.state.selectedTab == \"Overview\") return this.Overview();\n    if (this.state.selectedTab == \"Teams\") return this.Teams();\n    if (this.state.selectedTab == \"Settings\") return this.Settings();\n    if (this.state.selectedTab == \"Employees\") return this.Employees();\n  };\n  mainPanel = () => {\n    return (\n      <div className=\"row pt-1 pb-5\">\n        <div className=\"col-12 h3 font-weight-light\">\n          {this.state.selectedTab}\n        </div>\n        {this.panelSwitcher()}\n      </div>\n    );\n  };\n  render() {\n    if (this.state.user)\n      return (\n        <main className=\"d-flex mt-md-5 justify-content-center\">\n          <div className=\"row col-sm-12 col-md-10 col-lg-8 justify-content-center bg-light shadow px-0\">\n            <div className=\"col-12 text-center border-bottom display-4 py-5\">\n              {this.state.user.name}\n            </div>\n            <div className=\"col-4 border-right pb-5\">\n              <button\n                className={\n                  this.state.selectedTab == \"Overview\"\n                    ? \"col-12 btn btn btn-light text-primary\"\n                    : \"col-12 btn btn-light text-secondary\"\n                }\n                onClick={() => this.setState({ selectedTab: \"Overview\" })}\n              >\n                Overview\n              </button>\n              <button\n                className={\n                  this.state.selectedTab == \"Teams\"\n                    ? \"col-12 btn btn btn-light text-primary\"\n                    : \"col-12 btn btn-light text-secondary\"\n                }\n                onClick={() => this.setState({ selectedTab: \"Teams\" })}\n              >\n                Teams\n              </button>\n              <button\n                className={\n                  this.state.selectedTab == \"Employees\"\n                    ? \"col-12 btn btn btn-light text-primary\"\n                    : \"col-12 btn btn-light text-secondary\"\n                }\n                onClick={() => this.setState({ selectedTab: \"Employees\" })}\n              >\n                Employees\n              </button>\n              <button\n                className={\n                  this.state.selectedTab == \"Settings\"\n                    ? \"col-12 btn btn btn-light text-primary\"\n                    : \"col-12 btn btn-light text-secondary\"\n                }\n                onClick={() => this.setState({ selectedTab: \"Settings\" })}\n              >\n                Settings\n              </button>\n            </div>\n            <div className=\"col-8\">{this.mainPanel()}</div>\n          </div>\n        </main>\n      );\n    else return <div>loading</div>;\n  }\n}\n\nexport default withStitch(CompanyProfile);\n","/*import React, { Component } from \"react\";\nimport { withUserContext, UserContext } from \"./UserContext\";\nimport { withStitch } from \"./Stitch\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min.js\";*/\n\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withStitch } from \"../Stitch\";\nclass UserProfile extends Component {\n  state = {\n    user: null,\n    selectedTab: \"Overview\",\n    editDescription: false,\n    searchUser: \"\",\n    searchEmployer: \"\",\n    otherUsers: null,\n  };\n  componentDidMount() {\n    if (this.state.user != this.props.user)\n      this.setState({ user: this.props.user });\n  }\n  componentDidUpdate() {\n    if (this.state.user != this.props.user) {\n      this.setState({ user: this.props.user });\n    }\n  }\n  checkForSearch = (a, b) => {\n    a = a.toLowerCase();\n    console.log(a);\n    b = b.toLowerCase();\n    console.log(b);\n    if (b.includes(a)) return true;\n    else return false;\n  };\n  Description = () => {\n    if (this.state.user.Description) {\n      return <div className=\"col-12\">{this.state.user.Description}</div>;\n    } else if (this.state.editDescription) {\n      return (\n        <div>\n          <textarea className=\"col-12 form-control\"></textarea>\n          <button\n            className=\"btn btn-dark py-0\"\n            style={{ height: \"24px\", fontSize: \"10px\" }}\n          >\n            Save changes...\n          </button>\n        </div>\n      );\n    } else {\n      return (\n        <button\n          className=\"btn btn-dark py-0\"\n          style={{ height: \"24px\", fontSize: \"10px\" }}\n          onClick={() => {\n            this.setState({ editDescription: true });\n          }}\n        >\n          Add Description...\n        </button>\n      );\n    }\n  };\n  showSearchedEmployees = () => {\n    if (this.state.searchEmployer != \"\" && this.state.Organisations == null) {\n      this.fetchUsers();\n    }\n    if (this.state.Organisations && this.state.searchEmployer != \"\") {\n      return (\n        <div className=\"col-12 ml-0 p-0\">\n          {Object.keys(this.state.Organisations).map((orgKey) => {\n            if (\n              this.checkForSearch(\n                this.state.searchEmployer,\n                this.state.Organisations[orgKey].name\n              )\n            )\n              return (\n                <Link className=\"col-12 ml-0 btn btn-light border\" key={orgKey}>\n                  {this.state.Organisations[orgKey].name}\n                </Link>\n              );\n          })}\n        </div>\n      );\n    } else return <div></div>;\n  };\n  Employer = () => {\n    if (this.state.user.Employer && this.state.user.Employer != \"\") {\n      return <div className=\"col-12\">{this.state.user.Employer}</div>;\n    } else {\n      return (\n        <div className=\"col-12 p-0\">\n          <input\n            className=\"col-12 form-control shadow\"\n            label=\"Employer\"\n            config={{ type: \"Employer\" }}\n            placeholder=\"Search your Employer\"\n            style={{ height: \"24px\" }}\n            onChange={(event) =>\n              this.setState({ searchEmployer: event.target.value })\n            }\n          />\n          {this.showSearchedEmployees()}\n        </div>\n      );\n    }\n  };\n  Overview = () => {\n    return (\n      <div className=\"col-12 row overflow-auto\">\n        <div className=\"col-3 font-weight-bold pr-2\">Employer:</div>\n        <div className=\"col-9\">{this.Employer()}</div>\n        <div className=\"col-3 font-weight-bold pr-2\">About:</div>\n        <div className=\"col-9\">{this.Description()}</div>\n        <div className=\"col-3 font-weight-bold pr-2\">Email:</div>\n        <div className=\"col-9\">\n          <a href={this.state.user.email} className=\"col-12 pl-0\">\n            {this.state.user.email}\n          </a>\n          <button\n            className=\"btn btn-secondary py-0 disabled\"\n            style={{ height: \"24px\", fontSize: \"10px\" }}\n          >\n            edit\n          </button>\n        </div>\n        <div className=\"col-3 font-weight-bold pr-2\">Location:</div>\n        <div className=\"col-9\">\n          <div className=\"col-12 pl-0\">\n            {this.state.user.Street},\n            <button\n              className=\"btn btn-secondary py-0 disabled\"\n              style={{ height: \"24px\", fontSize: \"10px\" }}\n            >\n              edit\n            </button>\n          </div>\n          <div className=\"col-12 pl-0\">{this.state.user.City},</div>\n          <div className=\"col-12 pl-0 \">{this.state.user.State},</div>\n          <div className=\"col-12 pl-0\">{this.state.user.Country}</div>\n        </div>\n      </div>\n    );\n  };\n  showFriends = () => {\n    if (this.state.user.friends)\n      return (\n        <div className=\"col-12\">\n          {this.state.user.friends.map((friend, id) => (\n            <div className=\"d-flex border-bottom\">\n              <div className=\"flex-shrink-1\">{friend.name}</div>\n              <div className=\"flex-grow-1\"></div>\n              <Link\n                to={\"/messages/\" + friend.uid}\n                className=\"btn btn-dark mr-1\"\n              >\n                Message\n              </Link>\n              <Link\n                to={\"/remoteProfile/\" + friend.uid}\n                className=\"btn btn-dark d-inline-flex mr-1\"\n              >\n                Go To Profile\n              </Link>\n            </div>\n          ))}\n        </div>\n      );\n  };\n  fetchUsers = () => {\n    if (this.state.Users == null)\n      this.props.stitch.client\n        .callFunction(\"fetchUsersforSearch\", [])\n        .then((response) => {\n          console.log(response);\n          this.setState({\n            Users: response.Users,\n            Organisations: response.Organisations,\n          });\n        });\n  };\n  addFriend = (id, name) => {\n    this.props.stitch.client.callFunction(\"addFriend\", [\n      { id: id, name: name },\n    ]);\n  };\n  SearchedFriends = () => {\n    if (this.state.otherUsers == null) {\n      this.fetchUsers();\n    }\n    if (this.state.searchUser != \"\" && this.state.Users != null)\n      return (\n        <div className=\"col-12\">\n          {Object.keys(this.state.Users).map((userId) => {\n            if (\n              this.checkForSearch(\n                this.state.searchUser,\n                this.state.Users[userId].name\n              )\n            )\n              return (\n                <div className=\"col-12 px-0 btn-group\">\n                  <Link\n                    to=\"/Profile/h\"\n                    className=\"col-8 px-0 shadow btn btn-light\"\n                  >\n                    {this.state.Users[userId].name}\n                  </Link>\n                  {this.state.user.friends[this.state.Users[userId].userId] ? (\n                    <>\n                      {this.state.user.friends[this.state.Users[userId].userId]\n                        .confirmed ? (\n                        <Link\n                          className=\"col-4 flex-shrink-1 btn btn-dark\"\n                          to={\"message/\" + this.state.userId}\n                        >\n                          Message\n                        </Link>\n                      ) : (\n                        <button className=\"col-4 flex-shrink-1 btn btn-dark disabled\">\n                          Requested\n                        </button>\n                      )}\n                    </>\n                  ) : (\n                    <>\n                      <Link\n                        to={\"/remoteProfile/\" + this.state.Users[userId].userId}\n                      >\n                        Show Profile\n                      </Link>\n                      <button\n                        className=\"col-4 flex-shrink-1 btn btn-dark\"\n                        onClick={() => {\n                          this.addFriend(\n                            this.state.Users[userId].userId,\n                            this.state.Users[userId].name\n                          );\n                        }}\n                      >\n                        Add Friend\n                      </button>\n                    </>\n                  )}\n                </div>\n              );\n          })}\n        </div>\n      );\n    else\n      return <div className=\"col-12 text-muted\">Search to find more users</div>;\n  };\n  SearchFriendsBar = () => {\n    return (\n      <div>\n        <input\n          className=\"col-12 form-control shadow\"\n          label=\"Friends\"\n          config={{ type: \"Friends\" }}\n          placeholder=\"Search a Friend\"\n          onChange={(event) =>\n            this.setState({ searchUser: event.target.value })\n          }\n        />\n        {this.SearchedFriends()}\n        <div className=\"col-12\"></div>\n        {this.showFriends()}\n      </div>\n    );\n  };\n  Friends = () => {\n    return <div className=\"col-12\">{this.SearchFriendsBar()}</div>;\n  };\n  showTeams = () => {\n    console.log(this.state.user);\n    if (Object.keys(this.state.user.teams).length == 0)\n      return <div>No Teams (Add a new team to start)</div>;\n    else\n      return (\n        <div className=\"col-12\">\n          {Object.keys(this.state.user.teams).map((teamId) => (\n            <Link\n              to=\"/scrum/\"\n              className=\"btn btn-secondary col-12 my-1 mx-0\"\n              key={teamId}\n            >\n              {this.state.user.teams[teamId]}-\n              {teamId.substring(teamId.length - 4, teamId.length)}\n            </Link>\n          ))}\n        </div>\n      );\n  };\n  addTeam = async () => {\n    var name = document.getElementById(\"newTeamName\").value;\n    console.log(name);\n    if (name.trim() === \"\") return;\n    await this.props.stitch.client\n      .callFunction(\"CreateNewTeam\", [\n        { name: name, userName: this.state.user.name },\n      ])\n      .then((result) => {\n        console.log(\"succesful\");\n        console.log(result);\n      });\n  };\n  Teams = () => {\n    return (\n      <div className=\"col-12 row\">\n        <div className=\"col-12 btn-group mb-3\">\n          <input\n            id=\"newTeamName\"\n            className=\"form-control col-md-8 col-7\"\n            placeholder=\"Team Name\"\n            type=\"text\"\n          ></input>\n          <button\n            className=\"btn btn-dark col-md-4 col-5\"\n            onClick={() => this.addTeam()}\n          >\n            Add Team\n          </button>\n        </div>\n        <div className=\"col-3 font-weight-bold pr-2\">Teams:</div>\n        <div className=\"col-9\">\n          <div className=\"col-12\">{this.showTeams()}</div>\n        </div>\n      </div>\n    );\n  };\n  Settings = () => {\n    return (\n      <div className=\"col-12 row\">\n        <div className=\"col-12 row mb-3\">\n          <div className=\"col-3 font-weight-bold\">Change Password</div>\n          <div className=\"col-9\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"Current Password\"\n            ></input>\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"New Password\"\n            ></input>\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"New Password\"\n            ></input>\n            <button className=\"btn btn-dark\">save</button>\n          </div>\n        </div>\n        <div className=\"col-12 row mb-3\">\n          <div className=\"col-3 font-weight-bold\">Delete Account</div>\n          <div className=\"col-9\">\n            <input\n              className=\"form-control text-danger\"\n              type=\"text\"\n              placeholder=\"Type you email here\"\n            ></input>\n            I understand i will not be able to recover this account once this\n            action completes\n            <button className=\"btn btn-danger\">Delete</button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n  panelSwitcher = () => {\n    if (this.state.selectedTab == \"Overview\") return this.Overview();\n    if (this.state.selectedTab == \"Friends\") return this.Friends();\n    if (this.state.selectedTab == \"Teams\") return this.Teams();\n    if (this.state.selectedTab == \"Settings\") return this.Settings();\n  };\n  mainPanel = () => {\n    return (\n      <div className=\"row pt-1 pb-5\">\n        <div className=\"col-12 h3 font-weight-light\">\n          {this.state.selectedTab}\n        </div>\n        {this.panelSwitcher()}\n      </div>\n    );\n  };\n  render() {\n    if (this.state.user)\n      return (\n        <div className=\"overflow-auto flex-grow-1\">\n          <main className=\"d-flex mt-md-5 justify-content-center\">\n            <div className=\"row col-sm-12 col-md-10 col-lg-8 justify-content-center bg-light shadow px-0\">\n              <div className=\"col-12 text-center border-bottom display-4 py-5\">\n                {this.state.user.name}\n              </div>\n              <div className=\"col-4 border-right pb-5\">\n                <button\n                  className={\n                    this.state.selectedTab == \"Overview\"\n                      ? \"col-12 btn btn btn-light text-primary\"\n                      : \"col-12 btn btn-light text-secondary\"\n                  }\n                  onClick={() => this.setState({ selectedTab: \"Overview\" })}\n                >\n                  Overview\n                </button>\n                <button\n                  className={\n                    this.state.selectedTab == \"Friends\"\n                      ? \"col-12 btn btn btn-light text-primary\"\n                      : \"col-12 btn btn-light text-secondary\"\n                  }\n                  onClick={() => this.setState({ selectedTab: \"Friends\" })}\n                >\n                  Friends\n                </button>\n                <button\n                  className={\n                    this.state.selectedTab == \"Teams\"\n                      ? \"col-12 btn btn btn-light text-primary\"\n                      : \"col-12 btn btn-light text-secondary\"\n                  }\n                  onClick={() => this.setState({ selectedTab: \"Teams\" })}\n                >\n                  Teams\n                </button>\n                <button\n                  className={\n                    this.state.selectedTab == \"Settings\"\n                      ? \"col-12 btn btn btn-light text-primary\"\n                      : \"col-12 btn btn-light text-secondary\"\n                  }\n                  onClick={() => this.setState({ selectedTab: \"Settings\" })}\n                >\n                  Settings\n                </button>\n              </div>\n              <div className=\"col-8\">{this.mainPanel()}</div>\n            </div>\n          </main>\n        </div>\n      );\n    else return <div></div>;\n  }\n}\n\nexport default withStitch(UserProfile);\n","import React, { Component } from \"react\";\nimport CompanyProfile from \"./CompanyProfile\";\nimport { withStitch } from \"../Stitch\";\nimport UserProfile from \"./UserProfile\";\nclass Profile extends Component {\n  state = { user: null, updateId: 1 };\n  randomId = () => {\n    return Math.floor(Math.random() * 10000);\n  };\n  watcher = async () => {\n    // Create a change stream that watches the collection\n    // for when any document's 'status' field is changed\n    // to the string 'blocked'.\n\n    const MessagesCollection = this.props.stitch.mongodb\n      .db(\"Users\")\n      .collection(\"Users\");\n    const stream = await MessagesCollection.watch({\n      $or: [\n        {\n          \"fullDocument.userId\": this.props.stitch.client.auth.currentUser.id,\n        },\n      ],\n    });\n    // Set up a change event handler function for the stream\n    stream.onNext((event) => {\n      console.log(event.fullDocument);\n      this.props.stitch.client.auth.refreshCustomData();\n      this.setState({ updateId: this.randomId, user: event.fullDocument });\n    });\n    // Insert a document with status set to 'blocked'\n    // to trigger the stream onNext handler\n    /*await MessagesCollection.insertOne({\n      name: \"test\",\n      status: \"blocked\",\n    });*/\n  };\n  componentDidUpdate() {\n    console.log(this.state);\n    if (\n      !this.state.user.userId &&\n      this.state.user != this.props.stitch.client.auth.currentUser.customData\n    ) {\n      this.setState({\n        updateId: this.randomId(),\n        user: this.props.stitch.client.auth.currentUser.customData,\n      });\n    }\n  }\n  componentDidMount() {\n    this.watcher();\n    this.setState({\n      updateId: this.randomId(),\n      user: this.props.stitch.client.auth.currentUser.customData,\n    });\n  }\n  render() {\n    if (this.state.user != null && this.state.user != {}) {\n      //console.log(this.props.user);\n      if (this.state.user.accountType == \"User\")\n        return (\n          <UserProfile user={this.state.user} updateId={this.state.updateId} />\n        );\n      else if (this.state.user.accountType == \"Organisation\") {\n        return (\n          <CompanyProfile\n            user={this.state.user}\n            updateId={this.state.updateId}\n          />\n        );\n      } else\n        return (\n          <main className=\"d-flex m-5 justify-content-center\">\n            <div className=\"row col-sm-12 col-md-9 justify-content-center bg-light shadow p-5\">\n              <div className=\"col-12 text-center display-4\">Loading</div>\n            </div>\n          </main>\n        );\n    } else {\n      return (\n        <main className=\"d-flex m-5 justify-content-center\">\n          <div className=\"row col-sm-12 col-md-9 justify-content-center bg-light shadow p-5\">\n            <div className=\"col-12 text-center display-4\">Loading</div>\n          </div>\n        </main>\n      );\n    }\n  }\n}\nexport default withStitch(Profile);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withStitch } from \"../Stitch\";\nclass UserProfile extends Component {\n  state = {\n    user: null,\n    selectedTab: \"Overview\",\n  };\n  componentDidMount() {\n    if (this.state.user != this.props.user)\n      this.setState({ user: this.props.user });\n  }\n  componentDidUpdate() {\n    if (this.state.user.userId != this.props.user.userId)\n      this.setState({ user: this.props.user, selectedTab: \"Overview\" });\n    else if (this.state.user != this.props.user) {\n      this.setState({ user: this.props.user });\n    }\n  }\n  Description = () => {\n    if (this.props.user.Description) {\n      return <div className=\"col-12\">{this.props.user.Description}</div>;\n    } else {\n      return <div className=\"muted\">No description available</div>;\n    }\n  };\n\n  Employer = () => {\n    if (this.props.user.Employer && this.props.user.Employer != \"\") {\n      return <div className=\"col-12\">{this.props.user.Employer}</div>;\n    } else {\n      return (\n        <div className=\"col-12 muted p-0\">\n          currently not joined with an organisation\n        </div>\n      );\n    }\n  };\n  Overview = () => {\n    return (\n      <div className=\"col-12 row overflow-auto\">\n        <div className=\"col-3 font-weight-bold pr-2\">Employer:</div>\n        <div className=\"col-9\">{this.Employer()}</div>\n        <div className=\"col-3 font-weight-bold pr-2\">About:</div>\n        <div className=\"col-9\">{this.Description()}</div>\n        <div className=\"col-3 font-weight-bold pr-2\">Email:</div>\n        <div className=\"col-9\">\n          <a href={this.props.user.email} className=\"col-12 pl-0\">\n            {this.props.user.email}\n          </a>\n        </div>\n        <div className=\"col-3 font-weight-bold pr-2\">Location:</div>\n        <div className=\"col-9\">\n          <div className=\"col-12 pl-0\">{this.props.user.Street},</div>\n          <div className=\"col-12 pl-0\">{this.props.user.City},</div>\n          <div className=\"col-12 pl-0 \">{this.props.user.State},</div>\n          <div className=\"col-12 pl-0\">{this.props.user.Country}</div>\n        </div>\n      </div>\n    );\n  };\n  showFriends = () => {\n    if (this.props.user.friends)\n      return (\n        <div className=\"col-12\">\n          {this.props.user.friends.map((friend, id) => (\n            <div className=\"d-flex border-bottom\">\n              <div className=\"flex-shrink-1\">{friend.name}</div>\n              <div className=\"flex-grow-1\"></div>\n              <Link\n                to={\"/remoteProfile/\" + friend.uid}\n                className=\"btn btn-dark d-inline-flex mr-1\"\n              >\n                Go To Profile\n              </Link>\n            </div>\n          ))}\n        </div>\n      );\n  };\n\n  addFriend = (id, name) => {\n    this.props.stitch.client\n      .callFunction(\"addFriend\", [{ id: id, name: name }])\n      .then((response) => {\n        console.log(response);\n      });\n  };\n  SearchedFriends = () => {\n    if (this.state.otherUsers == null) {\n      this.fetchUsers();\n    }\n    if (this.state.searchUser != \"\" && this.state.Users != null)\n      return (\n        <div className=\"col-12\">\n          {Object.keys(this.state.Users).map((userId) => {\n            if (\n              this.checkForSearch(\n                this.state.searchUser,\n                this.state.Users[userId].name\n              )\n            )\n              return (\n                <div className=\"col-12 px-0 btn-group\">\n                  <Link\n                    to=\"/Profile/h\"\n                    className=\"col-8 px-0 shadow btn btn-light\"\n                  >\n                    {this.state.Users[userId].name}\n                  </Link>\n                  {this.props.user.friends[this.state.Users[userId].userId] ? (\n                    <>\n                      {this.props.user.friends[this.state.Users[userId].userId]\n                        .confirmed ? (\n                        <Link\n                          className=\"col-4 flex-shrink-1 btn btn-dark\"\n                          to={\"message/\" + this.props.userId}\n                        >\n                          Message\n                        </Link>\n                      ) : (\n                        <button className=\"col-4 flex-shrink-1 btn btn-dark disabled\">\n                          Requested\n                        </button>\n                      )}\n                    </>\n                  ) : (\n                    <>\n                      <Link\n                        to={\"/remoteProfile/\" + this.state.Users[userId].userId}\n                      >\n                        Show Profile\n                      </Link>\n                      <button\n                        className=\"col-4 flex-shrink-1 btn btn-dark\"\n                        onClick={() => {\n                          this.addFriend(\n                            this.state.Users[userId].userId,\n                            this.state.Users[userId].name\n                          );\n                        }}\n                      >\n                        Add Friend\n                      </button>\n                    </>\n                  )}\n                </div>\n              );\n          })}\n        </div>\n      );\n    else return <div className=\"col-12 text-muted\">No Friends</div>;\n  };\n\n  panelSwitcher = () => {\n    if (this.state.selectedTab == \"Overview\") return this.Overview();\n    if (this.state.selectedTab == \"Friends\") return this.showFriends();\n  };\n  mainPanel = () => {\n    return (\n      <div className=\"row pt-1 pb-5\">\n        <div className=\"col-12 h3 font-weight-light\">\n          {this.state.selectedTab}\n        </div>\n        {this.panelSwitcher()}\n      </div>\n    );\n  };\n  render() {\n    if (this.state.user)\n      return (\n        <div className=\"overflow-auto flex-grow-1\">\n          <main className=\"d-flex mt-md-5 justify-content-center\">\n            <div className=\"row col-sm-12 col-md-10 col-lg-8 justify-content-center bg-light shadow px-0\">\n              <div className=\"col-12 text-center border-bottom display-4 py-5\">\n                {this.state.user.name}\n              </div>\n              <div className=\"col-4 border-right pb-5\">\n                <button\n                  className=\"col-12 btn btn-dark\"\n                  onClick={() => {\n                    this.addFriend(\n                      this.state.user.userId,\n                      this.state.user.name\n                    );\n                  }}\n                >\n                  Add Friend\n                </button>\n                <button\n                  className={\n                    this.state.selectedTab == \"Overview\"\n                      ? \"col-12 btn btn btn-light text-primary\"\n                      : \"col-12 btn btn-light text-secondary\"\n                  }\n                  onClick={() => this.setState({ selectedTab: \"Overview\" })}\n                >\n                  Overview\n                </button>\n                <button\n                  className={\n                    this.state.selectedTab == \"Friends\"\n                      ? \"col-12 btn btn btn-light text-primary\"\n                      : \"col-12 btn btn-light text-secondary\"\n                  }\n                  onClick={() => this.setState({ selectedTab: \"Friends\" })}\n                >\n                  Friends\n                </button>\n              </div>\n              <div className=\"col-8\">{this.mainPanel()}</div>\n            </div>\n          </main>\n        </div>\n      );\n    else return <div></div>;\n  }\n}\n\nexport default withStitch(UserProfile);\n","import React, { Component } from \"react\";\nimport { withStitch } from \"../Stitch\";\nimport { withRouter } from \"react-router-dom\";\nimport UserProfile from \"./UserProfile\";\nclass RemoteProfile extends Component {\n  state = { id: null, user: null, profile: null };\n  componentDidMount() {\n    if (this.props.match.params.id) {\n      this.getProfile();\n      this.setState({ id: this.props.match.params.id });\n    }\n  }\n  componentDidUpdate() {\n    console.log(\"remoteProfile\");\n    console.log(this.props);\n    console.log(this.state);\n    if (this.state.id != this.props.match.params.id) {\n      this.setState({ id: this.props.match.params.id });\n    }\n    if (\n      this.state.profile &&\n      this.state.profile.userId &&\n      this.state.id != this.state.profile.userId\n    ) {\n      this.getProfile();\n    }\n  }\n  getProfile() {\n    console.log(this.props.stitch.client.auth.currentUser.id);\n    const UsersCollection = this.props.stitch.mongodb\n      .db(\"Users\")\n      .collection(\"Users\");\n    const user = UsersCollection.findOne({\n      userId: this.props.match.params.id,\n    }).then((response) => {\n      console.log(response);\n      this.setState({ profile: response });\n    });\n    //this.watcher();\n  }\n  render() {\n    if (this.state.profile) {\n      return (\n        <div>\n          <UserProfile user={this.state.profile} />\n        </div>\n      );\n    } else {\n      return <div>Loading...</div>;\n    }\n  }\n}\n\nexport default withStitch(withRouter(RemoteProfile));\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { withUserContext } from \"./UserContext\";\nimport { withStitch } from \"./Stitch\";\n\n//import User, { UserContext } from \"./UserContext\";\n//import StitchClass, { StitchContext } from \"./Stitch\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min.js\";\n\nimport Home from \"./Home\";\nimport SignUp from \"./SignUp\";\nimport SignIn from \"./SignIn\";\nimport ConfirmEmail from \"./ConfirmEmail\";\nimport ResetPassword from \"./ResetPassword\";\nimport Navbar from \"./Navbar\";\nimport FirstLoginData from \"./FirstLoginData\";\nimport CommuncationsPage from \"./Communications\";\nimport Messages from \"./Messages\";\nimport Scrum from \"./Scrum\";\n\n//\nimport InputFields from \"./InputFields\";\nimport Profile from \"./Profile\";\nimport bg from \"./ElCapitan.jpg\";\nimport RemoteProfile from \"./RemoteProfile\";\n\nclass App extends Component {\n  state = { user: null, auth: null };\n  componentDidUpdate() {\n    console.log(this.state);\n    console.log(this.props);\n    if (\n      this.state.auth != this.props.stitch.client.auth.currentUser.customData\n    ) {\n      console.log(this.props.stitch);\n      this.setState({\n        auth: this.props.stitch.client.auth.currentUser.customData,\n      });\n    }\n    //this.updateUserData();\n    this.watcher();\n  }\n  componentDidMount() {\n    this.props.stitch.setUpdateAppjs((user) => {\n      if (this.state.user != user) this.setState({ user: user });\n    });\n    this.updateUserData();\n  }\n  watcher = async () => {\n    // Create a change stream that watches the collection\n    // for when any document's 'status' field is changed\n    // to the string 'blocked'.\n\n    const MessagesCollection = this.props.stitch.mongodb\n      .db(\"Users\")\n      .collection(\"Users\");\n    const stream = await MessagesCollection.watch({\n      $or: [\n        {\n          \"fullDocument.userId\": this.props.stitch.client.auth.currentUser.id,\n        },\n      ],\n    });\n    // Set up a change event handler function for the stream\n    stream.onNext((event) => {\n      console.log(event.fullDocument);\n      this.props.stitch.client.auth.refreshCustomData();\n    });\n  };\n  updateUserData = async () => {\n    if (this.props.stitch.client.auth.currentUser) {\n      console.log(\"Refreshing user data on page refresh\");\n      let res = await this.props.stitch.client.auth.refreshCustomData();\n      console.log(\"current User\" + this.props.stitch.client.auth.currentUser);\n      this.setState({\n        user: this.props.stitch.client.auth.currentUser.customData,\n      });\n    } else {\n      console.log(\"user not logged in \");\n    }\n  };\n  updateValue = (val) => {\n    this.setState({ user: val });\n  };\n\n  render() {\n    return (\n      <Router basename=\"/\">\n        <img\n          src={bg}\n          style={{\n            height: \"100vh\",\n            width: \"100%\",\n            zIndex: -2,\n            position: \"fixed\",\n            objectFit: \"cover\",\n          }}\n        ></img>\n        <Navbar />\n\n        <Switch>\n          <Route path=\"/SignUp\">\n            <SignUp />\n          </Route>\n          <Route path=\"/SignIn\">\n            <SignIn />\n          </Route>\n          <Route path=\"/FirstLoginData\">\n            <FirstLoginData />\n          </Route>\n          <Route path=\"/InputFields\">\n            <InputFields />\n          </Route>\n          <Route path=\"/Profile\">\n            <Profile />\n          </Route>\n          <Route path=\"/ConfirmMail\" component={ConfirmEmail} />\n          <Route path=\"/ResetPassword\">\n            <ResetPassword />\n          </Route>\n          <Route path=\"/messages\">\n            <Messages />\n          </Route>\n          <Route\n            path=\"/remoteProfile/:id?\"\n            render={(props) => <RemoteProfile />}\n          />\n          <Route path=\"/scrum\">\n            <Scrum user={this.state.user} />\n          </Route>\n          <Route path=\"/\">\n            <SignUp />\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n    );\n  }\n}\nexport default withStitch(withUserContext(App));\n\n/*\nclass App extends Component {\n  state = { temp: 0 };\n  updateUserData = async () => {\n    console.log(this.props.stitch);\n    if (this.props.stitch.client.auth.currentUser) {\n      console.log(\"refreshing user data on page refresh\");\n      let res = await this.props.stitch.client.auth.refreshCustomData();\n      console.log(this.props.stitch.client.auth.currentUser);\n      this.props.user.updateUser(this.props.stitch.client.auth.currentUser);\n      console.log(this.props.user);\n    } else {\n      console.log(\"user not logged in\");\n    }\n  };\n  componentDidMount() {\n    this.updateUserData();\n    this.props.user.setUpdater(this.updated);\n  }\n  updated = () => {\n    console.log(\"changing app.js state\");\n    //console.log(this.props.user);\n    this.setState({ temp: this.state.temp + 1 });\n  };\n\n  render() {\n    return (\n      <Router basename=\"/\">\n        <div>\n          <Navbar />\n          <Switch>\n            <Route path=\"/SignUp\">\n              <SignUp />\n            </Route>\n            <Route path=\"/SignIn\">\n              <SignIn />\n            </Route>\n            <Route path=\"/FirstLoginData\">\n              <FirstLoginData />\n            </Route>\n            <Route path=\"/Communications\">\n              <CommuncationsPage />\n            </Route>\n            <Route path=\"/ConfirmMail\" component={ConfirmEmail} />\n            <Route path=\"/ResetPassword\">\n              <ResetPassword />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default withStitch(withUserContext(App));\n//export default App;\n*/\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport User, { UserContext } from \"./components/UserContext\";\nimport StitchClass, { StitchContext } from \"./components/Stitch\";\n\n/*ReactDOM.render(\n  <StitchContext.Provider value={new StitchClass()}>\n    <UserContext.Provider value={new User()}>\n      <App></App>\n    </UserContext.Provider>\n  </StitchContext.Provider>,\n  document.getElementById(\"root\")\n);*/\n\nclass Index extends Component {\n  render() {\n    return (\n      <StitchContext.Provider value={new StitchClass()}>\n        <UserContext.Provider value={new User()}>\n          <App></App>\n        </UserContext.Provider>\n      </StitchContext.Provider>\n    );\n  }\n}\n\nReactDOM.render(<Index />, document.getElementById(\"root\"));\n\n//ReactDOM.render(<App></App>, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}