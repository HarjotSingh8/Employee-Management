{"version":3,"sources":["components/ElCapitan.jpg","components/UserContext/UserContext.js","components/UserContext/index.js","components/UserContext/User.js","components/Stitch/StitchContext.js","components/Stitch/index.js","components/Stitch/Stitch.js","components/Home.js","components/SignUp.js","components/SignIn.js","components/ConfirmEmail.js","components/ResetPassword.js","components/NavbarAuthentication/NavNonAuth.js","components/NavbarAuthentication/NavAuth.js","components/NavbarAuthentication/index.js","components/Navbar.js","components/FirstLoginData.js","components/InputFields.js","components/Communications/index.js","components/Profile.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","UserContext","React","createContext","withUserContext","Component","props","Consumer","user","User","updateUser","arg","updated","updateTest","test","this","console","log","args","StitchContext","withStitch","stitch","StitchClass","logInAnonymously","a","client","auth","loginWithCredential","AnonymousCredential","then","addUserData","callFunction","result","signUpEmailPassword","authData","emailPassClient","getProviderClient","UserPasswordAuthProviderClient","factory","registerWithEmail","email","password","name","AccountType","catch","err","SignInEmailPassword","credentials","UserPasswordCredential","confirmMail","token","tokenId","Stitch","defaultAppClient","confirmUser","stitchApp","initializeDefaultAppClient","mongodb","getServiceClient","RemoteMongoClient","INITIAL_STATE","passwordOne","passwordTwo","error","SignUpAsUser","onSubmit","event","state","trim","onChange","setState","target","value","isInvalid","className","e","preventDefault","style","boxShadow","onClick","type","placeholder","class","disabled","message","SignUp","inputChangeHandler","input","SignInHandler","customData","userInitialised","history","push","label","config","withRouter","confirmed","queryParams","URLSearchParams","location","search","get","queryUrl","window","to","NavAuth","activeUserAuthInfo","userId","userProfile","data","Navbar","currentUser","accountType","Profile","ems","companyName","dob","designation","userName","FieldHandler","fieldsData","userData","doc","reqFields","width","height","fontSize","for","aria-hidden","id","context","method","src","alt","role","data-toggle","href","aria-controls","aria-selected","aria-labelledby","ems_id","contextType","updateUserData","refreshCustomData","updateValue","val","basename","minHeight","bg","zIndex","position","objectFit","path","SignIn","InputFields","component","ConfirmEmail","Boolean","hostname","match","Index","Provider","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4GAAAA,EAAOC,QAAU,IAA0B,uC,uMCErCC,EAAcC,IAAMC,cAAc,MAE3BC,EAAkB,SAACC,GAAD,OAAe,SAACC,GAAD,OAC5C,kBAACL,EAAYM,SAAb,MACG,SAACC,GAAD,OAAU,kBAACH,EAAD,iBAAeC,EAAf,CAAsBE,KAAMA,UAI5BP,ICRAQ,E,WCDb,aAAe,IAAD,gCAUdC,WAAa,SAACC,GACZ,EAAKH,KAAOG,EACZ,EAAKC,WAZO,KAcdC,WAAa,SAACF,GACZ,EAAKG,KAAOH,EACZ,EAAKC,WAfLG,KAAKP,MAAO,EACZO,KAAKD,KAAO,GACZC,KAAKH,QAAU,WACbI,QAAQC,IAAI,8B,uDAGLC,GACTH,KAAKH,QAAUM,M,KCPbC,EAAgBjB,IAAMC,cAAc,MAE7BiB,EAAa,SAACf,GAAD,OAAe,SAACC,GAAD,OACvC,kBAACa,EAAcZ,SAAf,MACG,SAACc,GAAD,OAAY,kBAAChB,EAAD,iBAAeC,EAAf,CAAsBe,OAAQA,UAIhCF,I,QCRAG,ECQb,aAAe,IAAD,gCAcdC,iBAdc,sBAcK,4BAAAC,EAAA,sEACA,EAAKC,OAAOC,KAC1BC,oBAAoB,IAAIC,KACxBC,MAAK,SAACrB,GAGL,OADAQ,QAAQC,IAAIT,GACLA,KANM,cACbA,EADa,yBAQVA,GARU,2CAdL,KAyBdsB,YAzBc,uCAyBA,WAAOZ,GAAP,SAAAM,EAAA,sDACZ,EAAKC,OAAOM,aAAa,iBAAkB,CAACb,IAAOW,MAAK,SAACG,GACvDhB,QAAQC,IAAIe,MAFF,2CAzBA,2DA+BdC,oBA/Bc,uCA+BQ,WAAOC,GAAP,iBAAAV,EAAA,6DACdW,EAAkB,EAAKV,OAAOC,KAAKU,kBACvCC,IAA+BC,SAEjCtB,QAAQC,IAAIkB,GAJQ,SAKJA,EACbI,kBAAkBL,EAASM,MAAON,EAASO,UAC3CZ,MAAK,SAACG,GAeL,OAdIA,IACFhB,QAAQC,IAAI,sBACZD,QAAQC,IAAIe,IAEdhB,QAAQC,IAAIe,GACZ,EAAKP,OAAOC,KACTC,oBAAoB,IAAIC,KACxBC,MAAK,SAACrB,GAAD,OACJ,EAAKiB,OAAOM,aAAa,qBAAsB,CAC7CG,EAASQ,KACTR,EAASM,MACTN,EAASS,iBAGRX,KAERY,OAAM,SAACC,GAGN,OAFA7B,QAAQC,IAAI,sBACZD,QAAQC,IAAI4B,GACLA,KA3BS,cAKhBA,EALgB,yBA6BbA,GA7Ba,2CA/BR,2DA+DdC,oBA/Dc,uCA+DQ,WAAOZ,GAAP,iBAAAV,EAAA,6DACduB,EAAc,IAAIC,IACtBd,EAASM,MACTN,EAASO,UAHS,SAKH,EAAKhB,OAAOC,KAC1BC,oBAAoBoB,GACpBlB,MAAK,SAACG,GAGL,OAFAhB,QAAQC,IAAI,sBACZD,QAAQC,IAAIe,GACLA,KAERY,OAAM,SAACC,GACN7B,QAAQC,IAAI4B,MAbI,cAKhBrC,EALgB,yBAebA,GAfa,2CA/DR,2DAgFdyC,YAhFc,uCAgFA,WAAOC,EAAOC,GAAd,iBAAA3B,EAAA,6DACNW,EAAkBiB,IAAOC,iBAAiB3B,KAAKU,kBACnDC,IAA+BC,SAFrB,SAIOH,EAChBmB,YAAYJ,EAAOC,GACnBtB,MAAK,WACJ,OAAO,KAERe,OAAM,SAACC,GACN7B,QAAQC,IAAI4B,MAVJ,cAIRb,EAJQ,yBAYLA,GAZK,2CAhFA,wDAIZjB,KAAKwC,UAAYH,IAAOI,2BACtB,kCAEFzC,KAAKU,OAAS2B,IAAOC,iBACrBtC,KAAK0C,QAAU1C,KAAKwC,UAAUG,iBAC5BC,IAAkBrB,QAClB,kBCHSlB,G,YAAAA,EADIhB,E,kLAVfY,QAAQC,IAAIF,KAAKT,S,+BAGjB,OACE,6BACE,wD,GAPWD,gB,gBCKbuD,EAAgB,CACpBlB,KAAM,GACNF,MAAO,GACPqB,YAAa,GACbC,YAAa,GACbC,MAAO,KACPC,cAAc,GA2LD5C,IAAWhB,E,kDAvLxB,WAAYE,GAAQ,IAAD,8BACjB,cAAMA,IAGR2D,SAJmB,uCAIR,WAAOC,GAAP,eAAA1C,EAAA,yDAEoB,KAA3B,EAAK2C,MAAMzB,KAAK0B,QACY,KAA5B,EAAKD,MAAM3B,MAAM4B,QACiB,KAAlC,EAAKD,MAAMN,YAAYO,QACW,KAAlC,EAAKD,MAAML,YAAYM,OALhB,uBAOPpD,QAAQC,IAAI,mBAPL,6BAUL,EAAKkD,MAAMN,aAAe,EAAKM,MAAML,YAVhC,uBAWP9C,QAAQC,IAAI,qBAXL,0CAeQ,EAAKX,MAAMe,OACzBY,oBAAoB,CACnBS,KAAM,EAAKyB,MAAMzB,KACjBF,MAAO,EAAK2B,MAAM3B,MAClBC,SAAU,EAAK0B,MAAMN,YACrBlB,YAAa,EAAKwB,MAAMH,aAAe,eAAiB,SAEzDnC,MAAK,SAACrB,GAEL,OADAQ,QAAQC,IAAIT,GACLA,KAxBF,OAeLA,EAfK,OA8BTQ,QAAQC,IAAIT,GAEZQ,QAAQC,IAAI,UAEZD,QAAQC,IAAI,SAlCH,4CAJQ,wDAyCnBoD,SAAW,SAACH,GACV,EAAKI,SAAL,eAAiBJ,EAAMK,OAAO7B,KAAOwB,EAAMK,OAAOC,SAxClD,EAAKL,MAAL,eAAkBP,GAFD,E,qDA4CT,IAAD,SAQH7C,KAAKoD,MANPzB,EAFK,EAELA,KACAF,EAHK,EAGLA,MACAqB,EAJK,EAILA,YACAC,EALK,EAKLA,YAEAC,EAPK,EAOLA,MAGIU,EACJZ,IAAgBC,GACA,KAAhBD,GACU,KAAVrB,GACS,KAATE,EAEF,OACE,yBACEgC,UAAU,yDACVT,SAAU,SAACU,GACT,EAAKV,WACLU,EAAEC,mBAGJ,yBAAKF,UAAU,wGACb,yBAAKA,UAAU,gCAAf,WACA,yBACEA,UAAU,kDACVG,MAAO,CACLC,UACE,8DAGJ,4BACEJ,UACG3D,KAAKoD,MAAMH,aAER,yBADA,oCAGNa,MACG9D,KAAKoD,MAAMH,aAIR,GAHA,CACEc,UAAW,+CAInBC,QAAS,WACP,EAAKT,SAAS,CAAEN,cAAc,MAdlC,8BAoBA,4BACEU,UACE3D,KAAKoD,MAAMH,aACP,oCACA,yBAENa,MACE9D,KAAKoD,MAAMH,aACP,CACEc,UAAW,+CAEb,GAENC,QAAS,WACP,EAAKT,SAAS,CAAEN,cAAc,MAdlC,sBAoBF,2BACEtB,KAAK,OACLgC,UAAU,2BACVF,MAAO9B,EACP2B,SAAUtD,KAAKsD,SACfW,KAAK,OACLC,YAAY,OACZJ,MAAO,CACLC,UACE,4DAGN,2BACEpC,KAAK,QACLgC,UAAU,2BACVF,MAAOhC,EACP6B,SAAUtD,KAAKsD,SACfW,KAAK,OACLC,YAAY,gBACZJ,MAAO,CACLC,UACE,4DAGN,2BACEpC,KAAK,cACLgC,UAAU,2BACVF,MAAOX,EACPQ,SAAUtD,KAAKsD,SACfW,KAAK,WACLC,YAAY,WACZJ,MAAO,CACLC,UACE,4DAGN,2BACEpC,KAAK,cACLgC,UAAU,2BACVF,MAAOV,EACPO,SAAUtD,KAAKsD,SACfW,KAAK,WACLC,YAAY,mBACZJ,MAAO,CACLC,UACE,4DAGN,4BACEI,MAAM,2BACNC,SAAUV,EACVO,KAAK,SACLD,QAAS,kBAAM,EAAKd,YACpBY,MAAO,CACLC,UAAW,iDANf,WAWCf,GAAS,2BAAIA,EAAMqB,e,GAjLT/E,eCPfgF,E,4MACJlB,MAAQ,CAAE3B,MAAO,GAAIC,SAAU,I,EAE/B6C,mBAAqB,SAACpB,EAAOqB,GAC3B,EAAKjB,SAAL,eAAiBiB,EAAQrB,EAAMK,OAAOC,S,EAExCgB,c,sBAAgB,4BAAAhE,EAAA,yDAEgB,MAD1BU,EAAW,CAAEM,MAAO,EAAK2B,MAAM3B,MAAOC,SAAU,EAAK0B,MAAM1B,WAClDD,MAAM4B,QAA8C,KAA7BlC,EAASO,SAAS2B,OAFxC,iEAKG,EAAK9D,MAAMe,OACzByB,oBAAoBZ,GACpBL,MAAK,SAACrB,GAQL,OAPAQ,QAAQC,IAAIT,GACZQ,QAAQC,IAAI,EAAKX,MAAMe,QACgB,GAAnCb,EAAKiF,WAAWC,gBAClB,EAAKpF,MAAMqF,QAAQC,KAAK,YAExB,EAAKtF,MAAMqF,QAAQC,KAAK,mBAEnBpF,KAfG,cAuBdQ,QAAQC,IAAI,EAAKX,MAAMe,QAvBT,2C,mEA0BdL,QAAQC,IAAIF,KAAKT,MAAMe,U,+BAEf,IAAD,OACP,OACE,0BAAMqD,UAAU,qCACd,yBAAKA,UAAU,qEACb,yBAAKA,UAAU,gCAAf,WAEA,2BACEA,UAAU,iCACVmB,MAAM,SACNC,OAAQ,CAAEd,KAAM,SAChBX,SAAU,SAACH,GAAD,OAAW,EAAKoB,mBAAmBpB,EAAO,YAEtD,2BACEQ,UAAU,kCACVmB,MAAM,WACNb,KAAK,WACLc,OAAQ,CAAEd,KAAM,YAChBX,SAAU,SAACH,GAAD,OAAW,EAAKoB,mBAAmBpB,EAAO,eAEtD,4BACEQ,UAAU,gCACVK,QAAS,kBAAM,EAAKS,kBAFtB,iB,GArDWnF,aAiEN0F,cAAW3E,EAAWiE,ICtCtBjE,I,4MAlCb+C,MAAQ,CAAE6B,WAAW,G,kEACA,IAAD,OACZC,EAAc,IAAIC,gBAAgBnF,KAAKT,MAAM6F,SAASC,QACtDlD,EAAQ+C,EAAYI,IAAI,SACxBlD,EAAU8C,EAAYI,IAAI,WAChCrF,QAAQC,IAAIF,KAAKT,OACjBS,KAAKT,MAAMe,OAAO4B,YAAYC,EAAOC,GAAStB,MAAK,SAACG,GAClDhB,QAAQC,IAAIe,GACZ,EAAKsC,SAAS,CAAE0B,UAAWhE,S,+BAI7B,OAAIjB,KAAKoD,MAAM6B,UAEX,0BAAMtB,UAAU,qCACd,yBAAKA,UAAU,qEACb,yBAAKA,UAAU,gCAAf,yCAQJ,0BAAMA,UAAU,qCACd,yBAAKA,UAAU,qEACb,yBAAKA,UAAU,gCAAf,wB,GA3BerE,cC0BZe,I,4MAzBb+C,MAAQ,CAAE6B,WAAW,G,kEAEnB,IAAMM,EAAWC,OAAOJ,SAASC,OAC3BH,EAAc,IAAIC,gBAAgBI,GAC1BL,EAAYI,IAAI,SACdJ,EAAYI,IAAI,a,+BAYhC,OAAItF,KAAKoD,MAAM6B,UACN,oEAEA,mD,GArBe3F,cCkBbD,I,uKAbX,OACE,6BACE,kBAAC,IAAD,CAAMoG,GAAG,UAAU9B,UAAU,6BAA7B,WAGA,kBAAC,IAAD,CAAM8B,GAAG,UAAU9B,UAAU,6BAA7B,gB,GAPiBrE,cCSVoG,E,uKAXX,OACE,6BACE,kBAAC,IAAD,CAAMD,GAAG,WAAW9B,UAAU,gBAC3B3D,KAAKT,MAAMkC,OAEd,4BAAQkC,UAAU,gBAAlB,iB,GAPcrE,aCmDPe,IAAWhB,E,4MA7CxB+D,MAAQ,CAAE3D,KAAM,I,mEAadQ,QAAQC,IAAIF,KAAKoD,MAAM3D,MACvBQ,QAAQC,IAAI,kBACRF,KAAKT,MAAME,MAAQO,KAAKoD,MAAM3D,OAChCQ,QAAQC,IAAI,mBACZD,QAAQC,IAAIF,KAAKT,MAAME,MACvBO,KAAKuD,SAAS,CAAE9D,KAAMO,KAAKT,MAAME,U,+BAUnC,OAFAQ,QAAQC,IAAIF,KAAKT,MAAMe,OAAOI,QAE1BV,KAAKT,MAAMe,OAAOI,OAAOC,KAAKgF,mBAAmBC,OAEjD,6BACE,kBAAC,EAAD,CACEnE,MACEzB,KAAKT,MAAMe,OAAOI,OAAOC,KAAKgF,mBAAmBE,YAAYC,KAC1DrE,SAMJ,kBAAC,EAAD,U,GAzCsBnC,eCepByG,E,uKAjBX,OACE,6BACE,yBAAKpC,UAAU,8BACb,yBAAKA,UAAU,eACb,kBAAC,IAAD,CAAMA,UAAU,2BAA2B8B,GAAG,KAA9C,QAKF,yBAAK9B,UAAU,UACf,kBAAC,EAAD,Y,GAZWrE,aCyJNe,I,mLAvJXJ,QAAQC,IAAIF,KAAKT,MAAMe,U,0CAGvBL,QAAQC,IAAIF,KAAKT,S,+BAET,IAAD,OACP,OACES,KAAKT,MAAMe,OAAOI,QAClBV,KAAKT,MAAMe,OAAOI,OAAOC,MACzBX,KAAKT,MAAMe,OAAOI,OAAOC,KAAKqF,aAC9BhG,KAAKT,MAAMe,OAAOI,OAAOC,KAAKqF,YAAYtB,WAIxC,QADA1E,KAAKT,MAAMe,OAAOI,OAAOC,KAAKqF,YAAYtB,WAAWuB,YAInD,0BAAMtC,UAAU,qCACd,yBAAKA,UAAU,qEACb,yBAAKA,UAAU,gCAAf,oBAGA,yBAAKA,UAAU,UAAf,WACA,2BACEA,UAAU,iCACVmB,MAAM,SACNC,OAAQ,CAAEd,KAAM,SAChBC,YAAY,SACZZ,SAAU,SAACH,GAAD,OAAW,EAAKoB,mBAAmBpB,EAAO,YAEtD,2BACEQ,UAAU,iCACVmB,MAAM,SACNC,OAAQ,CAAEd,KAAM,SAChBC,YAAY,OACZZ,SAAU,SAACH,GAAD,OAAW,EAAKoB,mBAAmBpB,EAAO,YAEtD,2BACEQ,UAAU,iCACVmB,MAAM,SACNC,OAAQ,CAAEd,KAAM,SAChBC,YAAY,QACZZ,SAAU,SAACH,GAAD,OAAW,EAAKoB,mBAAmBpB,EAAO,YAEtD,2BACEQ,UAAU,iCACVmB,MAAM,UACNC,OAAQ,CAAEd,KAAM,WAChBC,YAAY,UACZZ,SAAU,SAACH,GAAD,OAAW,EAAKoB,mBAAmBpB,EAAO,cAEtD,yBAAKQ,UAAU,UAAf,iBACA,2BACEA,UAAU,iCACVM,KAAK,OACLa,MAAM,MACNC,OAAQ,CAAEd,KAAM,OAChBC,YAAY,gBACZZ,SAAU,SAACH,GAAD,OAAW,EAAKoB,mBAAmBpB,EAAO,UAEtD,yBAAKQ,UAAU,UAAf,UACA,2BACEA,UAAU,iCACVmB,MAAM,SACNC,OAAQ,CAAEd,KAAM,UAChBC,YAAY,SACZZ,SAAU,SAACH,GAAD,OAAW,EAAKoB,mBAAmBpB,EAAO,eAO1D,0BAAMQ,UAAU,qCACd,yBAAKA,UAAU,qEACb,yBAAKA,UAAU,gCAAf,uBAGA,yBAAKA,UAAU,UAAf,WACA,2BACEA,UAAU,iCACVmB,MAAM,SACNC,OAAQ,CAAEd,KAAM,SAChBC,YAAY,SACZZ,SAAU,SAACH,GAAD,OAAW,EAAKoB,mBAAmBpB,EAAO,YAEtD,2BACEQ,UAAU,iCACVmB,MAAM,SACNC,OAAQ,CAAEd,KAAM,SAChBC,YAAY,OACZZ,SAAU,SAACH,GAAD,OAAW,EAAKoB,mBAAmBpB,EAAO,YAEtD,2BACEQ,UAAU,iCACVmB,MAAM,SACNC,OAAQ,CAAEd,KAAM,SAChBC,YAAY,QACZZ,SAAU,SAACH,GAAD,OAAW,EAAKoB,mBAAmBpB,EAAO,YAEtD,2BACEQ,UAAU,iCACVmB,MAAM,UACNC,OAAQ,CAAEd,KAAM,WAChBC,YAAY,UACZZ,SAAU,SAACH,GAAD,OAAW,EAAKoB,mBAAmBpB,EAAO,cAEtD,yBAAKQ,UAAU,UAAf,YACA,2BACEA,UAAU,iCACVmB,MAAM,WACNC,OAAQ,CAAEd,KAAM,YAChBC,YAAY,WACZZ,SAAU,SAACH,GAAD,OAAW,EAAKoB,mBAAmBpB,EAAO,eAEtD,yBAAKQ,UAAU,UAAf,WACA,2BACEA,UAAU,iCACVM,KAAK,OACLa,MAAM,UACNC,OAAQ,CAAEd,KAAM,WAChBC,YAAY,UACZZ,SAAU,SAACH,GAAD,OAAW,EAAKoB,mBAAmBpB,EAAO,cAGtD,yBAAKQ,UAAU,UAAf,eACA,2BACEA,UAAU,iCACVmB,MAAM,cACNC,OAAQ,CAAEd,KAAM,eAChBC,YAAY,cACZZ,SAAU,SAACH,GAAD,OACR,EAAKoB,mBAAmBpB,EAAO,kBAGnC,4BAAQQ,UAAU,gBAAlB,kBAMN,0BAAMA,UAAU,qCACd,yBAAKA,UAAU,qEACb,yBAAKA,UAAU,gCAAf,iB,GAjJiBrE,cCIvB4G,GCL2B5G,Y,4MDM/B8D,MAAQ,CAAE+C,IAAK,GAAIC,YAAa,GAAIC,IAAK,GAAIC,YAAa,GAAIC,SAAU,I,EACxEhC,mBAAqB,SAACpB,EAAOqB,GAC3B,EAAKjB,SAAL,eAAiBiB,EAAQrB,EAAMK,OAAOC,S,EAExC+C,a,sBAAe,8BAAA/F,EAAA,yDASuB,MARhCgG,EAAa,CACfL,YAAa,EAAKhD,MAAMgD,YACxBD,IAAK,EAAK/C,MAAM+C,IAChBE,IAAK,EAAKjD,MAAMiD,IAChBC,YAAa,EAAKlD,MAAMkD,YACxBC,SAAU,EAAKnD,MAAMmD,WAGVH,YAAY/C,QACG,KAA1BoD,EAAWN,IAAI9C,QACmB,KAAlCoD,EAAWH,YAAYjD,QACQ,KAA/BoD,EAAWF,SAASlD,OAZT,uBAcXpD,QAAQC,IAAI,UAdD,iCAkBPQ,EAAS2B,IAAOC,iBAlBT,SAmBP5B,EAAOM,aAAa,iBAAkB,CAACyF,IAAa3F,MAAK,SAACG,GAC9D,IAAMyF,EAAWzF,EAAO0F,IACxB1G,QAAQC,IAAI,YAAcwG,GAC1B,EAAKnH,MAAMqF,QAAQC,KAAK,YACE,GAAtB6B,EAASE,WACX3G,QAAQC,IAAI,kBAxBH,2C,uDA4BL,IAAD,OACP,OACE,yBACEyD,UAAU,yDACVG,MAAO,CAAE+C,MAAO,OAAQC,OAAQ,SAEhC,yBAAKnD,UAAU,4CACb,yBAAKA,UAAU,eACb,wBAAIA,UAAU,YAAYG,MAAO,CAAEiD,SAAU,QAA7C,iDAIA,yBAAKpD,UAAU,cACb,2BAAOqD,IAAI,QAAX,aACA,yBAAKrD,UAAU,eACb,0BAAMA,UAAU,qBACd,uBAAGA,UAAU,gBAAgBsD,cAAY,UAE3C,2BACEhD,KAAK,OACLN,UAAU,sBACVhC,KAAK,OACLuF,GAAG,OACHhD,YAAY,8BACZZ,SAAU,SAACH,GAAD,OACR,EAAKoB,mBAAmBpB,EAAO,iBAMvC,yBAAKQ,UAAU,cACb,2BAAOqD,IAAI,QAAX,kBACA,yBAAKrD,UAAU,eACb,0BAAMA,UAAU,qBACd,uBAAGA,UAAU,gBAAgBsD,cAAY,UAE3C,2BACEhD,KAAK,OACLN,UAAU,sBACVhC,KAAK,OACLuF,GAAG,OACHhD,YAAY,8BACZZ,SAAU,SAACH,GAAD,OAAW,EAAKoB,mBAAmBpB,EAAO,YAK1D,yBAAKQ,UAAU,cACb,2BAAOqD,IAAI,QAAX,gBACA,yBAAKrD,UAAU,eACb,0BAAMA,UAAU,qBACd,uBAAGA,UAAU,gBAAgBsD,cAAY,UAE3C,2BACEhD,KAAK,OACLN,UAAU,sBACVhC,KAAK,OACLuF,GAAG,OACHhD,YAAY,0BACZZ,SAAU,SAACH,GAAD,OACR,EAAKoB,mBAAmBpB,EAAO,oBAMvC,yBAAKQ,UAAU,cACb,2BAAOqD,IAAI,SAAX,oBACA,yBAAKrD,UAAU,eACb,0BAAMA,UAAU,qBACd,uBAAGA,UAAU,oBAAoBsD,cAAY,UAE/C,2BACEhD,KAAK,OACLN,UAAU,sBACVhC,KAAK,QACLuC,YAAY,yBACZZ,SAAU,SAACH,GAAD,OACR,EAAKoB,mBAAmBpB,EAAO,oBAMvC,yBAAKQ,UAAU,cACb,2BAAOqD,IAAI,YAAX,iBACA,yBAAKrD,UAAU,eACb,0BAAMA,UAAU,qBACd,uBAAGA,UAAU,iBAAiBsD,cAAY,UAE5C,2BACEhD,KAAK,OACLN,UAAU,sBACVhC,KAAK,WACLuC,YAAY,iBACZZ,SAAU,SAACH,GAAD,OAAW,EAAKoB,mBAAmBpB,EAAO,YAK1D,yBAAKQ,UAAU,cACb,2BAAOqD,IAAI,YAAX,YACA,yBAAKrD,UAAU,eACb,0BAAMA,UAAU,qBACd,uBAAGA,UAAU,mBAAmBsD,cAAY,UAE9C,2BACEhD,KAAK,WACLN,UAAU,sBACVhC,KAAK,WACLuC,YAAY,0BAKlB,yBAAKP,UAAU,cACb,2BAAOqD,IAAI,WAAX,oBACA,yBAAKrD,UAAU,sBACb,0BAAMA,UAAU,qBACd,uBAAGA,UAAU,mBAAmBsD,cAAY,UAE9C,2BACEhD,KAAK,WACLN,UAAU,eACVhC,KAAK,UACLuC,YAAY,4BAKlB,4BACEP,UAAU,oBACVM,KAAK,SACLD,QAAS,kBAAM,EAAKwC,iBAHtB,iB,GApKUlH,cAkLP0F,cAAW3E,EAAWhB,EAAgB6G,KEnL/CA,G,wDACJ,WAAY3G,GAAQ,IAAD,6BACjB,cAAMA,GACNU,QAAQC,IAAIX,GAFK,E,qDAOMS,KAAKmH,QAApBxH,WADA,IAGFF,EAAOO,KAAKT,MAAMe,OAAOI,OAAOC,KAAKqF,YAAYtB,WAEvD,OACE,yBAAKf,UAAU,yBACb,0BAAMyD,OAAO,QACX,yBAAKzD,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,eAKb,yBACE0D,IAAI,wGACJC,IAAI,sBAEN,yBAAK3D,UAAU,+BAAf,eAEE,2BAAOA,UAAU,eAAeM,KAAK,OAAOtC,KAAK,YAIvD,yBAAKgC,UAAU,YACb,yBAAKA,UAAU,gBACb,4BAAKlE,EAAK8G,SAAW9G,EAAK8G,SAAW,YACrC,uBAAG5C,UAAU,iBAAb,cACa,uCAEb,wBAAIA,UAAU,eAAeuD,GAAG,QAAQK,KAAK,WAC3C,wBAAI5D,UAAU,YACZ,uBACEA,UAAU,kBACVuD,GAAG,WACHM,cAAY,MACZC,KAAK,QACLF,KAAK,MACLG,gBAAc,OACdC,gBAAc,QAPhB,UAYF,wBAAIhE,UAAU,YACZ,uBACEA,UAAU,WACVuD,GAAG,cACHM,cAAY,MACZC,KAAK,WACLF,KAAK,MACLG,gBAAc,UACdC,gBAAc,SAPhB,gBAeR,yBAAKhE,UAAU,YACb,2BACEM,KAAK,SACLN,UAAU,mBACVhC,KAAK,aACL8B,MAAM,mBAIZ,yBAAKE,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,gBACb,wCACA,uBAAG8D,KAAK,IAAR,gBACA,6BACA,uBAAGA,KAAK,IAAR,qBACA,6BACA,uBAAGA,KAAK,IAAR,mBACA,qCACA,uBAAGA,KAAK,IAAR,gBACA,6BACA,uBAAGA,KAAK,IAAR,iBACA,6BACA,uBAAGA,KAAK,IAAR,aACA,6BACA,uBAAGA,KAAK,IAAR,eACA,6BACA,uBAAGA,KAAK,IAAR,aACA,+BAGJ,yBAAK9D,UAAU,YACb,yBAAKA,UAAU,0BAA0BuD,GAAG,gBAC1C,yBACEvD,UAAU,4BACVuD,GAAG,OACHK,KAAK,WACLK,kBAAgB,YAEhB,yBAAKjE,UAAU,OACb,yBAAKA,UAAU,YACb,2CAEF,yBAAKA,UAAU,YACb,2BAAIlE,EAAKmG,UAGb,yBAAKjC,UAAU,OACb,yBAAKA,UAAU,YACb,gDAEF,yBAAKA,UAAU,YACb,2BAAIlE,EAAK2G,eAGb,yBAAKzC,UAAU,OACb,yBAAKA,UAAU,YACb,kDAEF,yBAAKA,UAAU,YACb,2BAAIlE,EAAKoI,UAGb,yBAAKlE,UAAU,OACb,yBAAKA,UAAU,YACb,yCAEF,yBAAKA,UAAU,YACb,6CAGJ,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,8CAEF,yBAAKA,UAAU,YACb,4DAIN,yBACEA,UAAU,gBACVuD,GAAG,UACHK,KAAK,WACLK,kBAAgB,eAEhB,yBAAKjE,UAAU,OACb,yBAAKA,UAAU,YACb,8CAEF,yBAAKA,UAAU,YACb,uCAGJ,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,+CAEF,yBAAKA,UAAU,YACb,uCAGJ,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,kDAEF,yBAAKA,UAAU,YACb,oCAGJ,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,iDAEF,yBAAKA,UAAU,YACb,uCAGJ,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,gDAEF,yBAAKA,UAAU,YACb,yCAGJ,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,2CACA,6BACA,kE,GAtMArE,cAAhB4G,EAKG4B,YAAc5I,EA6MRmB,QAAWhB,EAAgB6G,I,iBClH3B7F,IAAWhB,E,kDA5ExB,WAAYE,GAAQ,IAAD,8BACjB,cAAMA,IAeRwI,eAhBmB,sBAgBF,sBAAAtH,EAAA,0DACX,EAAKlB,MAAMe,OAAOI,OAAOC,KAAKqF,YADnB,uBAEb/F,QAAQC,IAAI,wCAFC,SAGG,EAAKX,MAAMe,OAAOI,OAAOC,KAAKqH,oBAHjC,cAIb/H,QAAQC,IAAI,eAAiB,EAAKX,MAAMe,OAAOI,OAAOC,KAAKqF,aAC3D,EAAKzC,SAAS,CACZ9D,KAAM,EAAKF,MAAMe,OAAOI,OAAOC,KAAKqF,YAAYtB,aANrC,uBASbzE,QAAQC,IAAI,uBATC,4CAhBE,EA4BnB+H,YAAc,SAACC,GACb,EAAK3E,SAAS,CAAE9D,KAAMyI,KA3BtB,EAAK9E,MAAQ,CACX3D,KAAM,KACNkB,KAAM,MAJS,E,iEAQbX,KAAKoD,MAAMzC,MAAQX,KAAKT,MAAMe,OAAOK,OACvCV,QAAQC,IAAIF,KAAKT,MAAMe,QACvBN,KAAKuD,SAAS,CAAE5C,KAAMX,KAAKT,MAAMe,OAAOK,U,0CAI1CX,KAAK+H,mB,+BAmBL,OACE,kBAAC,IAAD,CAAQI,SAAS,KACf,yBAAKrE,MAAO,CAAEsE,UAAW,UACvB,yBACEf,IAAKgB,IACLvE,MAAO,CACLgD,OAAQ,QACRD,MAAO,OACPyB,QAAS,EACTC,SAAU,QACVC,UAAW,WAGf,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,WACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,WACV,kBAACC,EAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,mBACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,gBACV,kBAACE,EAAD,OAEF,kBAAC,IAAD,CAAOF,KAAK,YACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,eAAeG,UAAWC,IACtC,kBAAC,IAAD,CAAOJ,KAAK,kBACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,c,GArEInJ,eCbEwJ,QACW,cAA7BtD,OAAOJ,SAAS2D,UAEe,UAA7BvD,OAAOJ,SAAS2D,UAEhBvD,OAAOJ,SAAS2D,SAASC,MACvB,2D,ICDAC,E,uKAEF,OACE,kBAAC,EAAcC,SAAf,CAAwBzF,MAAO,IAAIlD,GACjC,kBAAC,EAAY2I,SAAb,CAAsBzF,MAAO,IAAI/D,GAC/B,kBAAC,EAAD,Y,GALUJ,aAYpB6J,IAASC,OAAO,kBAAC,EAAD,MAAWC,SAASC,eAAe,SDsG7C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3I,MAAK,SAAA4I,GACJA,EAAaC,gBAEd9H,OAAM,SAAAmB,GACL/C,QAAQ+C,MAAMA,EAAMqB,c","file":"static/js/main.b75b6f9a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ElCapitan.5a845c11.jpg\";","import React from \"react\";\n\nconst UserContext = React.createContext(null);\n\nexport const withUserContext = (Component) => (props) => (\n  <UserContext.Consumer>\n    {(user) => <Component {...props} user={user} />}\n  </UserContext.Consumer>\n);\n\nexport default UserContext;\n","import UserContext, { withUserContext } from \"./UserContext\";\nimport User from \"./User\";\nexport default User;\n\nexport { UserContext, withUserContext };\n","class User {\n  constructor() {\n    this.user = false;\n    this.test = \"\";\n    this.updated = () => {\n      console.log(\"function not yet assigned\");\n    };\n  }\n  setUpdater(args) {\n    this.updated = args;\n  }\n  updateUser = (arg) => {\n    this.user = arg;\n    this.updated();\n  };\n  updateTest = (arg) => {\n    this.test = arg;\n    this.updated();\n  };\n}\n\nexport default User;\n","import React from \"react\";\n\nconst StitchContext = React.createContext(null);\n\nexport const withStitch = (Component) => (props) => (\n  <StitchContext.Consumer>\n    {(stitch) => <Component {...props} stitch={stitch} />}\n  </StitchContext.Consumer>\n);\n\nexport default StitchContext;\n","import StitchContext, { withStitch } from \"./StitchContext\";\nimport StitchClass from \"./Stitch\";\nexport default StitchClass;\n\nexport { StitchContext, withStitch };\n","import {\n  Stitch,\n  AnonymousCredential,\n  UserPasswordAuthProviderClient,\n  UserPasswordCredential,\n  RemoteMongoClient,\n  BSON,\n} from \"mongodb-stitch-browser-sdk\";\n\nclass StitchClass {\n  constructor() {\n    /*if (process.env.APP_ID) {\n      this.appId = process.env.APP_ID;\n    }*/\n    this.stitchApp = Stitch.initializeDefaultAppClient(\n      \"employeemanagementstitch-xrbnw\"\n    );\n    this.client = Stitch.defaultAppClient; //eh client mongodb stitch naal communicate karu\n    this.mongodb = this.stitchApp.getServiceClient(\n      RemoteMongoClient.factory,\n      \"mongodb-atlas\"\n    ); //eh database nu access karan vste aa\n    //this.logInAnonymously();\n  }\n  logInAnonymously = async () => {\n    let user = await this.client.auth\n      .loginWithCredential(new AnonymousCredential())\n      .then((user) => {\n        //this.props.user.updateContext(user);\n        console.log(user);\n        return user;\n      });\n    return user;\n  };\n\n  addUserData = async (args) => {\n    this.client.callFunction(\"AddNewUserData\", [args]).then((result) => {\n      console.log(result);\n    });\n  };\n\n  signUpEmailPassword = async (authData) => {\n    const emailPassClient = this.client.auth.getProviderClient(\n      UserPasswordAuthProviderClient.factory\n    );\n    console.log(emailPassClient);\n    let err = await emailPassClient\n      .registerWithEmail(authData.email, authData.password)\n      .then((result) => {\n        if (result) {\n          console.log(\"Sign Up Successful\");\n          console.log(result);\n        }\n        console.log(result);\n        this.client.auth\n          .loginWithCredential(new AnonymousCredential())\n          .then((user) =>\n            this.client.callFunction(\"AddNewUserToBuffer\", [\n              authData.name,\n              authData.email,\n              authData.AccountType,\n            ])\n          );\n        return result;\n      })\n      .catch((err) => {\n        console.log(\"An error occurred!\");\n        console.log(err);\n        return err;\n      });\n    return err;\n  };\n\n  SignInEmailPassword = async (authData) => {\n    const credentials = new UserPasswordCredential(\n      authData.email,\n      authData.password\n    );\n    let user = await this.client.auth\n      .loginWithCredential(credentials)\n      .then((result) => {\n        console.log(\"Sign In Successful\");\n        console.log(result);\n        return result;\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    return user;\n  };\n  confirmMail = async (token, tokenId) => {\n    const emailPassClient = Stitch.defaultAppClient.auth.getProviderClient(\n      UserPasswordAuthProviderClient.factory\n    );\n    let result = await emailPassClient\n      .confirmUser(token, tokenId)\n      .then(() => {\n        return true;\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    return result;\n  };\n}\n\n//export default withUserContext(StitchClass);\nexport default StitchClass;\n","import React, { Component } from \"react\";\nimport { withUserContext } from \"./UserContext\";\nimport { withStitch } from \"./Stitch\";\n\nclass Home extends Component {\n  componentDidMount() {\n    console.log(this.props);\n  }\n  render() {\n    return (\n      <div>\n        <div>this is home page </div>\n      </div>\n    );\n  }\n}\nlet HomeWithUser = withUserContext(Home);\nexport default withStitch(HomeWithUser);\n","import React, { Component } from \"react\";\nimport {\n  Stitch,\n  UserPasswordAuthProviderClient,\n  UserPasswordCredential,\n} from \"mongodb-stitch-browser-sdk\";\nimport { withUserContext } from \"./UserContext\";\nimport { withStitch } from \"./Stitch\";\n\nconst INITIAL_STATE = {\n  name: \"\",\n  email: \"\",\n  passwordOne: \"\",\n  passwordTwo: \"\",\n  error: null,\n  SignUpAsUser: true,\n};\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n  onSubmit = async (event) => {\n    if (\n      this.state.name.trim() === \"\" ||\n      this.state.email.trim() === \"\" ||\n      this.state.passwordOne.trim() === \"\" ||\n      this.state.passwordTwo.trim() === \"\"\n    ) {\n      console.log(\"incomplete form\");\n      return;\n    }\n    if (this.state.passwordOne != this.state.passwordTwo) {\n      console.log(\"paswords not same\");\n      return;\n    }\n    //console.log(authData);\n    let user = await this.props.stitch\n      .signUpEmailPassword({\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.passwordOne,\n        AccountType: this.state.SignUpAsUser ? \"Organisation\" : \"User\",\n      })\n      .then((user) => {\n        console.log(user);\n        return user;\n      });\n    // let login = await this.props.stitch.SignInEmailPassword({\n    //   email: this.state.email,\n    //   password: this.state.passwordOne,\n    // });\n    console.log(user);\n    // console.log(login);\n    console.log(\"before\");\n    //this.props.stitch.addUserData(this.state.name, this.);\n    console.log(\"after\");\n  };\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  render() {\n    const {\n      name,\n      email,\n      passwordOne,\n      passwordTwo,\n\n      error,\n    } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === \"\" ||\n      email === \"\" ||\n      name === \"\";\n\n    return (\n      <div\n        className=\"d-flex py-5 align-items-center justify-content-center \"\n        onSubmit={(e) => {\n          this.onSubmit();\n          e.preventDefault();\n        }}\n      >\n        <div className=\"row rounded border align-self-center my-auto col-sm-12 col-md-9 justify-content-center bg-light  p-5\">\n          <div className=\"col-12 text-center display-4\">Sign Up</div>\n          <div\n            className=\"btn-group bg-white col-12 p-0 rounded-pill my-1\"\n            style={{\n              boxShadow:\n                \"inset -1px -1px 10px #666666,  inset 1px 1px 10px #ffffff\",\n            }}\n          >\n            <button\n              className={\n                !this.state.SignUpAsUser\n                  ? \"btn btn-danger col-6 rounded-pill\"\n                  : \"btn col-6 rounded-pill\"\n              }\n              style={\n                !this.state.SignUpAsUser\n                  ? {\n                      boxShadow: \"-5px -5px 10px #666666, 1px 1px 5px #FF6347\",\n                    }\n                  : {}\n              }\n              onClick={() => {\n                this.setState({ SignUpAsUser: false });\n              }}\n            >\n              Sign Up as an Organisation\n            </button>\n\n            <button\n              className={\n                this.state.SignUpAsUser\n                  ? \"btn btn-danger col-6 rounded-pill\"\n                  : \"btn col-6 rounded-pill\"\n              }\n              style={\n                this.state.SignUpAsUser\n                  ? {\n                      boxShadow: \"-5px -5px 10px #666666, 1px 1px 5px #FF6347\",\n                    }\n                  : {}\n              }\n              onClick={() => {\n                this.setState({ SignUpAsUser: true });\n              }}\n            >\n              Sign Up as a User\n            </button>\n          </div>\n          <input\n            name=\"name\"\n            className=\"col-12 m-1 form-control \"\n            value={name}\n            onChange={this.onChange}\n            type=\"text\"\n            placeholder=\"Name\"\n            style={{\n              boxShadow:\n                \"inset -1px -1px 3px #666666, inset 1px 1px 3px #ffffff\",\n            }}\n          />\n          <input\n            name=\"email\"\n            className=\"col-12 m-1 form-control \"\n            value={email}\n            onChange={this.onChange}\n            type=\"text\"\n            placeholder=\"Email Address\"\n            style={{\n              boxShadow:\n                \"inset -1px -1px 3px #666666, inset 1px 1px 3px #ffffff\",\n            }}\n          />\n          <input\n            name=\"passwordOne\"\n            className=\"col-12 m-1 form-control \"\n            value={passwordOne}\n            onChange={this.onChange}\n            type=\"password\"\n            placeholder=\"Password\"\n            style={{\n              boxShadow:\n                \"inset -1px -1px 3px #666666, inset 1px 1px 3px #ffffff\",\n            }}\n          />\n          <input\n            name=\"passwordTwo\"\n            className=\"col-12 m-1 form-control \"\n            value={passwordTwo}\n            onChange={this.onChange}\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            style={{\n              boxShadow:\n                \"inset -1px -1px 3px #666666, inset 1px 1px 3px #ffffff\",\n            }}\n          />\n          <button\n            class=\"btn btn-dark col-6  my-1\"\n            disabled={isInvalid}\n            type=\"submit\"\n            onClick={() => this.onSubmit()}\n            style={{\n              boxShadow: \" -1px -1px 3px #666666,  1px 1px 3px #ffffff\",\n            }}\n          >\n            Sign Up\n          </button>\n          {error && <p>{error.message}</p>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStitch(withUserContext(SignUp));\n","import React, { Component } from \"react\";\nimport {\n  Stitch,\n  UserPasswordAuthProviderClient,\n  UserPasswordCredential,\n} from \"mongodb-stitch-browser-sdk\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { withUserContext } from \"./UserContext\";\nimport { withStitch } from \"./Stitch\";\n\nclass SignUp extends Component {\n  state = { email: \"\", password: \"\" };\n\n  inputChangeHandler = (event, input) => {\n    this.setState({ [input]: event.target.value });\n  };\n  SignInHandler = async () => {\n    let authData = { email: this.state.email, password: this.state.password };\n    if (authData.email.trim() === \"\" || authData.password.trim() === \"\") {\n      return;\n    }\n    let user = await this.props.stitch\n      .SignInEmailPassword(authData)\n      .then((user) => {\n        console.log(user);\n        console.log(this.props.stitch);\n        if (user.customData.userInitialised == true) {\n          this.props.history.push(\"/Profile\");\n        } else {\n          this.props.history.push(\"/FirstLoginData\");\n        }\n        return user;\n      });\n\n    /*this.props.stitch.client\n      .callFunction(\"CheckUserData\", [\"hello\"])\n      .then((result) => {\n        console.log(result);\n      });*/\n    console.log(this.props.stitch);\n  };\n  componentDidUpdate() {\n    console.log(this.props.stitch);\n  }\n  render() {\n    return (\n      <main className=\"d-flex m-5 justify-content-center\">\n        <div className=\"row col-sm-12 col-md-9 justify-content-center bg-light shadow p-5\">\n          <div className=\"col-12 text-center display-4\">Sign In</div>\n\n          <input\n            className=\"col-12 m-1 form-control shadow\"\n            label=\"E-Mail\"\n            config={{ type: \"email\" }}\n            onChange={(event) => this.inputChangeHandler(event, \"email\")}\n          />\n          <input\n            className=\"col-12 mt-1 form-control shadow\"\n            label=\"Password\"\n            type=\"password\"\n            config={{ type: \"password\" }}\n            onChange={(event) => this.inputChangeHandler(event, \"password\")}\n          />\n          <button\n            className=\"btn btn-dark m-1 col-6 shadow\"\n            onClick={() => this.SignInHandler()}\n          >\n            Sign In\n          </button>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default withRouter(withStitch(SignUp));\n","import React, { Component } from \"react\";\nimport { withStitch } from \"./Stitch\";\n\nclass ConfirmEmail extends Component {\n  state = { confirmed: false };\n  componentDidMount() {\n    const queryParams = new URLSearchParams(this.props.location.search);\n    const token = queryParams.get(\"token\");\n    const tokenId = queryParams.get(\"tokenId\");\n    console.log(this.props);\n    this.props.stitch.confirmMail(token, tokenId).then((result) => {\n      console.log(result);\n      this.setState({ confirmed: result });\n    });\n  }\n  render() {\n    if (this.state.confirmed) {\n      return (\n        <main className=\"d-flex m-5 justify-content-center\">\n          <div className=\"row col-sm-12 col-md-9 justify-content-center bg-light shadow p-5\">\n            <div className=\"col-12 text-center display-4\">\n              Thank You For Confirming Your Email\n            </div>\n          </div>\n        </main>\n      );\n    } else {\n      return (\n        <main className=\"d-flex m-5 justify-content-center\">\n          <div className=\"row col-sm-12 col-md-9 justify-content-center bg-light shadow p-5\">\n            <div className=\"col-12 text-center display-4\">confirming ...</div>\n          </div>\n        </main>\n      );\n    }\n  }\n}\n\nexport default withStitch(ConfirmEmail);\n","import React, { Component } from \"react\";\nimport { withStitch } from \"./Stitch\";\n\nclass ResetPassword extends Component {\n  state = { confirmed: false };\n  componentDidMount() {\n    const queryUrl = window.location.search;\n    const queryParams = new URLSearchParams(queryUrl);\n    const token = queryParams.get(\"token\");\n    const tokenId = queryParams.get(\"tokenId\");\n    /*const emailPassClient = Stitch.defaultAppClient.auth.getProviderClient(\n      UserPasswordAuthProviderClient.factory\n    );\n    emailPassClient\n      .confirmUser(token, tokenId)\n      .then()\n      .catch((err) => {\n        console.log(err);\n      });*/\n  }\n  render() {\n    if (this.state.confirmed) {\n      return <div>Thank You For Confirming Your Email</div>;\n    } else {\n      return <div>confirming ...</div>;\n    }\n  }\n}\n\nexport default withStitch(ResetPassword);\n","import React, { Component } from \"react\";\nimport { withUserContext } from \"../UserContext\";\nimport SignUp from \"../SignUp\";\nimport SignIn from \"../SignIn\";\nimport { Link } from \"react-router-dom\";\n\nclass NavNonAuth extends Component {\n  render() {\n    return (\n      <div>\n        <Link to=\"/SignUp\" className=\"btn btn-dark my-2 my-sm-0\">\n          Sign Up\n        </Link>\n        <Link to=\"/SignIn\" className=\"btn btn-dark my-2 my-sm-0\">\n          Sign In\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default withUserContext(NavNonAuth);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nclass NavAuth extends Component {\n  render() {\n    return (\n      <div>\n        <Link to=\"/Profile\" className=\"btn btn-dark\">\n          {this.props.email}\n        </Link>\n        <button className=\"btn btn-dark\">Sign Out</button>\n      </div>\n    );\n  }\n}\n\nexport default NavAuth;\n","import React, { Component } from \"react\";\nimport Navbar from \"../Navbar\";\nimport { withUserContext, UserContext } from \"../UserContext\";\nimport NavNonAuth from \"./NavNonAuth\";\nimport NavAuth from \"./NavAuth\";\nimport { withStitch } from \"../Stitch\";\n\nclass NavbarAuthentication extends Component {\n  state = { user: {} };\n  //state = { user: null };\n  /*componentDidUpdate(prevProps) {\n    console.log(\"prev props\");\n    console.log(prevProps);\n    console.log(\"current props\");\n    console.log(this.props);\n    if (this.state.user != this.props.stitch.client) {\n      console.log(\"updating user\");\n      this.setState({ user: this.props.stitch.client });\n    }\n  }*/\n  componentDidUpdate() {\n    console.log(this.state.user);\n    console.log(\"navbar updated\");\n    if (this.props.user != this.state.user) {\n      console.log(\"updating navbar\");\n      console.log(this.props.user);\n      this.setState({ user: this.props.user });\n    }\n  }\n\n  render() {\n    // if (this.state.user != this.props.stitch.client) {\n    //   this.setState({ user: this.props.stitch.client });\n    // }\n    console.log(this.props.stitch.client);\n    //if (this.state.user == null || this.state.user == false) {\n    if (this.props.stitch.client.auth.activeUserAuthInfo.userId) {\n      return (\n        <div>\n          <NavAuth\n            email={\n              this.props.stitch.client.auth.activeUserAuthInfo.userProfile.data\n                .email\n            }\n          />\n        </div>\n      );\n    } else {\n      return <NavNonAuth />;\n    }\n  }\n}\n\nexport default withStitch(withUserContext(NavbarAuthentication));\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport NavbarAuthentication from \"./NavbarAuthentication\";\nclass Navbar extends Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-dark bg-dark\">\n          <div className=\"flex-grow-1\">\n            <Link className=\"navbar-brand flex-grow-1\" to=\"/\">\n              EMS\n            </Link>\n            {/* <button className=\"btn btn-dark btn-sm\">console.log(user)</button> */}\n          </div>\n          <div className=\"col-4\"></div>\n          <NavbarAuthentication />\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport { withStitch } from \"./Stitch\";\n\nclass FirstLoginData extends Component {\n  componentDidUpdate() {\n    console.log(this.props.stitch);\n  }\n  componentDidMount() {\n    console.log(this.props);\n  }\n  render() {\n    if (\n      this.props.stitch.client &&\n      this.props.stitch.client.auth &&\n      this.props.stitch.client.auth.currentUser &&\n      this.props.stitch.client.auth.currentUser.customData\n    ) {\n      if (\n        this.props.stitch.client.auth.currentUser.customData.accountType ==\n        \"User\"\n      ) {\n        return (\n          <main className=\"d-flex m-5 justify-content-center\">\n            <div className=\"row col-sm-12 col-md-9 justify-content-center bg-light shadow p-5\">\n              <div className=\"col-12 text-center display-4\">\n                New User Account\n              </div>\n              <div className=\"col-12\">Address</div>\n              <input\n                className=\"col-12 m-1 form-control shadow\"\n                label=\"E-Mail\"\n                config={{ type: \"email\" }}\n                placeholder=\"Street\"\n                onChange={(event) => this.inputChangeHandler(event, \"email\")}\n              />\n              <input\n                className=\"col-12 m-1 form-control shadow\"\n                label=\"E-Mail\"\n                config={{ type: \"email\" }}\n                placeholder=\"City\"\n                onChange={(event) => this.inputChangeHandler(event, \"email\")}\n              />\n              <input\n                className=\"col-12 m-1 form-control shadow\"\n                label=\"E-Mail\"\n                config={{ type: \"email\" }}\n                placeholder=\"State\"\n                onChange={(event) => this.inputChangeHandler(event, \"email\")}\n              />\n              <input\n                className=\"col-12 m-1 form-control shadow\"\n                label=\"Country\"\n                config={{ type: \"Country\" }}\n                placeholder=\"Country\"\n                onChange={(event) => this.inputChangeHandler(event, \"Country\")}\n              />\n              <div className=\"col-12\">Date of Birth</div>\n              <input\n                className=\"col-12 m-1 form-control shadow\"\n                type=\"date\"\n                label=\"dob\"\n                config={{ type: \"dob\" }}\n                placeholder=\"Date of Birth\"\n                onChange={(event) => this.inputChangeHandler(event, \"dob\")}\n              />\n              <div className=\"col-12\">Skills</div>\n              <input\n                className=\"col-12 m-1 form-control shadow\"\n                label=\"Skills\"\n                config={{ type: \"Skills\" }}\n                placeholder=\"Skills\"\n                onChange={(event) => this.inputChangeHandler(event, \"Skills\")}\n              />\n            </div>\n          </main>\n        );\n      } else\n        return (\n          <main className=\"d-flex m-5 justify-content-center\">\n            <div className=\"row col-sm-12 col-md-9 justify-content-center bg-light shadow p-5\">\n              <div className=\"col-12 text-center display-4\">\n                New Company Account\n              </div>\n              <div className=\"col-12\">Address</div>\n              <input\n                className=\"col-12 m-1 form-control shadow\"\n                label=\"E-Mail\"\n                config={{ type: \"email\" }}\n                placeholder=\"Street\"\n                onChange={(event) => this.inputChangeHandler(event, \"email\")}\n              />\n              <input\n                className=\"col-12 m-1 form-control shadow\"\n                label=\"E-Mail\"\n                config={{ type: \"email\" }}\n                placeholder=\"City\"\n                onChange={(event) => this.inputChangeHandler(event, \"email\")}\n              />\n              <input\n                className=\"col-12 m-1 form-control shadow\"\n                label=\"E-Mail\"\n                config={{ type: \"email\" }}\n                placeholder=\"State\"\n                onChange={(event) => this.inputChangeHandler(event, \"email\")}\n              />\n              <input\n                className=\"col-12 m-1 form-control shadow\"\n                label=\"Country\"\n                config={{ type: \"Country\" }}\n                placeholder=\"Country\"\n                onChange={(event) => this.inputChangeHandler(event, \"Country\")}\n              />\n              <div className=\"col-12\">Category</div>\n              <input\n                className=\"col-12 m-1 form-control shadow\"\n                label=\"Category\"\n                config={{ type: \"Category\" }}\n                placeholder=\"Category\"\n                onChange={(event) => this.inputChangeHandler(event, \"Category\")}\n              />\n              <div className=\"col-12\">Founded</div>\n              <input\n                className=\"col-12 m-1 form-control shadow\"\n                type=\"date\"\n                label=\"Founded\"\n                config={{ type: \"Founded\" }}\n                placeholder=\"Founded\"\n                onChange={(event) => this.inputChangeHandler(event, \"Founded\")}\n              />\n\n              <div className=\"col-12\">Specialties</div>\n              <input\n                className=\"col-12 m-1 form-control shadow\"\n                label=\"Specialties\"\n                config={{ type: \"Specialties\" }}\n                placeholder=\"Specialties\"\n                onChange={(event) =>\n                  this.inputChangeHandler(event, \"Specialties\")\n                }\n              />\n              <button className=\"btn btn-dark\">Save Details</button>\n            </div>\n          </main>\n        );\n    } else {\n      return (\n        <main className=\"d-flex m-5 justify-content-center\">\n          <div className=\"row col-sm-12 col-md-9 justify-content-center bg-light shadow p-5\">\n            <div className=\"col-12 text-center display-4\">Loading</div>\n          </div>\n        </main>\n      );\n    }\n  }\n}\n\nexport default withStitch(FirstLoginData);\n","import React, { Component } from \"react\";\nimport { withUserContext } from \"./UserContext\";\nimport { withStitch } from \"./Stitch\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min.js\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport { Stitch } from \"mongodb-stitch-browser-sdk\";\nclass Profile extends Component {\n  state = { ems: \"\", companyName: \"\", dob: \"\", designation: \"\", userName: \"\" };\n  inputChangeHandler = (event, input) => {\n    this.setState({ [input]: event.target.value });\n  };\n  FieldHandler = async () => {\n    let fieldsData = {\n      companyName: this.state.companyName,\n      ems: this.state.ems,\n      dob: this.state.dob,\n      designation: this.state.designation,\n      userName: this.state.userName,\n    };\n    if (\n      fieldsData.companyName.trim() === \"\" ||\n      fieldsData.ems.trim() === \"\" ||\n      fieldsData.designation.trim() === \"\" ||\n      fieldsData.userName.trim() === \"\"\n    ) {\n      console.log(\"errror\");\n      return;\n    }\n\n    const client = Stitch.defaultAppClient;\n    await client.callFunction(\"UpdateUserData\", [fieldsData]).then((result) => {\n      const userData = result.doc;\n      console.log(\"user data\" + userData);\n      this.props.history.push(\"/Profile\");\n      if (userData.reqFields == true) {\n        console.log(\"successfull\");\n      }\n    });\n  };\n  render() {\n    return (\n      <div\n        className=\"d-flex justify-content-center py-5 align-items-center \"\n        style={{ width: \"100%\", height: \"100%\" }}\n      >\n        <div className=\"main col-md-9 my-auto bg-light py-5 px-3\">\n          <div className=\"main-center\">\n            <h5 className=\"display-4\" style={{ fontSize: \"3vw\" }}>\n              Sign up once and watch any of our free demos.\n            </h5>\n\n            <div className=\"form-group\">\n              <label for=\"name\">User Name</label>\n              <div className=\"input-group\">\n                <span className=\"input-group-addon\">\n                  <i className=\"fa fa-user fa\" aria-hidden=\"true\"></i>\n                </span>\n                <input\n                  type=\"text\"\n                  className=\"form-control shadow\"\n                  name=\"name\"\n                  id=\"name\"\n                  placeholder=\"Enter your Company's EMS ID\"\n                  onChange={(event) =>\n                    this.inputChangeHandler(event, \"userName\")\n                  }\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label for=\"name\">Company EMS Id</label>\n              <div className=\"input-group\">\n                <span className=\"input-group-addon\">\n                  <i className=\"fa fa-user fa\" aria-hidden=\"true\"></i>\n                </span>\n                <input\n                  type=\"text\"\n                  className=\"form-control shadow\"\n                  name=\"name\"\n                  id=\"name\"\n                  placeholder=\"Enter your Company's EMS ID\"\n                  onChange={(event) => this.inputChangeHandler(event, \"ems\")}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label for=\"name\">Company Name</label>\n              <div className=\"input-group\">\n                <span className=\"input-group-addon\">\n                  <i className=\"fa fa-user fa\" aria-hidden=\"true\"></i>\n                </span>\n                <input\n                  type=\"text\"\n                  className=\"form-control shadow\"\n                  name=\"name\"\n                  id=\"name\"\n                  placeholder=\"Enter your Company Name\"\n                  onChange={(event) =>\n                    this.inputChangeHandler(event, \"companyName\")\n                  }\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label for=\"email\">Your Designation</label>\n              <div className=\"input-group\">\n                <span className=\"input-group-addon\">\n                  <i className=\"fa fa-envelope fa\" aria-hidden=\"true\"></i>\n                </span>\n                <input\n                  type=\"text\"\n                  className=\"form-control shadow\"\n                  name=\"email\"\n                  placeholder=\"Enter your Designation\"\n                  onChange={(event) =>\n                    this.inputChangeHandler(event, \"designation\")\n                  }\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label for=\"username\">Date of Birth</label>\n              <div className=\"input-group\">\n                <span className=\"input-group-addon\">\n                  <i className=\"fa fa-users fa\" aria-hidden=\"true\"></i>\n                </span>\n                <input\n                  type=\"date\"\n                  className=\"form-control shadow\"\n                  name=\"username\"\n                  placeholder=\"Enter your DOB\"\n                  onChange={(event) => this.inputChangeHandler(event, \"dob\")}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label for=\"password\">Password</label>\n              <div className=\"input-group\">\n                <span className=\"input-group-addon\">\n                  <i className=\"fa fa-lock fa-lg\" aria-hidden=\"true\"></i>\n                </span>\n                <input\n                  type=\"password\"\n                  className=\"form-control shadow\"\n                  name=\"password\"\n                  placeholder=\"Enter your Password\"\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label for=\"confirm\">Confirm Password</label>\n              <div className=\"input-group shadow\">\n                <span className=\"input-group-addon\">\n                  <i className=\"fa fa-lock fa-lg\" aria-hidden=\"true\"></i>\n                </span>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  name=\"confirm\"\n                  placeholder=\"Confirm your Password\"\n                />\n              </div>\n            </div>\n\n            <button\n              className=\"btn px-5 btn-dark\"\n              type=\"submit\"\n              onClick={() => this.FieldHandler()}\n            >\n              SUBMIT\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(withStitch(withUserContext(Profile)));\n","import React, { Component } from \"react\";\n\nclass CommunicationsPage extends Component {\n  render() {\n    return <div className=\"bg-dark\">Comms</div>;\n  }\n}\n\nexport default CommunicationsPage;\n","import React, { Component } from \"react\";\nimport { withUserContext, UserContext } from \"./UserContext\";\nimport { withStitch } from \"./Stitch\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min.js\";\nimport \"./Profile.css\";\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    console.log(props);\n  }\n  static contextType = UserContext;\n\n  render() {\n    const { updateUser } = this.context;\n\n    const user = this.props.stitch.client.auth.currentUser.customData;\n\n    return (\n      <div className=\"container emp-profile\">\n        <form method=\"post\">\n          <div className=\"row\">\n            <div className=\"col-md-4\">\n              <div className=\"profile-img\">\n                {/* <img\n                  src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS52y5aInsxSm31CvHOFHWujqUx_wWTS9iM6s7BAm21oEN_RiGoog\"\n                  alt=\"\"\n               />*/}\n                <img\n                  src=\"https://www.pngitem.com/pimgs/m/30-307416_profile-icon-png-image-free-download-searchpng-employee.png\"\n                  alt=\"user profile here\"\n                ></img>\n                <div className=\"file btn btn-lg btn-primary\">\n                  Change Photo\n                  <input className=\"btn btn-dark\" type=\"file\" name=\"file\" />\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"profile-head\">\n                <h6>{user.userName ? user.userName : \"UserName\"}</h6>\n                <p className=\"proile-rating\">\n                  RANKINGS : <span>8/10</span>\n                </p>\n                <ul className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n                  <li className=\"nav-item\">\n                    <a\n                      className=\"nav-link active\"\n                      id=\"home-tab\"\n                      data-toggle=\"tab\"\n                      href=\"#home\"\n                      role=\"tab\"\n                      aria-controls=\"home\"\n                      aria-selected=\"true\"\n                    >\n                      About\n                    </a>\n                  </li>\n                  <li className=\"nav-item\">\n                    <a\n                      className=\"nav-link\"\n                      id=\"profile-tab\"\n                      data-toggle=\"tab\"\n                      href=\"#profile\"\n                      role=\"tab\"\n                      aria-controls=\"profile\"\n                      aria-selected=\"false\"\n                    >\n                      Timeline\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <div className=\"col-md-2\">\n              <input\n                type=\"submit\"\n                className=\"profile-edit-btn\"\n                name=\"btnAddMore\"\n                value=\"Edit Profile\"\n              />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-4\">\n              <div className=\"profile-work\">\n                <p>WORK LINK</p>\n                <a href=\"\">Website Link</a>\n                <br />\n                <a href=\"\">Bootsnipp Profile</a>\n                <br />\n                <a href=\"\">Bootply Profile</a>\n                <p>SKILLS</p>\n                <a href=\"\">Web Designer</a>\n                <br />\n                <a href=\"\">Web Developer</a>\n                <br />\n                <a href=\"\">WordPress</a>\n                <br />\n                <a href=\"\">WooCommerce</a>\n                <br />\n                <a href=\"\">PHP, .Net</a>\n                <br />\n              </div>\n            </div>\n            <div className=\"col-md-8\">\n              <div className=\"tab-content profile-tab\" id=\"myTabContent\">\n                <div\n                  className=\"tab-pane fade show active\"\n                  id=\"home\"\n                  role=\"tabpanel\"\n                  aria-labelledby=\"home-tab\"\n                >\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <label>User Id</label>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <p>{user.userId}</p>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <label>Company Name</label>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <p>{user.companyName}</p>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <label>Company EMS iD</label>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <p>{user.ems_id}</p>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <label>Phone</label>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <p>123 456 7890</p>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <label>Profession</label>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <p>Web Developer and Designer</p>\n                    </div>\n                  </div>\n                </div>\n                <div\n                  className=\"tab-pane fade\"\n                  id=\"profile\"\n                  role=\"tabpanel\"\n                  aria-labelledby=\"profile-tab\"\n                >\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <label>Experience</label>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <p>Expert</p>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <label>Hourly Rate</label>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <p>10$/hr</p>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <label>Total Projects</label>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <p>230</p>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <label>English Level</label>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <p>Expert</p>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <label>Availability</label>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <p>6 months</p>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-md-12\">\n                      <label>Your Bio</label>\n                      <br />\n                      <p>Your detail description</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\nexport default withStitch(withUserContext(Profile));\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { withUserContext } from \"./UserContext\";\nimport { withStitch } from \"./Stitch\";\n\n//import User, { UserContext } from \"./UserContext\";\n//import StitchClass, { StitchContext } from \"./Stitch\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min.js\";\n\nimport Home from \"./Home\";\nimport SignUp from \"./SignUp\";\nimport SignIn from \"./SignIn\";\nimport ConfirmEmail from \"./ConfirmEmail\";\nimport ResetPassword from \"./ResetPassword\";\nimport Navbar from \"./Navbar\";\nimport FirstLoginData from \"./FirstLoginData\";\nimport CommuncationsPage from \"./Communications\";\n\n//\nimport InputFields from \"./InputFields\";\nimport Profile from \"./Profile\";\nimport bg from \"./ElCapitan.jpg\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      auth: null,\n    };\n  }\n  componentDidUpdate() {\n    if (this.state.auth != this.props.stitch.auth) {\n      console.log(this.props.stitch);\n      this.setState({ auth: this.props.stitch.auth });\n    }\n  }\n  componentDidMount() {\n    this.updateUserData();\n  }\n  updateUserData = async () => {\n    if (this.props.stitch.client.auth.currentUser) {\n      console.log(\"Refreshing user data on page refresh\");\n      let res = await this.props.stitch.client.auth.refreshCustomData();\n      console.log(\"current User\" + this.props.stitch.client.auth.currentUser);\n      this.setState({\n        user: this.props.stitch.client.auth.currentUser.customData,\n      });\n    } else {\n      console.log(\"user not logged in \");\n    }\n  };\n  updateValue = (val) => {\n    this.setState({ user: val });\n  };\n\n  render() {\n    return (\n      <Router basename=\"/\">\n        <div style={{ minHeight: \"100vh\" }}>\n          <img\n            src={bg}\n            style={{\n              height: \"100vh\",\n              width: \"100%\",\n              zIndex: -2,\n              position: \"fixed\",\n              objectFit: \"cover\",\n            }}\n          ></img>\n          <Navbar />\n          <Switch>\n            <Route path=\"/SignUp\">\n              <SignUp />\n            </Route>\n            <Route path=\"/SignIn\">\n              <SignIn />\n            </Route>\n            <Route path=\"/FirstLoginData\">\n              <FirstLoginData />\n            </Route>\n            <Route path=\"/InputFields\">\n              <InputFields />\n            </Route>\n            <Route path=\"/Profile\">\n              <Profile />\n            </Route>\n            <Route path=\"/ConfirmMail\" component={ConfirmEmail} />\n            <Route path=\"/ResetPassword\">\n              <ResetPassword />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\nexport default withStitch(withUserContext(App));\n\n/*\nclass App extends Component {\n  state = { temp: 0 };\n  updateUserData = async () => {\n    console.log(this.props.stitch);\n    if (this.props.stitch.client.auth.currentUser) {\n      console.log(\"refreshing user data on page refresh\");\n      let res = await this.props.stitch.client.auth.refreshCustomData();\n      console.log(this.props.stitch.client.auth.currentUser);\n      this.props.user.updateUser(this.props.stitch.client.auth.currentUser);\n      console.log(this.props.user);\n    } else {\n      console.log(\"user not logged in\");\n    }\n  };\n  componentDidMount() {\n    this.updateUserData();\n    this.props.user.setUpdater(this.updated);\n  }\n  updated = () => {\n    console.log(\"changing app.js state\");\n    //console.log(this.props.user);\n    this.setState({ temp: this.state.temp + 1 });\n  };\n\n  render() {\n    return (\n      <Router basename=\"/\">\n        <div>\n          <Navbar />\n          <Switch>\n            <Route path=\"/SignUp\">\n              <SignUp />\n            </Route>\n            <Route path=\"/SignIn\">\n              <SignIn />\n            </Route>\n            <Route path=\"/FirstLoginData\">\n              <FirstLoginData />\n            </Route>\n            <Route path=\"/Communications\">\n              <CommuncationsPage />\n            </Route>\n            <Route path=\"/ConfirmMail\" component={ConfirmEmail} />\n            <Route path=\"/ResetPassword\">\n              <ResetPassword />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default withStitch(withUserContext(App));\n//export default App;\n*/\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport User, { UserContext } from \"./components/UserContext\";\nimport StitchClass, { StitchContext } from \"./components/Stitch\";\n\n/*ReactDOM.render(\n  <StitchContext.Provider value={new StitchClass()}>\n    <UserContext.Provider value={new User()}>\n      <App></App>\n    </UserContext.Provider>\n  </StitchContext.Provider>,\n  document.getElementById(\"root\")\n);*/\n\nclass Index extends Component {\n  render() {\n    return (\n      <StitchContext.Provider value={new StitchClass()}>\n        <UserContext.Provider value={new User()}>\n          <App></App>\n        </UserContext.Provider>\n      </StitchContext.Provider>\n    );\n  }\n}\n\nReactDOM.render(<Index />, document.getElementById(\"root\"));\n\n//ReactDOM.render(<App></App>, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}